{"config":{"lang":["en","hi"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to High School Computer Science","text":"<p>Here you'll learn all about Computer Science in crisp and byte-sized lessons in a practical manner https://deepsai8.github.io/hscs/.</p>"},{"location":"#links","title":"Links","text":""},{"location":"#we-will-try-to-make-things-as-intuitive-as-possible","title":"We will try to make things as intuitive as possible!","text":""},{"location":"chapters/chapter01/","title":"Unit I: COMPUTER SYSTEM","text":""},{"location":"chapters/chapter01/#introduction","title":"Introduction","text":"<p>In today's digital world, computers are an integral part of our daily lives, from school and work to entertainment and communication. But what exactly is a computer, and how does it work? In this unit, we will explore the essential components of a computer system, the types of memory it uses, the role of software, and the evolution of computers from early machines to today's advanced systems. We'll also look at how computers process data, the languages we use to communicate with them, and how operating systems manage the entire system.</p>"},{"location":"chapters/chapter01/#1-central-processing-unit-cpu","title":"1. Central Processing Unit (CPU)","text":"<ul> <li> <p>The Central Processing Unit (CPU) is the heart of the computer, often referred to as the \"brain\" of the machine. It performs the calculations and executes the instructions needed for computer programs to function. Think of it as the boss that directs everything happening inside the computer.</p> </li> <li> <p>Control Unit (CU): The part of the CPU that interprets instructions and directs the operation of the computer\u2019s other components.</p> </li> <li> <p>Arithmetic Logic Unit (ALU): This component performs all arithmetic (addition, subtraction, etc.) and logical (comparisons like greater than, less than) operations.</p> </li> </ul>"},{"location":"chapters/chapter01/#2-inputoutput-devices-io-devices","title":"2. Input/Output Devices (I/O Devices):","text":"<ul> <li>Input Devices: These allow us to interact with the computer by providing it with data or instructions. Examples include:</li> <li>Keyboard: Used to input text.</li> <li> <p>Mouse: Used to point and click, allowing users to navigate and interact with the computer's graphical user interface.</p> </li> <li> <p>Output Devices: These show the results of the computer's processes. Common examples include:</p> </li> <li>Monitor: Displays visual output like images and text.</li> <li>Printer: Produces a physical copy of documents.</li> </ul>"},{"location":"chapters/chapter01/#3-evolution-of-computers","title":"3. Evolution of Computers:","text":"<p>Computers have a fascinating history of development that spans several centuries. From the earliest mechanical devices to the modern high-tech systems we use today, computers have undergone tremendous changes in terms of size, speed, and capabilities. The evolution of computers can be broken down into five distinct generations:</p>"},{"location":"chapters/chapter01/#1st-generation-1940-1956-vacuum-tubes","title":"1st Generation (1940-1956): Vacuum Tubes","text":"<ul> <li>Technology: First-generation computers used vacuum tubes to process and store data. These tubes were large, fragile, and consumed a lot of power.</li> <li>Size &amp; Characteristics: These computers were massive, filling entire rooms. They produced a lot of heat and were prone to frequent malfunctions.</li> <li>Examples: <ul> <li>ENIAC (Electronic Numerical Integrator and Computer): One of the first general-purpose computers, used for calculations.  </li> <li>UNIVAC (Universal Automatic Computer): The first computer to be sold commercially.  </li> </ul> </li> <li>Programming Language: Machine language was used, consisting of binary codes (0s and 1s) to communicate with the computer.</li> <li>Main Features: Slow, limited processing capabilities, very expensive, and used mostly for scientific and military purposes.</li> </ul>"},{"location":"chapters/chapter01/#2nd-generation-1956-1963-transistors","title":"2nd Generation (1956-1963): Transistors","text":"<ul> <li>Technology: Vacuum tubes were replaced by transistors, which were smaller, faster, more energy-efficient, and more reliable.</li> <li>Size &amp; Characteristics: Computers became smaller, cheaper, and less power-hungry, although still quite large compared to today\u2019s standards.</li> <li>Examples:<ul> <li>IBM 7094: Used for business data processing.  </li> <li>CDC 1604: One of the first computers designed for control systems.  </li> </ul> </li> <li>Programming Language: Assembly language was introduced, making it easier to write programs than with machine language.</li> <li>Main Features: Faster processing, reduced heat production, and more practical for commercial and business use.</li> </ul>"},{"location":"chapters/chapter01/#3rd-generation-1964-1971-integrated-circuits-ics","title":"3rd Generation (1964-1971): Integrated Circuits (ICs)","text":"<ul> <li>Technology: The invention of integrated circuits (ICs), which integrated many transistors on a single chip, revolutionized computing.</li> <li>Size &amp; Characteristics: Computers became much smaller, faster, more reliable, and cheaper. They also became available for business and commercial uses.</li> <li>Examples:<ul> <li>IBM 360 Series: One of the most popular and widely used computer series of this generation.</li> <li>PDP-8: A smaller, more affordable computer used by universities and research centers.</li> </ul> </li> <li>Programming Language: High-level programming languages like FORTRAN and COBOL were developed.</li> <li>Main Features: Increased processing power, more affordable, and used in many industries beyond government and research.</li> </ul>"},{"location":"chapters/chapter01/#4th-generation-1971-present-microprocessors","title":"4th Generation (1971-Present): Microprocessors","text":"<ul> <li>Technology: This generation is defined by the development of microprocessors, which integrate the CPU onto a single chip. This made computers more affordable and accessible.</li> <li>Size &amp; Characteristics: Computers became small enough to fit on a desk or in a home. The personal computer (PC) revolution began.</li> <li>Examples:<ul> <li>Intel 4004: The first commercially available microprocessor, marking the beginning of the microprocessor revolution.</li> <li>IBM PC: Popularized the personal computer, making it accessible to the average consumer.</li> </ul> </li> <li>Programming Language: Higher-level languages like C and C++ became widely used.</li> <li>Main Features: Mass production of personal computers, introduction of graphical user interfaces (GUIs), and exponential increases in speed and storage.</li> </ul>"},{"location":"chapters/chapter01/#5th-generation-present-and-beyond-artificial-intelligence-ai","title":"5th Generation (Present and Beyond): Artificial Intelligence (AI)","text":"<ul> <li>Technology: The fifth generation is focused on artificial intelligence (AI) and quantum computing. Computers are now using AI to simulate human intelligence and decision-making.</li> <li>Size &amp; Characteristics: The size of computers has drastically reduced (e.g., smartphones), while processing power and storage have exploded. Quantum computers, though still experimental, are showing promise for solving problems far beyond the capacity of classical computers.</li> <li>Examples:<ul> <li>IBM Watson: An AI system capable of understanding and answering natural language questions.</li> <li>Quantum Computers: Though still in development, quantum computers have the potential to solve complex problems at unimaginable speeds.</li> </ul> </li> <li>Main Features: Machine learning, neural networks, and natural language processing are shaping the future of computing. Devices are interconnected through the Internet of Things (IoT), and the rise of cloud computing is changing how data is stored and processed.</li> </ul> <p>Summary of Evolution of Computers: - From Mechanical to Digital: The first computers were mechanical, using gears and levers (like Charles Babbage\u2019s Analytical Engine). Over time, computers became digital, using electronic components like vacuum tubes, transistors, and integrated circuits. - Smaller, Faster, Smarter: As technology progressed, computers became smaller, faster, cheaper, and smarter. The focus has now shifted to artificial intelligence and the potential for quantum computing.</p>"},{"location":"chapters/chapter01/#computer-memory","title":"Computer Memory","text":"<p>Memory in a computer refers to the components that store data. Here's a detailed breakdown:</p>"},{"location":"chapters/chapter01/#units-of-memory","title":"Units of Memory:","text":"<ul> <li>Bit (b): The smallest unit of data in a computer, representing a binary value (0 or 1).</li> <li>Byte (B): A collection of 8 bits, typically representing one character of data (like a letter or number).</li> <li>Larger units of memory include:     Kilobyte (KB): 1,024 bytes      Megabyte (MB): 1,024 KB      Gigabyte (GB): 1,024 MB      Terabyte (TB): 1,024 GB </li> </ul>"},{"location":"chapters/chapter01/#types-of-memory","title":"Types of Memory:","text":"<ol> <li> <p>Primary Memory (Main Memory): RAM (Random Access Memory): Temporary storage used by the CPU to store data that is being actively used or processed. It is volatile,  meaning it is erased when the power is turned off.     ROM (Read-Only Memory): Permanent storage that holds critical instructions for booting up the system and hardware functions. Unlike  RAM, it is non-volatile.</p> </li> <li> <p>Cache Memory:     A special type of high-speed memory located close to the CPU. It stores frequently accessed data to speed up processing. Cache memory is  faster but smaller than RAM.</p> </li> <li> <p>Secondary Memory (External Storage):     Non-volatile memory used for long-term data storage. Examples include hard drives (HDDs), solid-state drives (SSDs), optical disks (CDs/ DVDs), and USB flash drives.</p> </li> </ol> <p>Fun Fact: Imagine primary memory as your computer\u2019s \u201cworking memory.\u201d It\u2019s like your brain\u2019s short-term memory. You can only keep a few things in it at once (limited space), but it\u2019s really fast. Secondary memory is more like your long-term memory, where you store everything but access it more slowly.</p>"},{"location":"chapters/chapter01/#microprocessor","title":"Microprocessor","text":""},{"location":"chapters/chapter01/#evolution-of-the-microprocessor","title":"Evolution of the Microprocessor","text":"<p>The microprocessor is a tiny but powerful component that revolutionized computing by integrating the functions of a CPU into a single chip. Early computers, like ENIAC in the 1940s, used massive, room-sized machines with thousands of vacuum tubes to process data. These machines were slow, consumed a lot of power, and could handle only simple tasks.</p> <p>In 1971, Intel developed the first microprocessor, the Intel 4004, which could process data and instructions on a single chip, the size of a fingernail! This was a game-changer in making computers smaller, faster, and more affordable. Over time, microprocessors have evolved:</p> <ul> <li>1970s-1980s: Early microprocessors like the Intel 8080 (used in early PCs) could handle basic tasks. They had limited speed and memory.  </li> <li>1990s: The rise of Pentium processors brought significant improvements in speed, multitasking, and graphical performance, allowing for more complex applications and the start of the personal computer revolution.  </li> <li>2000s and beyond: Modern microprocessors, like Intel Core i7 or AMD Ryzen, are capable of handling billions of instructions per second, feature multiple cores for multitasking, and are found not just in computers, but in smartphones, cars, and household appliances!</li> </ul> <p>Each generation of microprocessors has become more efficient, faster, and more versatile, making today's devices more powerful than ever.</p>"},{"location":"chapters/chapter01/#features-of-microprocessors","title":"Features of Microprocessors","text":"<ol> <li> <p>Speed (Measured in Gigahertz or GHz): The speed of a microprocessor refers to how many cycles per second it can execute, measured in gigahertz (GHz). A microprocessor running at 3 GHz can execute 3 billion cycles per second. Faster processors allow computers to run applications quicker and handle more complex tasks.</p> </li> <li> <p>Multiple Cores for Multitasking: Modern microprocessors often come with multiple cores, allowing them to perform several tasks at once. Each core functions like a separate processor. For example, a quad-core processor can handle four tasks simultaneously, making it ideal for multitasking, such as browsing the web while editing a document.</p> </li> <li> <p>Power Efficiency for Portable Devices: As technology advanced, microprocessors became more power-efficient, crucial for mobile devices like smartphones and tablets. These processors are designed to consume less power while maintaining performance, ensuring that portable devices have long battery life.</p> </li> </ol>"},{"location":"chapters/chapter01/#software-purpose-and-types","title":"Software: Purpose and Types","text":""},{"location":"chapters/chapter01/#system-software","title":"System Software","text":"<p>System software is essential for managing and controlling computer hardware so that the application software can function. It's the bridge between the hardware and user applications. Without system software, the computer wouldn't know how to function properly.</p> <ul> <li>Examples:<ul> <li>Operating System: Manages hardware resources, runs applications, and provides a user interface. Popular OS examples include Windows, MacOS, Linux, and Android.  </li> <li>Device Drivers: These are specialized programs that allow hardware devices (like printers, keyboards, and webcams) to communicate with the computer system. Without the right drivers, your hardware wouldn't work with the computer.</li> </ul> </li> </ul>"},{"location":"chapters/chapter01/#application-software","title":"Application Software","text":"<p>Application software consists of programs that help users accomplish specific tasks. These are the everyday programs that people interact with for productivity, entertainment, and more.</p> <ul> <li>Examples: <ul> <li>Word Processors: Programs like Microsoft Word or Google Docs, which allow you to write, edit, and format documents.</li> <li>Games: From simple games like Minesweeper to complex titles like Minecraft or Fortnite.</li> <li>Web Browsers: Programs like Google Chrome, Firefox, or Safari that allow you to surf the web.</li> </ul> </li> </ul>"},{"location":"chapters/chapter01/#language-translators","title":"Language Translators","text":"<p>Computers operate using binary code (1s and 0s), which is difficult for humans to write and understand. Language translators convert human-readable code into machine-readable instructions.</p> <ul> <li>Compilers: These translate the entire source code (written by a programmer) into machine code before the program is run. For example, C++ uses a compiler.</li> <li>Interpreters: These translate the source code into machine code line-by-line as the program runs. Python uses an interpreter, which allows you to run code interactively.</li> </ul>"},{"location":"chapters/chapter01/#device-drivers","title":"Device Drivers","text":"<p>Device drivers are specialized programs that help your operating system communicate with hardware components. For example, when you plug in a new printer, a device driver helps your computer \"speak\" to it so that you can print your documents.</p> <ul> <li>Examples: Printer drivers, display drivers, audio drivers, etc.</li> </ul>"},{"location":"chapters/chapter01/#classification-of-programming-languages","title":"Classification of Programming Languages","text":""},{"location":"chapters/chapter01/#high-level-language","title":"High-Level Language","text":"<p>High-level languages are designed to be user-friendly, using words and syntax that are easy for humans to read and write. These languages need to be translated into machine language (binary code) for computers to understand.</p> <ul> <li>Examples: Popular high-level languages include Python, Java, and C++. </li> <li>Fun Example: Imagine you are giving directions to a friend. In a high-level language, you could say, \"Turn left at the next traffic light, then take the second right.\" This is simple for humans to understand, but a computer needs more specific, detailed instructions!</li> </ul>"},{"location":"chapters/chapter01/#machine-language","title":"Machine Language","text":"<p>Machine language, or binary code, is the low-level language that computers natively understand. It consists of a series of 1s and 0s. Every operation, such as adding two numbers or saving a file, is translated into a unique pattern of binary instructions that the computer can execute.</p> <ul> <li>Example: \"01010101\" may look confusing to us, but it\u2019s how a computer knows what to do. Machine language is hard for humans to write directly but very fast for computers to process.</li> </ul>"},{"location":"chapters/chapter01/#operating-system-os","title":"Operating System (OS)","text":""},{"location":"chapters/chapter01/#need-for-an-operating-system","title":"Need for an Operating System","text":"<p>An operating system (OS) is crucial because it allows users to interact with the computer\u2019s hardware and software without needing to understand the low-level details of how everything works. It acts as a mediator between the hardware and the user.</p>"},{"location":"chapters/chapter01/#functions-of-an-operating-system","title":"Functions of an Operating System","text":"<ol> <li>Manages Memory and Processes: The OS manages a computer's memory and the programs that are running. It decides which applications get access to memory and CPU time.</li> <li>Handles Input and Output: The OS manages input from devices like keyboards and mice and output to monitors and printers.</li> <li> <p>Provides a User Interface (UI): The UI is the graphical interface you interact with, like the desktop, icons, and taskbars. This makes it easy to use a computer without knowing machine language.</p> </li> <li> <p>Fun Example: The OS is like a conductor in an orchestra, making sure all the instruments (hardware and software) play together harmoniously.</p> </li> </ol>"},{"location":"chapters/chapter01/#important-terminology","title":"Important Terminology:","text":"<ul> <li>CPU (Central Processing Unit): The main processor in a computer that performs calculations and carries out instructions.</li> <li>I/O Devices (Input/Output Devices): Devices that allow interaction with the computer.</li> <li>Data: Raw, unprocessed facts.</li> <li>Information: Data that has been processed and organized to be useful.</li> <li>Memory: Storage that allows the computer to keep track of data and instructions.</li> <li>Microprocessor: The main processing chip in the CPU.</li> <li>Software: Programs that give instructions to the computer.</li> <li>Generic Software: Programs used for general tasks, such as word processing.</li> <li>Specific Purpose Software: Programs designed for specific tasks, such as video editing.</li> <li>High-Level Language: Programming languages that are easy for humans to understand.</li> <li>Machine Language: The basic language of computers made of binary code.</li> <li>Operating System (OS): Software that manages the computer's hardware and software resources.</li> <li>Device Drivers: Specialized programs that help the operating system communicate with hardware.</li> </ul>"},{"location":"chapters/chapter01/#fun-example","title":"Fun Example:","text":"<p>Imagine the CPU as the chef in a restaurant. The chef (CPU) receives orders from the customers (input), processes the ingredients (data), and delivers a meal (output) to the customers. The kitchen's storage (memory) holds the ingredients (data) the chef needs to prepare the food. The chef works faster if the recipe (software) is optimized for efficient cooking!</p>"},{"location":"chapters/chapter01/#unit-i-quiz","title":"Unit I Quiz:","text":"<ol> <li> <p>Which part of the computer is known as the brain of the system?     a) Input Unit     b) Output Unit     c) Central Processing Unit (CPU)     d) Memory  </p> </li> <li> <p>True or False: ROM is a type of memory that stores data temporarily. </p> </li> <li> <p>What type of software manages hardware resources?     a) Application Software     b) System Software     c) Device Drivers     d) Language Translators  </p> </li> <li> <p>Fill in the blank: A microprocessor is a ______ used in the CPU to perform operations. </p> </li> <li> <p>Which of the following is a high-level programming language?     a) Binary Code     b) Python     c) Machine Code     d) None of the above  </p> </li> <li> <p>True or False: Specific purpose software is designed for general everyday tasks like word processing. </p> </li> <li> <p>Which type of memory is faster but smaller than RAM?     a) Cache Memory     b) Hard Drive     c) ROM     d) SSD  </p> </li> <li> <p>What is the role of device drivers in a computer?     a) Store data     b) Translate high-level languages     c) Manage processes     d) Help the OS communicate with hardware devices  </p> </li> <li> <p>True or False: The operating system controls the flow of data between the CPU and memory. </p> </li> <li> <p>Which of the following is an output device?     a) Keyboard     b) Printer     c) Mouse     d) Scanner  </p> </li> </ol>"},{"location":"chapters/chapter01/#quiz-answers","title":"Quiz Answers:","text":"<ol> <li>c) Central Processing Unit (CPU)</li> <li>False</li> <li>b) System Software</li> <li>Microprocessor</li> <li>b) Python</li> <li>False</li> <li>a) Cache Memory</li> <li>d) Help the OS communicate with hardware devices</li> <li>True</li> <li>b) Printer</li> </ol>"},{"location":"chapters/chapter02/","title":"Unit 2: Encoding Schemes and Number Systems","text":""},{"location":"chapters/chapter02/#introduction","title":"Introduction:","text":"<p>In this unit, we\u2019ll explore how computers represent data using encoding schemes and different number systems. While humans typically think in terms of decimal numbers (0-9), computers communicate and store information using other systems, like binary (0 and 1). You\u2019ll also learn how to convert between different number systems, which is a fundamental skill in computer science. Let\u2019s break down these concepts and make them fun and easy to understand!</p>"},{"location":"chapters/chapter02/#21-encoding-schemes","title":"2.1 Encoding Schemes:","text":"<p>Computers work with numbers, not letters or symbols. To help computers understand our alphabets, numbers, and even emojis, encoding schemes are used. An encoding scheme converts characters (like letters and punctuation) into numeric codes so that computers can store and process them.</p>"},{"location":"chapters/chapter02/#ascii-american-standard-code-for-information-interchange","title":"ASCII (American Standard Code for Information Interchange):","text":"<p>ASCII was developed as one of the earliest encoding schemes to standardize how computers represent text and symbols. It uses 7 bits to encode 128 different characters, including: - Uppercase and lowercase letters (A-Z, a-z) - Numbers (0-9) - Special symbols (such as @, &amp;, #, and punctuation marks) - Control characters (like Enter, Tab, and Backspace)</p> <p>Example: - The ASCII code for the letter A is 65. - The ASCII code for the symbol @ is 64.</p> <p>However, ASCII is limited. Since it uses only 7 bits, it can only represent 128 characters, which is not enough for languages other than English or for newer symbols like emojis.</p>"},{"location":"chapters/chapter02/#unicode","title":"UNICODE:","text":"<p>To address the limitations of ASCII, UNICODE was developed. It can represent over 143,000 characters from a variety of languages and symbol sets, making it a universal encoding scheme. UNICODE uses 16 bits or more to represent characters, allowing it to handle different writing systems such as: - Latin (for English and other languages) - Cyrillic (for Russian and related languages) - Chinese characters - Emojis (Yes, even your favorite emojis like \ud83d\ude03 have unique UNICODE numbers!)</p> <p>UNICODE has become the global standard for encoding characters in digital text, ensuring that all languages and symbols can be represented consistently across different platforms.</p> <p>Example: The smiley emoji \ud83d\ude03 has a UNICODE value of U+1F603.</p> <p>Why is UNICODE important? With the world connected through the internet, we need a system that represents characters from every language. Whether you're writing in English, Russian, or Japanese, or sending an emoji, UNICODE makes sure the computer understands what you\u2019re saying.</p>"},{"location":"chapters/chapter02/#22-number-systems","title":"2.2 Number Systems:","text":"<p>In computing, different number systems are used to represent and process data. While we humans typically use the decimal system (Base 10), computers use the binary system (Base 2) because they can only process two states: on (1) and off (0).</p>"},{"location":"chapters/chapter02/#decimal-number-system-base-10","title":"Decimal Number System (Base 10):","text":"<p>The decimal system is the one we use every day. It\u2019s called Base 10 because it uses ten digits: 0, 1, 2, 3, 4, 5, 6, 7, 8, and 9. We can represent any number using these digits by placing them in positions that are powers of 10.</p> <p>Example: - The number 125 in decimal is represented as:   [   1 \\times 10^2 + 2 \\times 10^1 + 5 \\times 10^0 = 100 + 20 + 5 = 125   ]</p> <p>This is how we naturally count, but it\u2019s not suitable for computers.</p>"},{"location":"chapters/chapter02/#binary-number-system-base-2","title":"Binary Number System (Base 2):","text":"<p>Computers use the binary system, which is based on two digits: 0 and 1. This system is called Base 2 because it only has two possible values. Every binary digit (bit) represents a power of 2, just as every decimal digit represents a power of 10.</p> <p>Example: - The binary number 101 means:   [   1 \\times 2^2 + 0 \\times 2^1 + 1 \\times 2^0 = 4 + 0 + 1 = 5   ]</p> <p>While binary numbers may seem long, they are crucial for computers because they map directly to the on/off states of electronic circuits.</p> <p>Fun Fact: Think of binary like a light switch: 1 means \"on\" and 0 means \"off.\" Your computer is flipping millions of these \"switches\" every second to perform tasks!</p>"},{"location":"chapters/chapter02/#octal-number-system-base-8","title":"Octal Number System (Base 8):","text":"<p>The octal system uses eight digits: 0, 1, 2, 3, 4, 5, 6, and 7, and is based on Base 8. It was commonly used in early computers because it\u2019s easier to convert between binary and octal than between binary and decimal.</p> <p>Example: - The octal number 17 means:   [   1 \\times 8^1 + 7 \\times 8^0 = 8 + 7 = 15 \\text{ in decimal}   ]</p>"},{"location":"chapters/chapter02/#hexadecimal-number-system-base-16","title":"Hexadecimal Number System (Base 16):","text":"<p>The hexadecimal system uses 16 symbols: the digits 0-9 and the letters A-F, where: - A = 10 - B = 11 - C = 12 - D = 13 - E = 14 - F = 15</p> <p>This system is very useful in computing because it allows large binary numbers to be represented more compactly.</p> <p>Example: - The hexadecimal number 1A means:   [   1 \\times 16^1 + A \\times 16^0 = 16 + 10 = 26 \\text{ in decimal}   ]</p> <p>Why Hexadecimal? Hexadecimal is often used in programming and computing because it\u2019s easier to work with than long strings of binary numbers. For example, the binary number 11111111 can be written more compactly as FF in hexadecimal.</p>"},{"location":"chapters/chapter02/#23-converting-between-number-systems","title":"2.3 Converting Between Number Systems:","text":"<p>Understanding how to convert between different number systems is a core skill in computer science. Let\u2019s look at some conversion techniques:</p>"},{"location":"chapters/chapter02/#decimal-to-binary","title":"Decimal to Binary:","text":"<p>To convert a decimal number to binary: 1. Divide the decimal number by 2. 2. Write down the remainder (0 or 1). 3. Continue dividing the result by 2, writing down the remainders, until the quotient is 0. 4. The binary number is the sequence of remainders read in reverse order.</p> <p>Example: Convert 13 to binary. 13 \u00f7 2 = 6 remainder 1 6 \u00f7 2 = 3 remainder 0 3 \u00f7 2 = 1 remainder 1 1 \u00f7 2 = 0 remainder 1 So, 13 in decimal is 1101 in binary.</p>"},{"location":"chapters/chapter02/#binary-to-decimal","title":"Binary to Decimal:","text":"<p>To convert a binary number to decimal: 1. Multiply each bit by \\(2^n\\), where n is the position of the bit, starting from 0 on the right. 2. Add the results.</p> <p>Example: Convert 1101 to decimal. \\(1 \\times 2^3 + 1 \\times 2^2 + 0 \\times 2^1 + 1 \\times 2^0 = 8 + 4 + 0 + 1 = 13\\).</p>"},{"location":"chapters/chapter02/#decimal-to-hexadecimal","title":"Decimal to Hexadecimal:","text":"<p>To convert a decimal number to hexadecimal: 1. Divide the decimal number by 16. 2. Write down the remainder (0-9, A-F). 3. Continue dividing the result by 16 until the quotient is 0. 4. The hexadecimal number is the sequence of remainders read in reverse order.</p> <p>Example: Convert 255 to hexadecimal. 255 \u00f7 16 = 15 remainder 15 (F) 15 \u00f7 16 = 0 remainder 15 (F) So, 255 in decimal is FF in hexadecimal.</p>"},{"location":"chapters/chapter02/#hexadecimal-to-decimal","title":"Hexadecimal to Decimal:","text":"<p>To convert a hexadecimal number into decimal: 1. Multiply each digit by \\(16^n\\), where n is the position of the digit, starting from 0 on the right. 2. Add the results.</p> <p>Example: Convert 1A to decimal. \\(1 \\times 16^1 + A \\times 16^0 = 16 + 10 = 26\\).</p>"},{"location":"chapters/chapter02/#important-terminology","title":"Important Terminology:","text":"<ul> <li>Encoding: The process of converting characters into a numerical format for computers to understand.</li> <li>ASCII: An encoding scheme that represents English characters and symbols using 7 bits.</li> <li>UNICODE: A more extensive encoding scheme that represents characters from multiple languages and symbols, including emojis.</li> <li>Decimal: The number system humans commonly use (Base 10).</li> <li>Binary: The number system computers use, consisting of only 0s and 1s (Base 2).</li> <li>Octal: A number system that uses eight digits (0-7) (Base 8).</li> <li>Hexadecimal: A number system that uses 16 symbols (0-9 and A-F) (Base 16).</li> </ul>"},{"location":"chapters/chapter02/#quiz","title":"Quiz:","text":"<ol> <li> <p>What is the purpose of an encoding scheme?     a) To convert text into images     b) To represent characters as numbers     c) To calculate binary numbers     d) To manage computer memory  </p> </li> <li> <p>What does ASCII stand for?     a) American Standard Code for Information Interconnection     b) American Standard Code for Information Interchange     c) Advanced Symbol Code for International Information     d) Application System Code for Internet  </p> </li> <li> <p>Which of the following can be represented using UNICODE but not ASCII?     a) The letter \"A\"     b) The number \"9\"     c) The emoji \ud83d\ude03     d) The symbol \"#\"  </p> </li> <li> <p>True or False: The binary system uses only 0 and 1.  </p> </li> <li> <p>What is 1101 in decimal?     a) 11     b) 12     c) 13     d) 14  </p> </li> <li> <p>How many symbols does the hexadecimal system use?     a) 2     b) 8     c) 10     d) 16  </p> </li> <li> <p>Convert the decimal number 255 into hexadecimal.     a) FF     b) FE     c) F1     d) 1F  </p> </li> <li> <p>True or False: UNICODE can represent characters from all writing systems, including emojis.  </p> </li> <li> <p>What is the octal representation of the decimal number 17?     a) 21     b) 20     c) 17     d) 10  </p> </li> <li> <p>Convert the hexadecimal number A5 to decimal.      a) 105      b) 165      c) 175      d) 195  </p> </li> </ol>"},{"location":"chapters/chapter02/#answers","title":"Answers:","text":"<ol> <li>b) To represent characters as numbers</li> <li>b) American Standard Code for Information Interchange</li> <li>c) The emoji \ud83d\ude03</li> <li>True</li> <li>c) 13</li> <li>d) 16</li> <li>a) FF</li> <li>True</li> <li>d) 10</li> <li>b) 165</li> </ol>"},{"location":"chapters/chapter03/","title":"Unit 3: Emerging Trends","text":""},{"location":"chapters/chapter03/#introduction","title":"Introduction:","text":"<p>Technology is evolving at a rapid pace, and with it, new trends and innovations are emerging every day. From smart cities to artificial intelligence (AI), these advancements are changing the way we live, work, and interact with the world. In this unit, we\u2019ll explore some of the most exciting and influential trends in modern technology, such as AI, the Internet of Things (IoT), 5G networks, and more. By the end of this unit, you\u2019ll have a good understanding of how these technologies work and why they\u2019re shaping the future.</p>"},{"location":"chapters/chapter03/#31-artificial-intelligence-ai","title":"3.1 Artificial Intelligence (AI):","text":"<p>Artificial Intelligence (AI) refers to the ability of machines to perform tasks that normally require human intelligence, such as recognizing speech, understanding language, and making decisions. AI systems can be categorized into two types:</p> <ol> <li> <p>Narrow AI: This type of AI is designed to perform a specific task. Examples include virtual assistants like Siri or Google Assistant, which are good at understanding voice commands but cannot perform tasks outside their programming.</p> </li> <li> <p>General AI: This is the idea of creating a machine that has human-like intelligence and can perform any intellectual task that a human can do. General AI is still in the realm of research and has not yet been achieved.</p> </li> </ol> <p>Where AI is used:     - Healthcare: AI helps doctors analyze medical data and diagnose diseases more accurately.     - Finance: AI systems are used to detect fraudulent transactions and manage investments.     - Entertainment: AI powers recommendation systems, like Netflix, that suggest movies based on your viewing history.  </p> <p>Fun Fact: Imagine AI as a really smart calculator that can do more than just math\u2014it can think, learn, and even chat with you!</p>"},{"location":"chapters/chapter03/#32-machine-learning","title":"3.2 Machine Learning:","text":"<p>Machine Learning (ML) is a subset of AI where machines learn from data to improve their performance over time. Instead of following explicit instructions, ML algorithms analyze patterns in data and make predictions or decisions based on what they learn.</p> <p>Examples of ML in everyday life:     - Recommendation Systems: Websites like YouTube, Netflix, and Amazon use ML to recommend videos or products based on your past   behavior.     - Spam Detection: ML helps email systems filter out unwanted spam emails.     - Self-Driving Cars: ML allows self-driving cars to recognize objects and make decisions on the road.  </p> <p>How it works: ML systems use algorithms to process large amounts of data, identify patterns, and make predictions. For example, if an ML algorithm is fed data about customer purchases, it might learn to predict which products a customer is likely to buy next.</p>"},{"location":"chapters/chapter03/#33-natural-language-processing-nlp","title":"3.3 Natural Language Processing (NLP):","text":"<p>Natural Language Processing (NLP) is a branch of AI that focuses on helping machines understand, interpret, and respond to human language. NLP enables computers to process spoken or written language just like a human does.</p> <p>Key applications of NLP:     - Voice Assistants: Alexa, Siri, and Google Assistant use NLP to understand your commands and respond appropriately.     - Chatbots: Many companies use NLP-powered chatbots to answer customer questions or assist with online tasks.     - Translation Tools: Google Translate uses NLP to translate text from one language to another.  </p> <p>Challenges in NLP: Human language is complex, filled with slang, idioms, and context that make it hard for machines to fully understand. However, advances in NLP have made it possible for computers to carry out conversations and understand text much better than before.</p>"},{"location":"chapters/chapter03/#34-robotics","title":"3.4 Robotics:","text":"<p>Robotics is the field of technology that involves designing and building robots. Robots are machines that can carry out complex tasks automatically or under human guidance.</p> <p>Common uses of robots:     - Manufacturing: Robots are widely used in factories to assemble cars, package goods, and handle repetitive tasks that require   precision.     - Healthcare: Surgical robots assist doctors in performing delicate operations with more accuracy than human hands.     - Exploration: Robots like the Mars Rover explore areas that are too dangerous or remote for humans.  </p> <p>Future of Robotics: As technology advances, robots are being developed to perform more complex tasks, including interacting with humans in daily life. For example, household robots may soon assist with chores, or even provide companionship to the elderly.</p>"},{"location":"chapters/chapter03/#35-big-data","title":"3.5 Big Data:","text":"<p>Big Data refers to the vast amount of data generated every day by devices like smartphones, sensors, social media, and online transactions. This data is so large and complex that traditional data-processing tools cannot handle it.</p> <p>Big Data Defined by the Vs </p> <p>Big Data is often characterized by a set of dimensions known as the \"Vs.\" These characteristics help describe the various aspects and complexities of Big Data. Here are the main Vs commonly associated with Big Data:</p> <ul> <li> <p>1. Volume </p> <ul> <li>Definition: Refers to the amount of data generated and collected. Big Data involves massive volumes of data that traditional data processing software cannot handle efficiently.  </li> <li>Example: Companies like Google and Facebook generate petabytes (1 petabyte = 1,024 terabytes) of data every day through user interactions, social media posts, and search queries.  </li> </ul> </li> <li> <p>2. Velocity </p> <ul> <li>Definition: Describes the speed at which data is generated, processed, and analyzed. In today's digital world, data is created and needs to be processed in real-time or near-real-time.  </li> <li>Example: Financial trading platforms analyze stock market data in milliseconds to make trading decisions based on current market conditions.  </li> </ul> </li> <li> <p>3. Variety </p> <ul> <li>Definition: Refers to the different types and formats of data that are generated. Big Data encompasses structured data (like databases), semi-structured data (like XML or JSON), and unstructured data (like text, images, and videos).  </li> <li>Example: A single organization might collect customer data from surveys (structured), social media interactions (unstructured), and transaction logs (semi-structured), all of which need to be integrated for analysis.  </li> </ul> </li> <li> <p>4. Veracity </p> <ul> <li>Definition: Addresses the quality and accuracy of the data. Not all data is reliable, and it\u2019s crucial to assess the trustworthiness and validity of data sources.  </li> <li>Example: Data collected from sensors in IoT devices may contain noise or inaccuracies due to hardware malfunctions, affecting the quality of the analysis.  </li> </ul> </li> <li> <p>5. Value</p> <ul> <li>Definition: Refers to the potential value that can be extracted from Big Data. Simply having a large volume of data doesn\u2019t mean it\u2019s useful unless insights can be derived that drive decision-making.  </li> <li>Example: A retail company can analyze customer purchase patterns to optimize inventory, enhance customer experiences, and increase sales.  </li> </ul> </li> </ul> <p>Where Big Data is used:     - Marketing: Companies analyze customer behavior and preferences to deliver personalized ads.     - Healthcare: Hospitals use Big Data to track patient data and predict disease outbreaks.     - Finance: Big Data helps banks detect fraudulent transactions and predict market trends.  </p> <p>Fun Fact: Every minute, humans generate over 2.5 quintillion bytes of data! That\u2019s more data than you can ever imagine.</p>"},{"location":"chapters/chapter03/#36-internet-of-things-iot","title":"3.6 Internet of Things (IoT):","text":"<p>The Internet of Things (IoT) refers to a network of physical devices that are connected to the internet, allowing them to collect, share, and exchange data. These devices range from smart home appliances to industrial sensors.</p> <p>Examples of IoT devices:     - Smart Homes: Devices like smart speakers, thermostats, and security systems can be controlled remotely using apps.     - Healthcare: Wearable devices like fitness trackers monitor your health data, such as heart rate and sleep patterns.     - Smart Cities: IoT is used to monitor traffic, reduce pollution, and optimize energy consumption in urban areas.  </p> <p>Impact of IoT: IoT is making everyday life more convenient and efficient. In the future, even more devices\u2014from refrigerators to streetlights\u2014will be connected to the internet, creating a more interconnected world.</p>"},{"location":"chapters/chapter03/#37-sensors","title":"3.7 Sensors:","text":"<p>Sensors are devices that detect changes in the environment and send the information to other electronic systems. Sensors are essential components of IoT devices and modern technology in general.</p> <p>Types of sensors:     - Temperature Sensors: These measure temperature changes and are used in thermostats to control heating or cooling.     - Motion Sensors: Commonly used in security systems to detect movement.     - Biometric Sensors: These measure physical characteristics like heart rate, and are often found in fitness trackers or smartwatches.  </p> <p>Fun Fact: Your smartphone is packed with sensors! It has an accelerometer (to detect movement), a proximity sensor (to turn off the screen when you hold it to your ear), and many others.</p>"},{"location":"chapters/chapter03/#38-smart-cities","title":"3.8 Smart Cities:","text":"<p>A Smart City uses technology, particularly IoT and sensors, to manage resources efficiently and improve the quality of life for its citizens. Data from sensors and devices is used to manage traffic, monitor air quality, and enhance public safety.</p> <p>Examples of Smart City technology:     - Traffic Management: Smart traffic lights adjust in real-time to minimize congestion.     - Energy Efficiency: Smart meters monitor energy usage, helping homes and businesses reduce electricity consumption.     - Waste Management: Sensors in trash bins signal when they are full, optimizing waste collection routes.  </p> <p>Future of Smart Cities: As cities grow, smart city technology will play a vital role in reducing pollution, improving traffic flow, and enhancing safety for residents.</p>"},{"location":"chapters/chapter03/#39-cloud-computing","title":"3.9 Cloud Computing:","text":"<p>Cloud Computing allows users to store and access data and applications over the internet instead of on their local devices. This makes it possible to access your files and run software from anywhere, as long as you have an internet connection.</p> <p>Types of cloud services:     - Infrastructure as a Service (IaaS): Renting virtual servers and storage from cloud providers.     - Platform as a Service (PaaS): A platform for developers to build and deploy applications.     - Software as a Service (SaaS): Applications delivered over the internet, like Google Docs or Dropbox.  </p> <p>Why Cloud Computing matters: Cloud computing has made collaboration, data storage, and software access easier and more affordable for both individuals and businesses.</p>"},{"location":"chapters/chapter03/#310-grid-computing","title":"3.10 Grid Computing:","text":"<p>Grid Computing is the practice of connecting multiple computers in different locations to work on a single task, as if they were a single supercomputer. This approach allows for the sharing of resources like processing power and storage across a network.</p> <p>Where Grid Computing is used:     - Scientific Research: Grid computing is used to simulate weather patterns, analyze massive datasets, and perform complex   calculations that a single computer couldn\u2019t handle.     - Medicine: Grid computing helps researchers analyze biological data to discover new drugs or understand diseases.  </p>"},{"location":"chapters/chapter03/#311-blockchain-technology","title":"3.11 Blockchain Technology:","text":"<p>Blockchain is a decentralized and secure technology used to record transactions across multiple computers. It\u2019s best known for being the underlying technology behind cryptocurrencies like Bitcoin, but it has many other applications.</p> <p>How Blockchain works:     - In a blockchain, transactions are grouped into blocks.     - Each block is linked to the previous one using cryptography, creating a chain that is secure and difficult to tamper with.  </p> <p>Applications beyond cryptocurrency:     - Supply Chain Management: Blockchain can be used to track the journey of goods from production to delivery.     - Voting Systems: It can ensure secure and transparent elections by recording votes on a public ledger.     - Smart Contracts: Contracts that automatically execute when specific conditions are met, reducing the need for intermediaries.  </p>"},{"location":"chapters/chapter03/#312-5g-network","title":"3.12 5G Network:","text":"<p>5G is the latest generation of mobile network technology, offering faster speeds, lower latency (the time it</p> <p>takes for data to travel), and the ability to connect more devices simultaneously than previous generations (like 4G).</p> <p>Benefits of 5G:     - Faster Internet Speeds: Downloading a full movie will take seconds rather than minutes.     - IoT Expansion: With the ability to connect more devices at once, 5G will enable smart cities, autonomous vehicles, and more.     - Enhanced Mobile Experiences: 5G will make applications like augmented reality (AR) and virtual reality (VR) more accessible.  </p> <p>Fun Fact: 5G can deliver data 100 times faster than 4G, unlocking possibilities for new technologies and faster communication.</p>"},{"location":"chapters/chapter03/#313-e-commerce","title":"3.13 E-Commerce:","text":"<p>E-Commerce refers to buying and selling goods and services online. This includes online shopping, booking services, and even online auctions.</p> <p>Types of e-commerce:     - B2C (Business-to-Consumer): Online retail stores like Amazon and eBay.     - B2B (Business-to-Business): Companies selling products and services to other businesses.     - C2C (Consumer-to-Consumer): Platforms like eBay, where consumers sell products to other consumers.  </p> <p>Impact of E-Commerce: E-commerce has transformed traditional business by allowing customers to shop from anywhere at any time. It has also made it easier for small businesses to reach a global audience.</p>"},{"location":"chapters/chapter03/#important-terminology","title":"Important Terminology:","text":"<ul> <li>Artificial Intelligence (AI): The simulation of human intelligence by machines.</li> <li>Machine Learning (ML): A subset of AI where machines learn from data to make predictions or decisions.</li> <li>Natural Language Processing (NLP): A branch of AI that enables computers to understand and interpret human language.</li> <li>Robotics: The field of creating robots that can perform tasks autonomously.</li> <li>Big Data: The vast amount of data generated from various sources, analyzed to discover trends and patterns.</li> <li>Internet of Things (IoT): A network of connected devices that collect and exchange data.</li> <li>Sensors: Devices that detect and measure changes in the environment.</li> <li>Blockchain: A decentralized, secure technology used to record transactions.</li> <li>5G: The fifth generation of mobile networks, offering faster speeds and lower latency.</li> <li>E-Commerce: The buying and selling of goods and services over the internet.</li> </ul>"},{"location":"chapters/chapter03/#quiz","title":"Quiz:","text":"<ol> <li> <p>What is Artificial Intelligence?     a) A type of hardware     b) The simulation of human intelligence by machines     c) A programming language     d) A network protocol  </p> </li> <li> <p>True or False: Machine Learning improves over time by analyzing data.  </p> </li> <li> <p>Which of the following is NOT an example of IoT?     a) Smart thermostat     b) Smartphone     c) Fitness tracker     d) Microwave oven  </p> </li> <li> <p>What does NLP stand for?     a) Natural Light Processing     b) Network Latency Protocol     c) Natural Language Processing     d) Neural Logic Protocol  </p> </li> <li> <p>What is the purpose of Blockchain technology?     a) Create virtual reality environments     b) Securely record transactions     c) Analyze large datasets     d) Transmit data across networks  </p> </li> <li> <p>True or False: 5G networks have higher speeds and lower latency than 4G.  </p> </li> <li> <p>Which of the following is a common use of cloud computing?     a) Physical data storage     b) Renting virtual servers     c) Designing robots     d) Managing financial transactions  </p> </li> <li> <p>In a smart city, sensors can be used to:     a) Measure heart rate     b) Monitor air quality     c) Perform surgery     d) Manage social media accounts  </p> </li> <li> <p>What is one example of e-commerce?     a) Streaming a video     b) Shopping on Amazon     c) Playing an online game     d) Sending an email  </p> </li> <li> <p>Which of the following technologies powers cryptocurrencies like Bitcoin?      a) Big Data      b) Blockchain      c) Cloud Computing      d) 5G  </p> </li> </ol>"},{"location":"chapters/chapter03/#answers","title":"Answers:","text":"<ol> <li>b) The simulation of human intelligence by machines</li> <li>True</li> <li>d) Microwave oven</li> <li>c) Natural Language Processing</li> <li>b) Securely record transactions</li> <li>True</li> <li>b) Renting virtual servers</li> <li>b) Monitor air quality</li> <li>b) Shopping on Amazon</li> <li>b) Blockchain</li> </ol>"},{"location":"chapters/chapter04/","title":"Unit 4: Problem Solving","text":""},{"location":"chapters/chapter04/#introduction","title":"Introduction:","text":"<p>Problem-solving is one of the most important skills in computer science. It\u2019s all about finding efficient ways to solve challenges using logical steps and structured thinking. In this unit, we\u2019ll walk through the process of solving a problem step by step. We\u2019ll learn about algorithms, how to represent them using flowcharts, and how to turn those ideas into actual programs. By mastering this process, you\u2019ll be able to tackle any coding problem with confidence!</p>"},{"location":"chapters/chapter04/#41-introduction-to-problem-solving","title":"4.1 Introduction to Problem Solving","text":"<p>The process of problem-solving involves identifying a problem, coming up with a solution, and implementing that solution effectively. Let\u2019s break this down into manageable steps:</p>"},{"location":"chapters/chapter04/#problem-solving-cycle","title":"Problem Solving Cycle:","text":"<ol> <li> <p>Analyzing the Problem:     This is the first step where you thoroughly understand the problem. It involves breaking the problem into smaller, more manageable parts.   This step helps in identifying the input (data provided), processing (steps required), and output (desired result).</p> <p>Example: Suppose you need to calculate the average score of a class. You first analyze the problem to understand the inputs (the scores),   the process (adding the scores and dividing by the total number of scores), and the output (the average).</p> </li> <li> <p>Designing an Algorithm:     Once the problem is understood, the next step is to create an algorithm\u2014a step-by-step procedure to solve the problem. This helps you   plan the solution before writing code.</p> </li> <li> <p>Implementation Through Coding:     After designing the algorithm, the next step is to write the actual code using a programming language. This converts your logical   solution into a functional program that the computer can execute.</p> </li> <li> <p>Testing the Solution:     Once the program is written, you need to test it. Testing ensures that the program is solving the problem as intended. This step often   involves debugging, where you fix any issues or mistakes in the code.</p> </li> </ol> <p>This cycle is iterative because after testing, you might find areas where the solution can be improved, leading you back to earlier steps.</p>"},{"location":"chapters/chapter04/#42-algorithm","title":"4.2 Algorithm","text":"<p>An Algorithm is a well-defined, step-by-step procedure or set of instructions used to solve a problem or perform a task. Algorithms are like blueprints that guide us through the process of solving problems.</p>"},{"location":"chapters/chapter04/#why-do-we-need-algorithms","title":"Why Do We Need Algorithms?","text":"<p>Algorithms provide a structured way to approach problems. They break down complex tasks into simpler steps, allowing us to find a logical path to the solution. Without a clear algorithm, the process of writing code can be confusing and error-prone.</p>"},{"location":"chapters/chapter04/#representing-algorithms-using-flowcharts","title":"Representing Algorithms Using Flowcharts:","text":"<p>Flowcharts are visual diagrams that represent the flow of steps in an algorithm. Each step in a flowchart is represented by different symbols that show how data flows through the algorithm.</p> <ul> <li>Oval (Start/End): Marks the beginning or end of the algorithm.</li> <li>Rectangle (Process): Represents a step where an action or process occurs (e.g., a calculation).</li> <li>Diamond (Decision): Represents a decision point, like \"Yes/No\" or \"True/False\" decisions.</li> <li>Arrows: Indicate the direction of the flow from one step to another.</li> </ul> <p>Example Flowchart for Making Tea: 1. Start 2. Boil water 3. Add tea leaves 4. Add sugar (decision point: Yes/No) 5. Stir and wait 6. Pour into cup 7. Stop</p> <p>Flowcharts help you visualize the sequence of steps, making it easier to understand and debug an algorithm before writing the code.</p>"},{"location":"chapters/chapter04/#43-programming","title":"4.3 Programming","text":"<p>A Program is a set of instructions that a computer follows to perform a specific task. Once you have an algorithm, the next step is to write a program that follows the algorithm.</p>"},{"location":"chapters/chapter04/#why-do-we-write-programs","title":"Why Do We Write Programs?","text":"<p>Programs allow us to automate tasks, perform calculations, and solve problems efficiently. Computers can execute these programs much faster and more accurately than humans, and programs can be reused multiple times.</p>"},{"location":"chapters/chapter04/#steps-to-write-a-program","title":"Steps to Write a Program:","text":"<ol> <li> <p>Translating the Algorithm:     Once an algorithm is ready, you translate it into code using a programming language like Python, C++, or Java. This is where logical   steps from the algorithm are turned into executable instructions for the computer.</p> </li> <li> <p>Choosing the Right Programming Constructs:     Different problems require different programming techniques, such as loops, conditionals, and functions. Choosing the right   constructs ensures that your program runs efficiently.</p> </li> <li> <p>Testing and Debugging:     After writing the program, you need to test it to see if it works as expected. Debugging refers to fixing any errors or \"bugs\" that   might appear in the code.</p> </li> </ol>"},{"location":"chapters/chapter04/#44-programming-constructs","title":"4.4 Programming Constructs","text":"<p>Programming Constructs are the essential building blocks used in writing programs. There are three main types of constructs:</p> <ol> <li> <p>Sequence:     A sequence is a set of instructions that are executed one after another in a specific order.  </p> <p>Example: <pre><code>print(\"Step 1: Boil water\")  \nprint(\"Step 2: Add tea leaves\")  \nprint(\"Step 3: Stir\")  \n</code></pre> In this example, each line of code is executed in the order it is written.  </p> </li> <li> <p>Selection (Decision-Making):     Selection allows the program to make decisions based on conditions. This is done using if-else statements, where the program chooses   between different actions.</p> <p>Example: <pre><code>if temperature &gt; 100:  \n  print(\"Boil the water\")  \nelse:  \n  print(\"Heat the water more\")  \n</code></pre> Here, the program checks the condition (temperature &gt; 100) and executes the corresponding action.  </p> </li> <li> <p>Iteration (Loops):     Iteration is when a set of instructions is repeated multiple times, usually until a condition is met. Loops like for and while   allow us to repeat actions.</p> <p>Example: <pre><code>for i in range(5):  \n  print(\"Stir the tea\")  \n</code></pre> In this case, the action (stirring the tea) is repeated five times.  </p> </li> </ol> <p>By combining these constructs, you can build complex programs to solve any problem.</p>"},{"location":"chapters/chapter04/#important-terminology","title":"Important Terminology:","text":"<ul> <li>Problem Solving: The process of identifying, analyzing, and solving a problem step by step.</li> <li>Algorithm: A step-by-step procedure to solve a problem.</li> <li>Coding: Writing a program using a programming language to implement an algorithm.</li> <li>Flowchart: A diagram that visually represents an algorithm using symbols to show the flow of steps.</li> <li>Sequence: The execution of instructions one after the other.</li> <li>Selection: Choosing between different actions based on conditions (decision-making).</li> <li>Iteration: Repeating a set of instructions until a certain condition is met (looping).</li> </ul>"},{"location":"chapters/chapter04/#quiz","title":"Quiz:","text":"<ol> <li> <p>What is the first step in the problem-solving cycle?     a) Testing     b) Designing an algorithm     c) Analyzing the problem     d) Writing code  </p> </li> <li> <p>What is an algorithm?     a) A diagram     b) A step-by-step procedure to solve a problem     c) A programming language     d) A type of loop  </p> </li> <li> <p>True or False: An algorithm must always be implemented using code.  </p> </li> <li> <p>Which symbol in a flowchart represents a decision point?     a) Rectangle     b) Oval     c) Diamond     d) Circle  </p> </li> <li> <p>Which of the following is NOT a programming construct?     a) Sequence     b) Selection     c) Debugging     d) Iteration  </p> </li> <li> <p>True or False: A program is a set of instructions written for a computer to perform a specific task.  </p> </li> <li> <p>What does the if-else statement in programming represent?     a) Iteration     b) Sequence     c) Selection     d) Debugging  </p> </li> <li> <p>Which of the following is an example of iteration in programming?     a) if temperature &gt; 100: print(\"Boil\")     b) print(\"Hello\")     c) for i in range(5): print(\"Loop\")     d) input(\"Enter your name\")  </p> </li> <li> <p>What is the purpose of a flowchart?     a) To debug a program     b) To visually represent an algorithm     c) To store data     d) To execute a program  </p> </li> <li> <p>True or False: Testing a program is not part of the problem-solving cycle.  </p> </li> </ol>"},{"location":"chapters/chapter04/#answers","title":"Answers:","text":"<ol> <li>c) Analyzing the problem</li> <li>b) A step-by-step procedure to solve a problem</li> <li>False</li> <li>c) Diamond</li> <li>c) Debugging</li> <li>True</li> <li>c) Selection</li> <li>c) for i in range(5): print(\"Loop\")</li> <li>b) To visually represent an algorithm</li> <li>False</li> </ol>"},{"location":"chapters/chapter05/","title":"Unit 5: Getting Started with Python","text":""},{"location":"chapters/chapter05/#introduction","title":"Introduction:","text":"<p>Python is a popular, easy-to-learn programming language that is widely used in web development, data science, artificial intelligence, and more. In this unit, we\u2019ll explore the basics of Python programming, from understanding the structure of a program to working with variables, operators, and data types. By the end of this unit, you\u2019ll have the foundational skills to start writing your own Python programs!</p>"},{"location":"chapters/chapter05/#51-introduction-to-python","title":"5.1 Introduction to Python","text":"<p>What is Python? Python is a high-level, interpreted programming language known for its simplicity and readability. It allows developers to write programs with fewer lines of code compared to other programming languages like C++ or Java.</p> <p>Features of Python: - Easy to Learn and Use: Python\u2019s syntax is simple and clear, making it ideal for beginners. - Interpreted: Python programs are executed line by line, making it easy to test and debug. - Cross-Platform: Python works on different operating systems like Windows, macOS, and Linux. - Extensive Libraries: Python has a rich collection of libraries that make tasks like data manipulation, web development, and machine learning much easier.</p> <p>Interactive Mode vs. Script Mode: - Interactive Mode: You can type Python code directly into the Python interpreter and get immediate results. It\u2019s great for testing small code snippets. - Script Mode: You can write your code in a file (called a script) and run the entire program at once. This is useful for larger programs.</p>"},{"location":"chapters/chapter05/#52-structure-of-a-python-program","title":"5.2 Structure of a Python Program","text":"<p>A Python program typically follows a simple structure:</p> <ol> <li>Comments: These are non-executable lines that help explain what the code does. In Python, comments start with <code>#</code>.     <pre><code># This is a comment  \n</code></pre></li> <li>Statements: Each line of code is a statement. A statement is an instruction for the computer to execute.     <pre><code>print(\"Hello, World!\")  \n</code></pre></li> <li>Indentation: Python uses indentation (spaces or tabs) to define blocks of code, such as the body of loops or functions. Unlike other languages, Python does not use curly braces (<code>{}</code>).     <pre><code>if age &gt;= 18:  \n print(\"You are an adult\")  \n</code></pre></li> </ol>"},{"location":"chapters/chapter05/#53-identifiers-keywords-constants-and-variables","title":"5.3 Identifiers, Keywords, Constants, and Variables","text":""},{"location":"chapters/chapter05/#identifiers","title":"Identifiers:","text":"<p>Identifiers are names given to variables, functions, or other entities in a program. They must start with a letter (A-Z or a-z) or an underscore (<code>_</code>) and can be followed by letters, digits (0-9), or underscores. Identifiers are case-sensitive.</p> <p>Example: <pre><code>my_variable = 10\nAge = 25\n</code></pre></p>"},{"location":"chapters/chapter05/#keywords","title":"Keywords:","text":"<p>Keywords are reserved words in Python that have special meaning and cannot be used as identifiers. Some examples of Python keywords are <code>if</code>, <code>else</code>, <code>while</code>, <code>for</code>, <code>def</code>, <code>return</code>.</p> <p>Example: <pre><code>if age &gt; 18:\n     print(\"Eligible\")  \n</code></pre></p>"},{"location":"chapters/chapter05/#constants","title":"Constants:","text":"<p>Constants are values that do not change during the execution of a program. Python doesn\u2019t have a strict constant declaration, but by convention, variables that should not be changed are written in all uppercase letters.</p> <p>Example: <pre><code>PI = 3.14\nMAX_SIZE = 100\n</code></pre></p>"},{"location":"chapters/chapter05/#variables","title":"Variables:","text":"<p>A variable is a named storage location that holds a value, which can change during the execution of the program. Variables are assigned using the <code>=</code> operator.</p> <p>Example: <pre><code>name = \"Alice\"\nage = 20\n</code></pre></p>"},{"location":"chapters/chapter05/#54-types-of-operators","title":"5.4 Types of Operators","text":"<p>Python has several types of operators that perform different operations on variables and values.</p> <ol> <li> <p>Arithmetic Operators:     Used for basic mathematical operations.  </p> <ul> <li><code>+</code> (Addition), <code>-</code> (Subtraction), <code>*</code> (Multiplication), <code>/</code> (Division), <code>//</code> (Floor Division), <code>%</code> (Modulus), <code>**</code> (Exponentiation)  </li> </ul> <p>Example: <pre><code>result = 10 + 5  # Adds 10 and 5  \n</code></pre></p> </li> <li> <p>Comparison Operators:     Used to compare two values.  </p> <ul> <li><code>==</code> (Equal to), <code>!=</code> (Not equal to), <code>&gt;</code> (Greater than), <code>&lt;</code> (Less than), <code>&gt;=</code> (Greater than or equal to), <code>&lt;=</code> (Less than or equal to)  </li> </ul> <p>Example: <pre><code>if 10 &gt; 5:  \n print(\"True\")  \n</code></pre></p> </li> <li> <p>Logical Operators:     Used to combine conditional statements.  </p> <ul> <li><code>and</code>, <code>or</code>, <code>not</code> </li> </ul> <p>Example: <pre><code>if age &gt; 18 and age &lt; 60:  \n print(\"Eligible\")  \n</code></pre></p> </li> <li> <p>Assignment Operators:     Used to assign values to variables.  </p> <ul> <li><code>=</code>, <code>+=</code>, <code>-=</code>, <code>*=</code>, <code>/=</code>, etc.  </li> </ul> <p>Example: <pre><code>x = 10  \nx += 5  # Equivalent to x = x + 5  \n</code></pre></p> </li> </ol>"},{"location":"chapters/chapter05/#55-precedence-of-operators","title":"5.5 Precedence of Operators","text":"<p>Operator precedence determines the order in which operations are performed in an expression. For example, multiplication and division have a higher precedence than addition and subtraction.</p> <p>Example: <pre><code>result = 2 + 3 * 4  # Multiplication happens first, so result is 14\n</code></pre></p> <p>To change the order of operations, you can use parentheses: <pre><code>result = (2 + 3) * 4  # Now addition happens first, so result is 20\n</code></pre></p>"},{"location":"chapters/chapter05/#56-data-types","title":"5.6 Data Types","text":"<p>Python supports various built-in data types:</p> <ol> <li>int: Whole numbers (e.g., 10, -5).</li> <li>float: Numbers with decimals (e.g., 3.14, -2.5).</li> <li>str: Strings (text enclosed in quotes) (e.g., \"Hello\").</li> <li>bool: Boolean values (<code>True</code> or <code>False</code>).</li> <li>list: An ordered collection of values (e.g., <code>[1, 2, 3]</code>).</li> <li>tuple: Similar to a list, but immutable (e.g., <code>(1, 2, 3)</code>).</li> <li>dict: A collection of key-value pairs (e.g., <code>{\"name\": \"Alice\", \"age\": 25}</code>).</li> </ol> <p>Example: <pre><code>age = 25  # int\npi = 3.14  # float\nname = \"John\"  # str\nis_adult = True  # bool\n</code></pre></p>"},{"location":"chapters/chapter05/#57-statements-expressions-and-comments","title":"5.7 Statements, Expressions, and Comments","text":""},{"location":"chapters/chapter05/#statements","title":"Statements:","text":"<p>A statement is a line of code that performs a specific action.</p> <p>Example: <pre><code>print(\"Hello, World!\")  # This is a statement\n</code></pre></p>"},{"location":"chapters/chapter05/#expressions","title":"Expressions:","text":"<p>An expression is a combination of variables, operators, and values that returns a result.</p> <p>Example: <pre><code>result = 10 + 5  # This is an expression\n</code></pre></p>"},{"location":"chapters/chapter05/#comments","title":"Comments:","text":"<p>Comments are non-executable lines in the code that explain what the code does. They are created using the <code>#</code> symbol.</p> <p>Example: <pre><code># This is a comment\nprint(\"Hello!\")  # This prints Hello!\n</code></pre></p>"},{"location":"chapters/chapter05/#58-input-and-output-statements","title":"5.8 Input and Output Statements","text":""},{"location":"chapters/chapter05/#input","title":"Input:","text":"<p>The <code>input()</code> function allows the user to input data during the program execution.</p> <p>Example: <pre><code>name = input(\"Enter your name: \")\nprint(\"Hello, \" + name)\n</code></pre></p>"},{"location":"chapters/chapter05/#output","title":"Output:","text":"<p>The <code>print()</code> function is used to display output.</p> <p>Example: <pre><code>age = 20\nprint(\"This is an output statement\")\nprint(\"Your age: \", age)\n</code></pre></p>"},{"location":"chapters/chapter05/#59-data-type-conversion","title":"5.9 Data Type Conversion","text":"<p>Python allows you to convert one data type to another. This is known as type conversion.</p>"},{"location":"chapters/chapter05/#implicit-conversion","title":"Implicit Conversion:","text":"<p>Python automatically converts data types when needed.</p> <p>Example: <pre><code>x = 10  # int  \ny = 10.5 # float\nz = x + y  # z will automatically be a float (20.5)\n</code></pre></p>"},{"location":"chapters/chapter05/#explicit-conversion","title":"Explicit Conversion:","text":"<p>You can manually convert data types using functions like <code>int()</code>, <code>float()</code>, and <code>str()</code>.</p> <p>Example: <pre><code>x = \"100\"\ny = int(x)  # Converts the string \"100\" into an integer 100\n</code></pre></p>"},{"location":"chapters/chapter05/#510-debugging","title":"5.10 Debugging","text":"<p>Debugging is the process of finding and fixing errors (bugs) in your code. Python provides error messages that help locate problems, and tools like IDEs (Integrated Development Environments) allow you to step through the code and observe its behavior to find and fix issues.</p>"},{"location":"chapters/chapter05/#important-terminology","title":"Important Terminology:","text":"<ul> <li>Interpreter: A program that executes code line by line.</li> <li>Identifiers: Names given to variables, functions, etc.</li> <li>Keywords: Reserved words in Python that cannot be used as identifiers (e.g., <code>if</code>, <code>else</code>).</li> <li>Constants: Values that don\u2019t change during program execution.</li> <li>Variables: Named locations that store data values.</li> <li>Operators: Symbols that perform operations (e.g., <code>+</code>, <code>*</code>).</li> <li>Data Types: Different types of data (e.g</li> </ul> <p>., <code>int</code>, <code>str</code>, <code>float</code>). - Expressions: Combinations of variables, values, and operators that produce a result. - Comments: Non-executable lines of text in code that explain what the code does. - Conversion: Changing data from one type to another.</p>"},{"location":"chapters/chapter05/#quiz","title":"Quiz","text":"<ol> <li> <p>What does an interpreter do?     a) Converts Python code into machine language     b) Executes Python code line by line     c) Compiles Python code into binary     d) Checks Python code for errors  </p> </li> <li> <p>True or False: Identifiers can start with numbers in Python.  </p> </li> <li> <p>Which of the following is NOT a Python keyword?     a) for     b) return     c) while     d) print  </p> </li> <li> <p>Which operator is used to multiply two numbers in Python?     a) +     b) *     c) /     d) %  </p> </li> <li> <p>True or False: The <code>input()</code> function in Python is used to display output to the user.  </p> </li> <li> <p>Which data type represents a sequence of characters in Python?     a) int     b) float     c) str     d) bool  </p> </li> <li> <p>What symbol is used to create comments in Python?     a) <code>//</code>     b) <code>#</code>     c) <code>/* */</code>     d) <code>\"\"\" \"\"\"</code> </p> </li> <li> <p>True or False: Python automatically converts an integer to a float when needed.  </p> </li> <li> <p>Which of the following is an example of an expression in Python?     a) print(\"Hello, World!\")     b) x = 10 + 5     c) # This is a comment     d) input(\"Enter your name\")  </p> </li> <li> <p>What is debugging?     a) Writing code     b) Testing code     c) Finding and fixing errors in code     d) Documenting code  </p> </li> </ol>"},{"location":"chapters/chapter05/#answers","title":"Answers","text":"<ol> <li>b) Executes Python code line by line</li> <li>False</li> <li>d) print</li> <li>b) *</li> <li>False</li> <li>c) str</li> <li>b) <code>#</code></li> <li>True</li> <li>b) x = 10 + 5</li> <li>c) Finding and fixing errors in code</li> </ol> <p>This unit has introduced you to the basics of Python programming, from understanding the structure of a program to working with variables, operators, and data types. You\u2019re now ready to start coding and exploring the endless possibilities of Python!</p>"},{"location":"chapters/chapter05a/","title":"Unit 5a: Flow of Control and Functions","text":""},{"location":"chapters/chapter05a/#introduction","title":"Introduction","text":"<p>When writing programs, the order in which instructions are executed is crucial. In Python, we control the flow of execution using control structures like sequence, selection, and repetition. We also use functions to make our code modular and reusable. In this unit, we\u2019ll explore how these control structures work and how to write and use functions in Python. By the end of this unit, you\u2019ll be able to write more efficient and well-structured code.</p>"},{"location":"chapters/chapter05a/#5a1-control-structures","title":"5a.1 Control Structures","text":"<p>Control Structures are the fundamental building blocks that determine the flow of execution in a program. Python uses three main control structures:</p>"},{"location":"chapters/chapter05a/#1-sequence","title":"1. Sequence","text":"<p>In a sequence, statements are executed one after the other in the order they appear. This is the simplest form of control flow where each line of code runs sequentially.</p> <p>Example: <pre><code>print(\"Step 1\")\nprint(\"Step 2\")\nprint(\"Step 3\")\n</code></pre></p> <p>In the above example, the steps are executed in sequence, one after the other.</p>"},{"location":"chapters/chapter05a/#2-selection-decision","title":"2. Selection (Decision)","text":"<p>Selection allows the program to take different paths based on certain conditions. In Python, selection is handled using conditional statements such as <code>if</code>, <code>if-else</code>, and <code>elif</code>.</p> <ul> <li> <p>if Statement: Executes a block of code if a condition is true.</p> <p>Example: <pre><code>if age &gt;= 18:  \n  print(\"You are an adult\")  \n</code></pre></p> </li> <li> <p>if-else Statement: Executes one block of code if the condition is true and another block if it is false.</p> <p>Example: <pre><code>if age &gt;= 18:  \n  print(\"Adult\")  \nelse:  \n  print(\"Not an adult\")  \n</code></pre></p> </li> <li> <p>Nested if Statement: Multiple <code>if</code> statements inside one another. This allows checking multiple conditions.</p> <p>Example: <pre><code>if age &gt;= 18:  \n  if age &gt;= 65:  \n     print(\"Senior Citizen\")  \n  else:  \n     print(\"Adult\")  \n</code></pre></p> </li> </ul>"},{"location":"chapters/chapter05a/#3-repetition-iteration","title":"3. Repetition (Iteration)","text":"<p>Repetition allows a block of code to be executed repeatedly as long as a condition is met. Python uses loops for repetition: for loops and while loops.</p> <ul> <li> <p>for Loop: Repeats a block of code a specific number of times, usually iterating over a sequence like a list or a range of numbers.</p> <p>Example: <pre><code>for i in range(5):  \n  print(i)  \n</code></pre></p> <p>This loop will print the numbers 0 to 4.  </p> </li> <li> <p>while Loop: Repeats a block of code as long as the condition is true.</p> <p>Example: <pre><code>i = 0  \nwhile i &lt; 5:  \n  print(i)  \n  i += 1  \n</code></pre></p> <p>This loop will print the numbers 0 to 4, similar to the <code>for</code> loop.  </p> </li> <li> <p>break Statement: Exits the loop prematurely before all iterations are completed.</p> <p>Example: <pre><code>for i in range(5):  \n  if i == 3:  \n     break  \n  print(i)  \n</code></pre></p> <p>This will print 0, 1, 2 and then stop when <code>i</code> equals 3.  </p> </li> <li> <p>continue Statement: Skips the rest of the code in the current iteration and moves to the next iteration.</p> <p>Example: <pre><code>for i in range(5):  \n  if i == 3:  \n     continue  \n  print(i)  \n</code></pre></p> <p>This will print 0, 1, 2, 4, skipping 3.  </p> </li> </ul>"},{"location":"chapters/chapter05a/#5a2-functions","title":"5a.2 Functions","text":"<p>Functions are blocks of reusable code designed to perform a specific task. Functions help you avoid writing repetitive code and make your programs easier to understand and maintain.</p>"},{"location":"chapters/chapter05a/#why-do-we-need-functions","title":"Why Do We Need Functions?","text":"<p>Functions allow us to: 1. Break down large problems into smaller, manageable tasks. 2. Avoid repeating the same code in different parts of a program. 3. Improve code organization, readability, and modularity.</p>"},{"location":"chapters/chapter05a/#types-of-functions","title":"Types of Functions","text":"<ol> <li> <p>Built-in Functions: Python has many built-in functions such as <code>print()</code>, <code>len()</code>, and <code>sum()</code>. These are predefined functions that you can use directly without having to define them.</p> <p>Example: <pre><code>print(len(\"Hello\"))  # Outputs 5  \n</code></pre></p> </li> <li> <p>User-defined Functions: These are functions created by the user to perform specific tasks. You define a function using the <code>def</code> keyword.</p> <p>Example: <pre><code>def greet(name):  \n  print(f\"Hello, {name}!\")  \n\ngreet(\"Alice\")  # Outputs: Hello, Alice!  \n</code></pre></p> </li> </ol>"},{"location":"chapters/chapter05a/#structure-of-a-function","title":"Structure of a Function","text":"<p>A Python function follows a specific structure:</p> <ol> <li> <p>Function Definition: This is where the function is created. It starts with the <code>def</code> keyword, followed by the function name, parentheses, and a colon. The body of the function is indented.</p> <p>Example: <pre><code>def function_name(parameters):  \n  # function body  \n</code></pre></p> </li> <li> <p>Function Call: To execute the function, you call it by its name and pass any required arguments.</p> <p>Example: <pre><code>function_name(arguments)  \n</code></pre></p> </li> </ol>"},{"location":"chapters/chapter05a/#example-of-a-user-defined-function","title":"Example of a User-Defined Function","text":"<p>Here\u2019s an example of a function that adds two numbers and returns the result:</p> <pre><code>def add_numbers(a, b):\n     return a + b  \n\nresult = add_numbers(5, 3)\nprint(result)  # Outputs: 8\n</code></pre>"},{"location":"chapters/chapter05a/#function-parameters-and-return-values","title":"Function Parameters and Return Values","text":"<ul> <li> <p>Parameters: Functions can take parameters (inputs) to perform operations based on those inputs. Parameters are specified within the parentheses of the function definition.</p> </li> <li> <p>Return Values: Functions can return a result using the <code>return</code> statement. The result can be assigned to a variable when the function is called.</p> </li> </ul>"},{"location":"chapters/chapter05a/#important-terminology","title":"Important Terminology","text":"<ul> <li>Sequence: The execution of instructions in a specific order, one after another.</li> <li>Selection: A control structure that allows the program to choose between different paths based on conditions (e.g., if, if-else, nested if).</li> <li>Repetition: A control structure that allows the repeated execution of a block of code (e.g., for, while).</li> <li>Iteration: Repeating a block of code using loops like <code>for</code> and <code>while</code>.</li> <li>If Statement: A conditional statement that executes a block of code if a condition is true.</li> <li>If-Else Statement: A conditional statement that chooses between two blocks of code based on whether a condition is true or false.</li> <li>For Statement: A loop that repeats a block of code a specific number of times.</li> <li>While Statement: A loop that repeats a block of code as long as a condition is true.</li> <li>Break Statement: Exits a loop before it has completed all iterations.</li> <li>Continue Statement: Skips the current iteration of a loop and moves to the next iteration.</li> <li>Functions: Blocks of reusable code designed to perform specific tasks.</li> <li>User-Defined Functions: Functions created by the programmer.</li> <li>Built-in Functions: Predefined functions that come with Python.</li> </ul>"},{"location":"chapters/chapter05a/#quiz","title":"Quiz","text":"<ol> <li> <p>Which control structure allows for executing code in a specific order?     a) Sequence     b) Selection     c) Iteration     d) Function  </p> </li> <li> <p>What type of statement is used to choose between two possible outcomes based on a condition?     a) for loop     b) if-else statement     c) while loop     d) break statement  </p> </li> <li> <p>True or False: A <code>for</code> loop repeats a block of code indefinitely as long as the condition is true.  </p> </li> <li> <p>What does the <code>break</code> statement do in a loop?     a) Repeats the loop     b) Skips the current iteration     c) Exits the loop     d) Pauses the loop  </p> </li> <li> <p>Which of the following is an example of a built-in function in Python?     a) print()     b) greet()     c) sum_numbers()     d) calculate_sum()  </p> </li> <li> <p>True or False: Functions in Python are used to organize code and make it reusable.  </p> </li> <li> <p>How do you define a user-defined function in Python?     a) Use the <code>def</code> keyword     b) Use the <code>function</code> keyword     c) Use the <code>for</code> keyword     d) Use the <code>loop</code> keyword  </p> </li> <li> <p>What type of loop is used when you know exactly how many times you want to repeat a block of code?     a) while loop     b) if-else statement     c) for loop     d) break statement  </p> </li> <li> <p>What is the purpose of the <code>continue</code> statement?     a) Exit the loop     b) Skip the rest of the current iteration and move to the next one     c) Repeat the loop indefinitely     d) Stop the execution of the program  </p> </li> <li> <p>True or False: User-defined functions must always return a value.  </p> </li> </ol>"},{"location":"chapters/chapter05a/#answers","title":"Answers","text":"<ol> <li>a) Sequence</li> <li>b) if-else statement</li> <li>False</li> <li>c) Exits the loop</li> <li>a) print()</li> <li>True</li> <li>a) Use the <code>def</code> keyword</li> <li>c) for loop</li> <li>b) Skip the rest of of the current iteration and move to the next one</li> <li>False</li> </ol>"},{"location":"chapters/chapter05b/","title":"Unit 5b: Strings and Lists","text":""},{"location":"chapters/chapter05b/#introduction","title":"Introduction","text":"<p>In Python, strings and lists are two important data types that allow you to work with sequences of data. Strings let you work with text, while lists allow you to store and manipulate collections of data, such as numbers or other objects. In this unit, we will explore how to use and manipulate strings and lists in Python, as well as perform operations on them to solve a variety of tasks.</p>"},{"location":"chapters/chapter05b/#5b1-strings","title":"5b.1 Strings","text":"<p>A string in Python is a sequence of characters enclosed in either single quotes (<code>' '</code>) or double quotes (<code>\" \"</code>). Strings are used to represent text in a program.</p>"},{"location":"chapters/chapter05b/#initializing-strings","title":"Initializing Strings","text":"<p>You can initialize a string by assigning a sequence of characters to a variable.</p> <p>Example: <pre><code>name = \"Alice\"\ngreeting = 'Hello, World!'\n</code></pre></p>"},{"location":"chapters/chapter05b/#accessing-strings","title":"Accessing Strings","text":"<p>You can access individual characters of a string using indexing. In Python, indexing starts from 0.</p> <p>Example: <pre><code>name = \"Alice\"\nprint(name[0])  # Outputs: A\nprint(name[1])  # Outputs: l\n</code></pre></p>"},{"location":"chapters/chapter05b/#string-operations","title":"String Operations","text":"<p>Python provides several operations you can perform on strings:</p> <ol> <li> <p>Concatenation: Combine two or more strings using the <code>+</code> operator.</p> <p>Example: <pre><code>first_name = \"Alice\"  \nlast_name = \"Smith\"  \nfull_name = first_name + \" \" + last_name  # Outputs: Alice Smith  \n</code></pre></p> </li> <li> <p>Repetition: Repeat a string multiple times using the <code>*</code> operator.</p> <p>Example: <pre><code>word = \"Hi! \"  \nprint(word * 3)  # Outputs: Hi! Hi! Hi!  \n</code></pre></p> </li> <li> <p>Slicing: Extract a substring using a range of indices.</p> <p>Example: <pre><code>name = \"Alice\"  \nprint(name[0:3])  # Outputs: Ali  \n</code></pre></p> </li> <li> <p>Length: Find the number of characters in a string using the <code>len()</code> function.</p> <p>Example: <pre><code>message = \"Hello\"  \nprint(len(message))  # Outputs: 5  \n</code></pre></p> </li> <li> <p>Case Conversion: Convert a string to uppercase or lowercase.</p> <p>Example: <pre><code>text = \"Hello\"  \nprint(text.upper())  # Outputs: HELLO  \nprint(text.lower())  # Outputs: hello  \n</code></pre></p> </li> <li> <p>String Methods: Strings come with a variety of useful methods, such as <code>strip()</code> to remove whitespace, <code>replace()</code> to replace characters, and <code>find()</code> to search for a substring.</p> <p>Example: <pre><code>text = \" Hello \"  \nprint(text.strip())  # Outputs: \"Hello\" (removes leading and trailing spaces)  \n</code></pre></p> </li> </ol>"},{"location":"chapters/chapter05b/#5b2-lists","title":"5b.2 Lists","text":"<p>A list in Python is an ordered collection of items that can hold elements of different data types, such as numbers, strings, or even other lists. Lists are mutable, meaning you can change their content after they are created.</p>"},{"location":"chapters/chapter05b/#initializing-lists","title":"Initializing Lists","text":"<p>You can create a list by placing items inside square brackets <code>[]</code>, separated by commas.</p> <p>Example: <pre><code>fruits = [\"apple\", \"banana\", \"cherry\"]\nnumbers = [1, 2, 3, 4, 5]\n</code></pre></p>"},{"location":"chapters/chapter05b/#accessing-lists","title":"Accessing Lists","text":"<p>You can access elements of a list using indexing, just like strings. List indexing also starts at 0.</p> <p>Example: <pre><code>fruits = [\"apple\", \"banana\", \"cherry\"]\nprint(fruits[0])  # Outputs: apple\n</code></pre></p>"},{"location":"chapters/chapter05b/#list-operations","title":"List Operations","text":"<p>There are several operations you can perform on lists:</p> <ol> <li> <p>Creating Lists: You can create an empty list and add elements to it later.</p> <p>Example: <pre><code>my_list = []  \nmy_list.append(1)  \nmy_list.append(2)  \nprint(my_list)  # Outputs: [1, 2]  \n</code></pre></p> </li> <li> <p>Initializing Lists with Data: You can create a list and initialize it with data directly.</p> <p>Example: <pre><code>numbers = [1, 2, 3, 4]  \n</code></pre></p> </li> <li> <p>Traversing Lists: You can loop through a list using a <code>for</code> loop to access each element.</p> <p>Example: <pre><code>for fruit in fruits:  \n  print(fruit)  \n</code></pre></p> </li> <li> <p>Manipulating Lists:</p> <ul> <li>Appending: Add an element to the end of the list using <code>append()</code>.  </li> </ul> <p>Example: <pre><code>fruits.append(\"orange\")  \nprint(fruits)  # Outputs: ['apple', 'banana', 'cherry', 'orange']  \n</code></pre></p> <ul> <li>Inserting: Add an element at a specific index using <code>insert()</code>.  </li> </ul> <p>Example: <pre><code>fruits.insert(1, \"blueberry\")  \nprint(fruits)  # Outputs: ['apple', 'blueberry', 'banana', 'cherry']  \n</code></pre></p> <ul> <li>Removing: Remove an element from the list using <code>remove()</code> or <code>pop()</code>.  </li> </ul> <p>Example: <pre><code>fruits.remove(\"banana\")  \nprint(fruits)  # Outputs: ['apple', 'cherry']  \n</code></pre></p> <ul> <li>Sorting: Sort the elements in the list using <code>sort()</code>.  </li> </ul> <p>Example: <pre><code>numbers = [4, 2, 3, 1]  \nnumbers.sort()  \nprint(numbers)  # Outputs: [1, 2, 3, 4]  \n</code></pre></p> </li> <li> <p>Length of List: Use <code>len()</code> to get the number of items in the list.</p> <p>Example: <pre><code>print(len(fruits))  # Outputs: 3  \n</code></pre></p> </li> </ol>"},{"location":"chapters/chapter05b/#important-terminology","title":"Important Terminology","text":"<ul> <li>String: A sequence of characters enclosed in quotes.</li> <li>Initialization: Assigning a value to a variable or data structure (e.g., creating a string or list).</li> <li>Access: Retrieving elements of a string or list using indexing.</li> <li>String Operations: Actions that can be performed on strings, such as concatenation, slicing, or case conversion.</li> <li>List: An ordered collection of items that can store different data types.</li> <li>Traversing: Looping through each item in a list to access or process it.</li> <li>Manipulation: Modifying a list by adding, removing, or changing elements.</li> </ul>"},{"location":"chapters/chapter05b/#quiz","title":"Quiz","text":"<ol> <li> <p>How do you access the first character in a string <code>name = \"John\"</code>?     a) <code>name[1]</code>     b) <code>name[0]</code>     c) <code>name[2]</code>     d) <code>name[3]</code> </p> </li> <li> <p>True or False: You can concatenate two strings using the <code>+</code> operator.  </p> </li> <li> <p>What does the following code output? <pre><code>text = \"Hello, World!\"  \nprint(text[0:5])  \n</code></pre>     a) Hello,     b) World     c) Hello     d) ello  </p> </li> <li> <p>Which of the following is an example of a list?     a) <code>1, 2, 3</code>     b) <code>(1, 2, 3)</code>     c) <code>[1, 2, 3]</code>     d) <code>{1, 2, 3}</code> </p> </li> <li> <p>True or False: Lists in Python are immutable.  </p> </li> <li> <p>How do you append an element to a list <code>my_list</code>?     a) <code>my_list.add(5)</code>     b) <code>my_list.append(5)</code>     c) <code>my_list.insert(5)</code>     d) <code>my_list.push(5)</code> </p> </li> <li> <p>What does the following code do? <pre><code>fruits = [\"apple\", \"banana\", \"cherry\"]  \nfruits[1] = \"orange\"  \n</code></pre>     a) Inserts \"orange\" after \"banana\"     b) Removes \"banana\" from the list     c) Replaces \"banana\" with \"orange\"     d) Adds \"orange\" at the end of the list  </p> </li> <li> <p>True or False: You can sort a list in ascending order using <code>sort()</code>.  </p> </li> <li> <p>What function is used to find the length of a list?     a) <code>count()</code>     b) <code>size()</code>     c) <code>length()</code>     d) <code>len()</code> </p> </li> <li> <p>What does the <code>remove()</code> method do to a list?      a) Clears all elements from the list      b) Removes the last element from the list      c) Removes the first occurrence of a specific element      d) Replaces an element with another  </p> </li> </ol>"},{"location":"chapters/chapter05b/#answers","title":"Answers","text":"<ol> <li>b) <code>name[0]</code></li> <li>True</li> <li>c) Hello</li> <li>c) <code>[1, 2, 3]</code></li> <li>False</li> <li>b) <code>my_list.append(5)</code></li> <li>c) Replaces \"banana\" with \"orange\"</li> <li>True</li> <li>d) <code>len()</code></li> <li>c) Removes the first occurrence of a specific element</li> </ol> <p>This unit has introduced you to strings and lists, two fundamental data types in Python. You\u2019ve learned how to initialize, access, and manipulate them, giving you the tools to manage text and collections of data effectively in your programs.</p>"},{"location":"chapters/chapter05c/","title":"Unit 5c: Tuples and Dictionary","text":""},{"location":"chapters/chapter05c/#introduction","title":"Introduction","text":"<p>In Python, tuples and dictionaries are important data structures that help organize and manage collections of data. Tuples are immutable sequences of values, while dictionaries are collections of key-value pairs that allow you to associate values with specific keys. In this unit, you\u2019ll learn how to work with tuples and dictionaries, including how to create, access, and manipulate them.</p>"},{"location":"chapters/chapter05c/#5c1-tuples","title":"5c.1 Tuples","text":"<p>A tuple is an ordered, immutable collection of items in Python. Once created, the elements in a tuple cannot be changed, which makes tuples useful for data that should remain constant throughout the program.</p>"},{"location":"chapters/chapter05c/#creating-and-initializing-tuples","title":"Creating and Initializing Tuples","text":"<p>You can create a tuple by placing values inside parentheses <code>()</code>, separated by commas.</p> <p>Example: <pre><code>my_tuple = (1, 2, 3)\nfruit_tuple = (\"apple\", \"banana\", \"cherry\")\n</code></pre></p>"},{"location":"chapters/chapter05c/#accessing-elements-in-a-tuple","title":"Accessing Elements in a Tuple","text":"<p>Just like with lists, you can access elements in a tuple using indexing. Indexing starts at 0.</p> <p>Example: <pre><code>my_tuple = (1, 2, 3)\nprint(my_tuple[0])  # Outputs: 1\n</code></pre></p>"},{"location":"chapters/chapter05c/#operations-on-tuples","title":"Operations on Tuples","text":"<p>Although tuples are immutable, you can perform various operations:</p> <ol> <li> <p>Concatenation: Combine two or more tuples using the <code>+</code> operator.</p> <p>Example: <pre><code>tuple1 = (1, 2)  \ntuple2 = (3, 4)  \ncombined_tuple = tuple1 + tuple2  # Outputs: (1, 2, 3, 4)  \n</code></pre></p> </li> <li> <p>Repetition: Repeat a tuple multiple times using the <code>*</code> operator.</p> <p>Example: <pre><code>repeat_tuple = (1, 2) * 3  # Outputs: (1, 2, 1, 2, 1, 2)  \n</code></pre></p> </li> <li> <p>Slicing: Extract a subset of the tuple using a range of indices.</p> <p>Example: <pre><code>my_tuple = (1, 2, 3, 4, 5)  \nprint(my_tuple[1:4])  # Outputs: (2, 3, 4)  \n</code></pre></p> </li> <li> <p>Length: Find the number of elements in a tuple using the <code>len()</code> function.</p> <p>Example: <pre><code>my_tuple = (1, 2, 3)  \nprint(len(my_tuple))  # Outputs: 3  \n</code></pre></p> </li> <li> <p>Membership: Check if an item is present in a tuple using the <code>in</code> keyword.</p> <p>Example: <pre><code>fruit_tuple = (\"apple\", \"banana\", \"cherry\")  \nprint(\"banana\" in fruit_tuple)  # Outputs: True  \n</code></pre></p> </li> </ol>"},{"location":"chapters/chapter05c/#5c2-dictionary","title":"5c.2 Dictionary","text":"<p>A dictionary in Python is an unordered, mutable collection of items. Each item is stored as a key-value pair, where the key acts as an identifier and the value is the data associated with the key. Dictionaries are commonly used when you need to associate one piece of data with another, such as a name with a phone number.</p>"},{"location":"chapters/chapter05c/#creating-and-initializing-dictionaries","title":"Creating and Initializing Dictionaries","text":"<p>Dictionaries are created using curly braces <code>{}</code>, with each key-value pair separated by a colon <code>:</code>. Keys must be unique and immutable (e.g., strings, numbers), while values can be any data type.</p> <p>Example: <pre><code>my_dict = {\"name\": \"Alice\", \"age\": 25, \"city\": \"New York\"}\n</code></pre></p>"},{"location":"chapters/chapter05c/#accessing-elements-in-a-dictionary","title":"Accessing Elements in a Dictionary","text":"<p>You can access the value associated with a key by using the key in square brackets.</p> <p>Example: <pre><code>my_dict = {\"name\": \"Alice\", \"age\": 25, \"city\": \"New York\"}\nprint(my_dict[\"name\"])  # Outputs: Alice\n</code></pre></p>"},{"location":"chapters/chapter05c/#dictionary-operations","title":"Dictionary Operations","text":"<p>Dictionaries allow various operations:</p> <ol> <li> <p>Adding or Modifying Elements: You can add new key-value pairs or modify existing ones.</p> <p>Example: <pre><code>my_dict[\"age\"] = 26  # Modifies the value of \"age\"  \nmy_dict[\"email\"] = \"alice@example.com\"  # Adds a new key-value pair  \n</code></pre></p> </li> <li> <p>Removing Elements: You can remove a key-value pair using the <code>del</code> keyword or <code>pop()</code> method.</p> <p>Example: <pre><code>del my_dict[\"city\"]  # Removes the key \"city\"  \nage = my_dict.pop(\"age\")  # Removes the key \"age\" and returns its value  \n</code></pre></p> </li> <li> <p>Traversing a Dictionary: You can loop through a dictionary\u2019s keys, values, or both using a <code>for</code> loop.</p> <p>Example: <pre><code>for key, value in my_dict.items():  \n  print(key, value)  \n</code></pre></p> </li> <li> <p>Checking for a Key: You can check if a key exists in the dictionary using the <code>in</code> keyword.</p> <p>Example: <pre><code>if \"name\" in my_dict:  \n  print(\"Name found\")  \n</code></pre></p> </li> <li> <p>Getting the Length: Use <code>len()</code> to find the number of key-value pairs in the dictionary.</p> <p>Example: <pre><code>print(len(my_dict))  # Outputs: 3  \n</code></pre></p> </li> </ol>"},{"location":"chapters/chapter05c/#important-terminology","title":"Important Terminology","text":"<ul> <li>Tuple: An ordered, immutable collection of elements.</li> <li>Dictionary: An unordered, mutable collection of key-value pairs.</li> <li>Key-Value Pair: A pair where a key identifies a specific value in a dictionary.</li> <li>Mutability: The ability to change the contents of a data structure (e.g., dictionaries are mutable, while tuples are immutable).</li> </ul>"},{"location":"chapters/chapter05c/#quiz","title":"Quiz","text":"<ol> <li> <p>What is the difference between a list and a tuple?     a) Tuples are mutable, and lists are immutable     b) Lists are immutable, and tuples are mutable     c) Tuples are immutable, and lists are mutable     d) Tuples and lists are both immutable  </p> </li> <li> <p>How do you access the second element of a tuple <code>my_tuple = (10, 20, 30)</code>?     a) <code>my_tuple[2]</code>     b) <code>my_tuple[1]</code>     c) <code>my_tuple[0]</code>     d) <code>my_tuple[-1]</code> </p> </li> <li> <p>True or False: Tuples can be modified after creation.  </p> </li> <li> <p>Which of the following is used to create a dictionary?     a) Square brackets <code>[]</code>     b) Parentheses <code>()</code>     c) Curly braces <code>{}</code>     d) Double quotes <code>\"\"</code> </p> </li> <li> <p>How do you access the value associated with the key <code>\"name\"</code> in the dictionary <code>my_dict = {\"name\": \"Alice\", \"age\": 25}</code>?     a) <code>my_dict.get(\"Alice\")</code>     b) <code>my_dict[\"Alice\"]</code>     c) <code>my_dict.get(\"name\")</code>     d) <code>my_dict[\"name\"]</code> </p> </li> <li> <p>True or False: Dictionary keys must be unique.  </p> </li> <li> <p>Which of the following is an example of a key-value pair in a dictionary?     a) <code>\"name\": \"Alice\"</code>     b) <code>\"age\": 25</code>     c) <code>25: \"Alice\"</code>     d) All of the above  </p> </li> <li> <p>What does the following code do? <pre><code>del my_dict[\"age\"]  \n</code></pre>     a) Removes the value <code>\"age\"</code> from the dictionary     b) Removes the key <code>\"age\"</code> and its associated value from the dictionary     c) Clears all elements from the dictionary     d) Modifies the value of <code>\"age\"</code> </p> </li> <li> <p>What method is used to remove and return a value from a dictionary by key?     a) <code>del()</code>     b) <code>pop()</code>     c) <code>remove()</code>     d) <code>clear()</code> </p> </li> <li> <p>True or False: A dictionary\u2019s values must be unique.  </p> </li> </ol>"},{"location":"chapters/chapter05c/#answers","title":"Answers","text":"<ol> <li>c) Tuples are immutable, and lists are mutable</li> <li>b) <code>my_tuple[1]</code></li> <li>False</li> <li>c) Curly braces <code>{}</code></li> <li>d) <code>my_dict[\"name\"]</code></li> <li>True</li> <li>d) All of the above</li> <li>b) Removes the key <code>\"age\"</code> and its associated value from the dictionary</li> <li>b) <code>pop()</code></li> <li>False</li> </ol> <p>This unit has introduced you to tuples and dictionaries, two essential data structures in Python. You\u2019ve learned how to create, access, and manipulate these structures, giving you the ability to manage complex collections of data efficiently in your programs.</p>"},{"location":"chapters/chapter06/","title":"Unit 6: Societal Impacts","text":""},{"location":"chapters/chapter06/#introduction","title":"Introduction","text":"<p>In today\u2019s digital age, our actions on the internet leave behind a trace, known as a digital footprint. As more people interact with technology, it\u2019s essential to understand the potential risks and responsibilities that come with it. In this unit, we\u2019ll cover topics like digital footprints, online etiquette, intellectual property rights, cybercrime, and the impact of technology on health. We\u2019ll also explore important legal frameworks, such as cyber laws and the Indian IT Act, designed to protect users online.</p>"},{"location":"chapters/chapter06/#61-digital-footprints","title":"6.1 Digital Footprints","text":"<p>A digital footprint is the trail of data you leave behind whenever you use the internet. It includes everything from the websites you visit, to the information you share on social media, to your online shopping habits. Digital footprints can be either active or passive: - Active Footprint: Data you intentionally share, such as posts on social media or filling out an online form. - Passive Footprint: Data collected about you without your explicit consent, such as your browsing history or location data.</p>"},{"location":"chapters/chapter06/#importance-of-managing-your-digital-footprint","title":"Importance of Managing Your Digital Footprint","text":"<p>Your digital footprint can affect your privacy, security, and even future opportunities (such as jobs or college admissions). It\u2019s important to be aware of what information you share and how it might be used. Oversharing or neglecting privacy settings can expose you to risks like identity theft or data breaches.</p> <p>Example:     - Posting frequent updates about your vacation on social media might reveal to criminals that your house is unoccupied, posing a security risk.</p>"},{"location":"chapters/chapter06/#62-etiquettes-for-net-surfing-and-social-media-communication","title":"6.2 Etiquettes for Net Surfing and Social Media Communication","text":"<p>Netiquette (Internet Etiquette) refers to the proper and responsible behavior when using the internet and social media. Following good netiquette helps create a respectful and safe online environment.</p>"},{"location":"chapters/chapter06/#for-net-surfing","title":"For Net Surfing:","text":"<ol> <li>Respect others\u2019 privacy: Do not track or share someone\u2019s personal data without consent.</li> <li>Avoid illegal downloads or pirating content: It\u2019s important to respect copyright laws.</li> <li>Be mindful of sources: Verify the credibility of websites and avoid spreading misinformation.</li> </ol>"},{"location":"chapters/chapter06/#for-social-media","title":"For Social Media:","text":"<ol> <li>Be respectful in conversations: Avoid offensive language or personal attacks in online discussions.</li> <li>Be cautious about sharing personal information: Posting sensitive details, such as your phone number or address, can make you vulnerable to identity theft.</li> <li>Think before you post: Once something is online, it can be challenging to remove completely.</li> <li>Avoid cyberbullying: Treat others online as you would in real life, and don\u2019t engage in harassing behavior.</li> </ol>"},{"location":"chapters/chapter06/#63-intellectual-property-rights-ipr","title":"6.3 Intellectual Property Rights (IPR)","text":"<p>Intellectual Property Rights (IPR) protect the creations of the mind, such as inventions, literary and artistic works, designs, and symbols. IPR ensures that creators get credit and financial compensation for their work.</p>"},{"location":"chapters/chapter06/#common-types-of-ipr","title":"Common Types of IPR:","text":"<pre><code>  - **Copyright**: Protects literary works, music, software, and artistic creations.  \n  - **Patents**: Protect inventions and technical innovations.  \n  - **Trademarks**: Protect logos, names, and symbols that identify a product or service.\n</code></pre> <p>Violating IPR by copying or distributing someone else\u2019s work without permission is illegal and can lead to serious consequences, including lawsuits and fines.</p> <p>Example: - Downloading and sharing movies or software without the creator's permission violates copyright laws and is punishable under the law.</p>"},{"location":"chapters/chapter06/#64-cybercrime-and-cyber-laws","title":"6.4 Cybercrime and Cyber Laws","text":"<p>Cybercrime refers to criminal activities carried out using computers and the internet. These crimes are increasing as more people rely on digital devices for communication and transactions.</p>"},{"location":"chapters/chapter06/#common-forms-of-cybercrime","title":"Common Forms of Cybercrime:","text":"<ul> <li>Hacking: Unauthorized access to a computer system, often to steal data or cause damage.  </li> <li>Phishing: Fraudulent attempts to obtain sensitive information (like passwords) by pretending to be a trustworthy source.  </li> <li>Cyberbullying: Using the internet to harass, threaten, or intimidate others.  </li> <li>Identity Theft: Stealing someone\u2019s personal information to commit fraud, often for financial gain.  </li> </ul>"},{"location":"chapters/chapter06/#cyber-laws","title":"Cyber Laws:","text":"<p>Cyber laws are designed to protect users from these crimes and regulate online behavior. In India, the Information Technology Act, 2000 provides a legal framework for dealing with cybercrime and lays out penalties for cybercriminals. It also recognizes digital contracts and e-signatures, promoting secure online transactions.</p>"},{"location":"chapters/chapter06/#65-indian-it-act","title":"6.5 Indian IT Act","text":"<p>The Indian IT Act, 2000 is a comprehensive law that governs electronic commerce and digital transactions in India. It addresses a wide range of issues, including:     - Legal recognition of electronic contracts and digital signatures: Ensures that digital documents and transactions are legally binding.     -  Cybercrime: Lays out penalties for hacking, identity theft, and other forms of cybercrime.     - Data protection: Protects sensitive personal information and regulates how it can be collected and used by businesses and organizations.</p>"},{"location":"chapters/chapter06/#66-preventing-cybercrime","title":"6.6 Preventing Cybercrime","text":"<p>To prevent cybercrime and protect yourself online, follow these key practices:</p> <ol> <li>Use Strong Passwords: Make sure your passwords are complex and unique for different accounts. Avoid using easily guessable information, like your birthdate.</li> </ol> <p>Example: Use a combination of upper and lowercase letters, numbers, and symbols: <code>P@ssw0rd!234</code>.  </p> <ol> <li> <p>Enable Two-Factor Authentication: This adds an extra layer of security by requiring a second form of identification, like a text message code or an authentication app.</p> </li> <li> <p>Be Wary of Phishing: Always verify the source before clicking on links or sharing sensitive information. Scammers often impersonate legitimate companies through emails or fake websites.</p> </li> <li> <p>Install Security Software: Use antivirus and firewall software to protect your devices from malware and unauthorized access.</p> </li> <li> <p>Educate Yourself: Stay informed about common cyber threats and how to avoid them. Being aware is the first step to staying safe online.</p> </li> </ol>"},{"location":"chapters/chapter06/#67-impact-on-health","title":"6.7 Impact on Health","text":"<p>Prolonged use of technology can lead to several health issues, both physical and mental. It\u2019s important to be aware of these risks and take preventive measures.</p>"},{"location":"chapters/chapter06/#1-effect-on-eyesight","title":"1. Effect on Eyesight","text":"<p>Spending long hours in front of screens can lead to digital eye strain (also known as computer vision syndrome). Symptoms include dry eyes, headaches, and blurred vision.</p> <p>Tip: Follow the 20-20-20 rule: Every 20 minutes, look at something 20 feet away for 20 seconds to give your eyes a break.</p>"},{"location":"chapters/chapter06/#2-physiological-issues","title":"2. Physiological Issues","text":"<ul> <li>Posture Problems: Sitting for long periods while using a computer can lead to back, neck, and shoulder pain. To avoid these, it\u2019s important to maintain proper posture and take regular breaks to stretch.</li> </ul> <p>Tip: Make sure your chair and desk are ergonomically designed to support good posture.</p> <ul> <li>Sleep Disruption: The blue light emitted by screens can interfere with sleep patterns by reducing melatonin production, making it harder to fall asleep.</li> </ul> <p>Tip: Avoid using screens at least 30 minutes before bedtime, or use a blue light filter on your devices.</p>"},{"location":"chapters/chapter06/#3-mental-health","title":"3. Mental Health","text":"<p>Overuse of social media can lead to anxiety, depression, and feelings of isolation. It\u2019s essential to balance online activities with real-life interactions and take time to disconnect.</p>"},{"location":"chapters/chapter06/#important-terminology","title":"Important Terminology","text":"<ul> <li>Digital Footprint: The trace of data left behind by a person\u2019s online activities.</li> <li>Etiquettes: The set of rules and behaviors that are considered polite and respectful in online communication.</li> <li>Net Surfing: The act of browsing the internet.</li> <li>Social Media: Platforms that allow users to create and share content or participate in social networking.</li> <li>Hacking: Gaining unauthorized access to a computer or network.</li> <li>Cracking: A form of hacking focused on breaking into systems, usually for malicious purposes.</li> <li>Intellectual Property Rights (IPR): Legal rights that protect the creations of an individual\u2019s mind.</li> <li>Cybercrime: Criminal activities carried out using computers and the internet.</li> <li>Cyber Law: Legal regulations that govern the use of the internet and digital communication.</li> <li>Phishing: A type of cybercrime where attackers trick users into revealing sensitive information.</li> <li>Cyberbullying: Harassing or bullying others using digital platforms.</li> <li>Physiological: Related to the functions of the body and its systems.</li> </ul>"},{"location":"chapters/chapter06/#quiz","title":"Quiz","text":"<ol> <li> <p>What is a digital footprint?    a) The trace of physical activity left by an individual    b) The trace of data left behind by a person\u2019s online activities    c) A form of cybercrime    d) A method for preventing cyber attacks  </p> </li> <li> <p>True or False: Phishing is a form of cybercrime where criminals trick users into giving away sensitive information.  </p> </li> <li> <p>What is Netiquette?    a) A technique for surfing the web faster    b) Etiquette or good manners while using the internet    c) A law that governs the use of the internet    d) A tool used to manage passwords  </p> </li> <li> <p>What does IPR stand for?    a) Internet Privacy Rights    b) International Policy Regulations    c) Intellectual Property Rights    d) Information Processing Rules  </p> </li> <li> <p>Which of the following is NOT considered a form of cybercrime?    a) Phishing    b) Cyberbullying    c) Hacking    d) Copyright infringement  </p> </li> <li> <p>True or False: The Indian IT Act, 200  </p> </li> </ol> <p>0, provides legal recognition for digital signatures and electronic contracts.  </p> <ol> <li> <p>Which of the following is a recommended practice for preventing cybercrime?    a) Using simple, easy-to-remember passwords    b) Clicking on any email links    c) Enabling two-factor authentication    d) Sharing personal information on public platforms  </p> </li> <li> <p>What rule is recommended for reducing eye strain from screen time?    a) 10-10-10 Rule    b) 20-20-20 Rule    c) 30-30-30 Rule    d) 40-40-40 Rule  </p> </li> <li> <p>True or False: Overuse of social media can have negative effects on mental health.  </p> </li> <li> <p>What is cyberbullying?    a) Using the internet to buy and sell products    b) Harassing or intimidating others using digital platforms    c) Gaining unauthorized access to a computer system    d) Sharing personal information without consent  </p> </li> </ol>"},{"location":"chapters/chapter06/#answers","title":"Answers","text":"<ol> <li>b) The trace of data left behind by a person\u2019s online activities</li> <li>True</li> <li>b) Etiquette or good manners while using the internet</li> <li>c) Intellectual Property Rights</li> <li>d) Copyright infringement</li> <li>True</li> <li>c) Enabling two-factor authentication</li> <li>b) 20-20-20 Rule</li> <li>True</li> <li>b) Harassing or intimidating others using digital platforms</li> </ol> <p>This unit has introduced you to the societal impacts of technology, from managing your digital footprint to understanding the risks of cybercrime. By practicing good netiquette and being aware of the health effects of technology, you can use the internet safely and responsibly.</p>"},{"location":"chapters/chapter07/","title":"Unit 7: Suggested Practical List","text":""},{"location":"chapters/chapter07/#introduction","title":"Introduction","text":"<p>This unit includes several practical Python programming exercises to help you strengthen your coding skills. Each exercise covers different concepts such as loops, conditionals, functions, and data structures. We will first present the skeletal code for each exercise, followed by the complete solution with explanations. After each exercise, you will find a set of quiz questions along with their answers to test your understanding of the concepts.</p>"},{"location":"chapters/chapter07/#skeletal-code-for-all-practical-projects","title":"Skeletal Code for All Practical Projects","text":"<ol> <li> <p>Print \"Hello computer world!\" <pre><code># Skeleton\n# print(\"Hello computer world!\")\n</code></pre></p> </li> <li> <p>Add Two Numbers <pre><code># Skeleton\n# num1 =\n# num2 =\n# result =\n# print(result)\n</code></pre></p> </li> <li> <p>Print the Difference of Two Numbers <pre><code># Skeleton\n# num1 =\n# num2 =\n# result =\n# print(result)\n</code></pre></p> </li> <li> <p>Find the Larger of Two Numbers <pre><code># Skeleton\n# num1 =\n# num2 =\n# if num1 &gt; num2:\n#    print(num1)\n# else:\n#    print(num2)\n</code></pre></p> </li> <li> <p>Find the Square Root <pre><code># Skeleton\n# import math\n# num =\n# sqrt =\n# print(sqrt)\n</code></pre></p> </li> <li> <p>Swap Two Variables <pre><code># Skeleton\n# a =\n# b =\n# a, b = b, a\n# print(a, b)\n</code></pre></p> </li> <li> <p>Convert Kilometers to Miles <pre><code># Skeleton\n# km =\n# miles =\n# print(miles)\n</code></pre></p> </li> <li> <p>Convert Celsius to Fahrenheit <pre><code># Skeleton\n# celsius =\n# fahrenheit =\n# print(fahrenheit)\n</code></pre></p> </li> <li> <p>Find LCM <pre><code># Skeleton\n# def find_lcm(x, y):\n#    # LCM logic here\n</code></pre></p> </li> <li> <p>Find HCF <pre><code># Skeleton\n# def find_hcf(x, y):\n#    # HCF logic here\n</code></pre></p> </li> <li> <p>Print the First Ten Natural Numbers Using a While Loop <pre><code># Skeleton\n# i = 1\n# while i &lt;= 10:\n#    print(i)\n#    i += 1\n</code></pre></p> </li> <li> <p>Print the Characters in the String 'PYTHON' Using a For Loop <pre><code># Skeleton\n# for char in 'PYTHON':\n#    print(char)\n</code></pre></p> </li> <li> <p>Print a Pattern for a Number Input by the User <pre><code># Skeleton\n# num = int(input(\"Enter a number: \"))\n# for i in range(1, num+1):\n#    # print pattern\n</code></pre></p> </li> <li> <p>Find the Area and Perimeter of a Rectangle Using a User-Defined Function <pre><code># Skeleton\n# def calculate_rectangle(length, breadth):\n#    # calculate area and perimeter\n</code></pre></p> </li> <li> <p>Append Element in a List <pre><code># Skeleton\n# my_list = []\n# element =\n# my_list.append(element)\n# print(my_list)\n</code></pre></p> </li> <li> <p>Create a Dictionary <pre><code># Skeleton\n# my_dict = {}\n# my_dict['key'] = 'value'\n# print(my_dict)\n</code></pre></p> </li> <li> <p>Find the Factorial of a Number <pre><code># Skeleton\n# def factorial(n):\n#    # factorial logic\n</code></pre></p> </li> </ol>"},{"location":"chapters/chapter07/#complete-solutions-with-explanations","title":"Complete Solutions with Explanations","text":""},{"location":"chapters/chapter07/#1-print-hello-computer-world","title":"1. Print \"Hello computer world!\"","text":"<p>Complete Code: <pre><code>print(\"Hello computer world!\")\n</code></pre></p> <p>Explanation: This program prints the string \"Hello computer world!\" using Python's built-in <code>print()</code> function.</p>"},{"location":"chapters/chapter07/#2-add-two-numbers","title":"2. Add Two Numbers","text":"<p>Complete Code: <pre><code>num1 = 5\nnum2 = 3\nresult = num1 + num2\nprint(result)\n</code></pre></p> <p>Explanation: This program adds two numbers and prints the result.</p>"},{"location":"chapters/chapter07/#3-print-the-difference-of-two-numbers","title":"3. Print the Difference of Two Numbers","text":"<p>Complete Code: <pre><code>num1 = 10\nnum2 = 7\nresult = num1 - num2\nprint(result)\n</code></pre></p> <p>Explanation: This program calculates the difference between two numbers and prints the result.</p>"},{"location":"chapters/chapter07/#4-find-the-larger-of-two-numbers","title":"4. Find the Larger of Two Numbers","text":"<p>Complete Code: <pre><code>num1 = 10\nnum2 = 15\nif num1 &gt; num2:\n    print(num1)\nelse:\n    print(num2)\n</code></pre></p> <p>Explanation: This program compares two numbers and prints the larger one using an <code>if-else</code> statement.</p>"},{"location":"chapters/chapter07/#5-find-the-square-root","title":"5. Find the Square Root","text":"<p>Complete Code: <pre><code>import math\nnum = 16\nsqrt = math.sqrt(num)\nprint(sqrt)\n</code></pre></p> <p>Explanation: This program uses Python's <code>math</code> module to calculate and print the square root of a number.</p>"},{"location":"chapters/chapter07/#6-swap-two-variables","title":"6. Swap Two Variables","text":"<p>Complete Code: <pre><code>a = 5\nb = 10\na, b = b, a\nprint(a, b)\n</code></pre></p> <p>Explanation: This program swaps the values of two variables and prints the result.</p>"},{"location":"chapters/chapter07/#7-convert-kilometers-to-miles","title":"7. Convert Kilometers to Miles","text":"<p>Complete Code: <pre><code>km = 5\nmiles = km * 0.621371\nprint(miles)\n</code></pre></p> <p>Explanation: This program converts kilometers to miles using the conversion factor <code>1 km = 0.621371 miles</code>.</p>"},{"location":"chapters/chapter07/#8-convert-celsius-to-fahrenheit","title":"8. Convert Celsius to Fahrenheit","text":"<p>Complete Code: <pre><code>celsius = 25\nfahrenheit = (celsius * 9/5) + 32\nprint(fahrenheit)\n</code></pre></p> <p>Explanation: This program converts a temperature from Celsius to Fahrenheit using the formula <code>F = (C * 9/5) + 32</code>.</p>"},{"location":"chapters/chapter07/#9-find-lcm","title":"9. Find LCM","text":"<p>Complete Code: <pre><code>def find_lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nprint(find_lcm(4, 6))\n</code></pre></p> <p>Explanation: This program finds the least common multiple (LCM) of two numbers.</p>"},{"location":"chapters/chapter07/#10-find-hcf","title":"10. Find HCF","text":"<p>Complete Code: <pre><code>def find_hcf(x, y):\n    smaller = min(x, y)\n    for i in range(1, smaller + 1):\n        if x % i == 0 and y % i == 0:\n            hcf = i\n    return hcf\n\nprint(find_hcf(4, 6))\n</code></pre></p> <p>Explanation: This program finds the highest common factor (HCF) of two numbers.</p>"},{"location":"chapters/chapter07/#11-print-the-first-ten-natural-numbers-using-a-while-loop","title":"11. Print the First Ten Natural Numbers Using a While Loop","text":"<p>Complete Code: <pre><code>i = 1\nwhile i &lt;= 10:\n    print(i)\n    i += 1\n</code></pre></p> <p>Explanation: This program prints the first ten natural numbers using a <code>while</code> loop.</p>"},{"location":"chapters/chapter07/#12-print-the-characters-in-the-string-python-using-a-for-loop","title":"12. Print the Characters in the String 'PYTHON' Using a For Loop","text":"<p>Complete Code: <pre><code>for char in 'PYTHON':\n    print(char)\n</code></pre></p> <p>Explanation: This program prints each character of the string \"PYTHON\" using a <code>for</code> loop.</p>"},{"location":"chapters/chapter07/#13-print-a-pattern-for-a-number-input-by-the-user","title":"13. Print a Pattern for a Number Input by the User","text":"<p>Complete Code: <pre><code>num = int(input(\"Enter a number: \"))\nfor i in range(1, num + 1):\n    print('*' * i)\n</code></pre></p> <p>Explanation: This program prints a pattern of stars based on the user input.</p>"},{"location":"chapters/chapter07/#14-find-the-area-and-perimeter-of-a-rectangle-using-a-user-defined-function","title":"14. Find the Area and Perimeter of a Rectangle Using a User-Defined Function","text":"<p>Complete Code: <pre><code>def calculate_rectangle(length, breadth):\n    area = length * breadth\n    perimeter = 2 * (length + breadth)\n    return area, perimeter\n\nlength = 5\nbreadth = 3\narea, perimeter = calculate_rectangle(length, breadth)\nprint(\"Area:\", area)\nprint(\"Perimeter:\", perimeter)\n</code></pre></p> <p>Explanation: This program calculates the area and perimeter of a rectangle using a user-defined function.</p>"},{"location":"chapters/chapter07/#15-append-element-in-a-list","title":"15. Append Element in a List","text":"<p>Complete Code: <pre><code>my_list = [1, 2, 3]\nelement = 4\nmy_list.append(element)\nprint(my_list)\n</code></pre></p> <p>Explanation: This program appends an element to a list using the <code>append()</code> method.</p>"},{"location":"chapters/chapter07/#16-create-a-dictionary","title":"16. Create a Dictionary","text":"<p>Complete Code: <pre><code>my_dict = {}\nmy_dict['name'] = 'Alice'\nmy_dict['age'] = 25\nprint(my_dict)\n</code></pre></p> <p>Explanation: This program creates a dictionary with key-value pairs.</p>"},{"location":"chapters/chapter07/#17-find-the-factorial-of-a-number","title":"17. Find the Factorial of a Number","text":"<p>Complete Code: <pre><code>def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n\n\n-1)\n\nprint(factorial(5))\n</code></pre></p> <p>Explanation: This program calculates the factorial of a number using recursion.</p>"},{"location":"chapters/chapter07/#quiz-for-each-practical-project","title":"Quiz for Each Practical Project","text":"<p>Each practical project has its own set of quiz questions to test your understanding. Here are the quiz questions for each project:</p>"},{"location":"chapters/chapter07/#quiz-1-print-hello-computer-world","title":"Quiz 1: Print \"Hello computer world!\"","text":"<ol> <li>What function is used to display output in Python?</li> <li>How do you print text in Python?</li> <li>What symbol is used to indicate a string in Python?</li> <li>True or False: You need to import a library to use the <code>print()</code> function.</li> <li>What will <code>print(\"Hello computer world!\")</code> output?</li> </ol>"},{"location":"chapters/chapter07/#quiz-2-add-two-numbers","title":"Quiz 2: Add Two Numbers","text":"<ol> <li>What operator is used to add two numbers in Python?</li> <li>How do you assign a value to a variable in Python?</li> <li>What will <code>print(5 + 3)</code> output?</li> <li>True or False: Variables in Python must be declared with their data type.</li> <li>What is the result of <code>num1 = 5</code> and <code>num2 = 7</code> followed by <code>print(num1 + num2)</code>?</li> </ol>"},{"location":"chapters/chapter07/#quiz-3-print-the-difference-of-two-numbers","title":"Quiz 3: Print the Difference of Two Numbers","text":"<ol> <li>What operator is used to subtract two numbers in Python?</li> <li>What will <code>print(10 - 3)</code> output?</li> <li>True or False: <code>10 - 5</code> is a valid Python expression.</li> <li>If <code>num1 = 15</code> and <code>num2 = 5</code>, what will <code>print(num1 - num2)</code> output?</li> <li>What is the result of <code>print(20 - 10)</code>?</li> </ol>"},{"location":"chapters/chapter07/#quiz-4-find-the-larger-of-two-numbers","title":"Quiz 4: Find the Larger of Two Numbers","text":"<ol> <li>What keyword is used to create a conditional statement in Python?</li> <li>How do you compare two numbers to check if one is larger in Python?</li> <li>True or False: The <code>else</code> block is required after an <code>if</code> statement.</li> <li>What will the following code output:    <pre><code>if 10 &gt; 5:\n    print(\"Larger\")\nelse:\n    print(\"Smaller\")\n</code></pre></li> <li>What is the result of comparing <code>15 &gt; 20</code>?</li> </ol>"},{"location":"chapters/chapter07/#quiz-5-find-the-square-root","title":"Quiz 5: Find the Square Root","text":"<ol> <li>Which Python module is used to find the square root of a number?</li> <li>What function is used to calculate the square root in Python?</li> <li>True or False: The <code>sqrt()</code> function can only be used after importing the <code>math</code> module.</li> <li>What will <code>math.sqrt(25)</code> return?</li> <li>If <code>num = 36</code>, what will <code>math.sqrt(num)</code> return?</li> </ol>"},{"location":"chapters/chapter07/#quiz-6-swap-two-variables","title":"Quiz 6: Swap Two Variables","text":"<ol> <li>How do you swap the values of two variables in Python?</li> <li>What will <code>a, b = 10, 20</code> followed by <code>a, b = b, a</code> output for <code>a</code> and <code>b</code>?</li> <li>True or False: The <code>swap</code> function is built into Python.</li> <li>What does <code>a, b = b, a</code> do in Python?</li> <li>What is the result of swapping <code>a = 5</code> and <code>b = 10</code>?</li> </ol>"},{"location":"chapters/chapter07/#quiz-7-convert-kilometers-to-miles","title":"Quiz 7: Convert Kilometers to Miles","text":"<ol> <li>What is the conversion factor from kilometers to miles?</li> <li>How do you multiply two variables in Python?</li> <li>What will <code>5 * 0.621371</code> output?</li> <li>True or False: The <code>*</code> operator is used for multiplication in Python.</li> <li>What is the result of converting 10 kilometers to miles?</li> </ol>"},{"location":"chapters/chapter07/#quiz-8-convert-celsius-to-fahrenheit","title":"Quiz 8: Convert Celsius to Fahrenheit","text":"<ol> <li>What is the formula to convert Celsius to Fahrenheit?</li> <li>What will the following code output:    <pre><code>celsius = 0\nfahrenheit = (celsius * 9/5) + 32\nprint(fahrenheit)\n</code></pre></li> <li>True or False: <code>(32 * 9/5) + 32</code> will convert 32\u00b0C to Fahrenheit.</li> <li>What is the result of converting 100\u00b0C to Fahrenheit?</li> <li>What is the Fahrenheit equivalent of -40\u00b0C?</li> </ol>"},{"location":"chapters/chapter07/#quiz-9-find-lcm","title":"Quiz 9: Find LCM","text":"<ol> <li>What does LCM stand for?</li> <li>How do you find the LCM of two numbers in Python?</li> <li>True or False: The LCM of 4 and 6 is 12.</li> <li>What will <code>find_lcm(3, 5)</code> return?</li> <li>What is the LCM of 8 and 12?</li> </ol>"},{"location":"chapters/chapter07/#quiz-10-find-hcf","title":"Quiz 10: Find HCF","text":"<ol> <li>What does HCF stand for?</li> <li>What is another name for HCF?</li> <li>True or False: The HCF of 12 and 18 is 6.</li> <li>What will <code>find_hcf(8, 12)</code> return?</li> <li>What is the HCF of 15 and 20?</li> </ol>"},{"location":"chapters/chapter07/#quiz-11-print-the-first-ten-natural-numbers-using-a-while-loop","title":"Quiz 11: Print the First Ten Natural Numbers Using a While Loop","text":"<ol> <li>What is the syntax for a <code>while</code> loop in Python?</li> <li>How do you increment a variable inside a <code>while</code> loop?</li> <li>True or False: The condition in a <code>while</code> loop must always be <code>True</code> to run.</li> <li>What will the following code output:    <pre><code>i = 1\nwhile i &lt;= 3:\n    print(i)\n    i += 1\n</code></pre></li> <li>What are the first ten natural numbers?</li> </ol>"},{"location":"chapters/chapter07/#quiz-12-print-the-characters-in-the-string-python-using-a-for-loop","title":"Quiz 12: Print the Characters in the String 'PYTHON' Using a For Loop","text":"<ol> <li>What is the syntax for a <code>for</code> loop in Python?</li> <li>How do you iterate over each character in a string in Python?</li> <li>True or False: The <code>for</code> loop is used to iterate over sequences in Python.</li> <li>What will the following code output:    <pre><code>for char in 'PYTHON':\n    print(char)\n</code></pre></li> <li>What are the characters in the string \"PYTHON\"?</li> </ol>"},{"location":"chapters/chapter07/#quiz-13-print-a-pattern-for-a-number-input-by-the-user","title":"Quiz 13: Print a Pattern for a Number Input by the User","text":"<ol> <li>What function is used to take user input in Python?</li> <li>How do you create a loop that runs <code>n</code> times in Python?</li> <li>True or False: The <code>*</code> operator can be used to repeat strings in Python.</li> <li>What will the following code output if the user inputs <code>3</code>?    <pre><code>num = 3\nfor i in range(1, num + 1):\n    print('*' * i)\n</code></pre></li> <li>What is the result of printing a pattern for the input <code>4</code>?</li> </ol>"},{"location":"chapters/chapter07/#quiz-14-find-the-area-and-perimeter-of-a-rectangle-using-a-user-defined-function","title":"Quiz 14: Find the Area and Perimeter of a Rectangle Using a User-Defined Function","text":"<ol> <li>How do you define a function in Python?</li> <li>What is the formula for the area of a rectangle?</li> <li>True or False: Functions in Python can return multiple values.</li> <li>What will the following code output for length <code>5</code> and breadth <code>3</code>?    <pre><code>def calculate_rectangle(length, breadth):\n    area = length * breadth\n    perimeter = 2 * (length + breadth)\n    return area, perimeter\nprint(calculate_rectangle(5, 3))\n</code></pre></li> <li>What is the perimeter of a rectangle with length <code>10</code> and breadth <code>5</code>?</li> </ol>"},{"location":"chapters/chapter07/#quiz-15-append-element-in-a-list","title":"Quiz 15: Append Element in a List","text":"<ol> <li>What method is used to add an element to the end of a list in Python?</li> <li>How do you create an empty list in Python?</li> <li>True or False: Lists in Python are mutable.</li> <li>What will the following code output:    <pre><code>my_list = [1, 2, 3]\nmy_list.append(4)\nprint(my_list)\n</code></pre></li> <li>What is the result of appending <code>5</code> to the list <code>[10, 20]</code>?</li> </ol>"},{"location":"chapters/chapter07/#quiz-16-create-a-dictionary","title":"Quiz 16: Create a Dictionary","text":"<ol> <li>How do you create a dictionary in Python?</li> <li>What data structure stores key-value pairs in Python?</li> <li>True or False: Dictionary keys must be unique.</li> <li>What will the following code output:    <pre><code>my_dict = {'name': 'Alice', 'age': 25}\nprint(my_dict['name'])\n</code></pre></li> <li>How do you add a key-value pair to a dictionary?</li> </ol>"},{"location":"chapters/chapter07/#quiz-17-find-the-factorial-of-a-number","title":"Quiz 17: Find the Factorial of a Number","text":"<ol> <li>What is the formula for calculating a factorial?</li> <li>How do you define a recursive function in Python?</li> <li>True or False: The factorial of 0 is 1.</li> <li>What will <code>factorial(5)</code> return?</li> <li>What is the factorial of <code>6</code>?</li> </ol>"},{"location":"chapters/chapter07/#quiz-answers-for-all-practical-projects","title":"Quiz Answers for All Practical Projects","text":"<p>Quiz 1: 1. <code>print()</code> 2. <code>print(\"text\")</code> 3. Quotes (<code>'</code> or <code>\"</code>) 4. False 5. Hello computer world!</p> <p>Quiz 2: 1. <code>+</code> 2. Using the <code>=</code> operator (e.g., <code>num1 = 5</code>) 3. 8 4. False 5. 12</p> <p>Quiz 3: 1. <code>-</code> 2. 7 3. True 4. 10 5. 10</p> <p>**Quiz</p> <p>4:** 1. <code>if</code> 2. Using comparison operators (<code>&gt;</code>, <code>&lt;</code>, etc.) 3. False 4. Larger 5. False</p> <p>Quiz 5: 1. <code>math</code> 2. <code>math.sqrt()</code> 3. True 4. 5.0 5. 6.0</p> <p>Quiz 6: 1. <code>a, b = b, a</code> 2. <code>a = 20</code>, <code>b = 10</code> 3. False 4. Swaps the values of <code>a</code> and <code>b</code> 5. <code>a = 10</code>, <code>b = 5</code></p> <p>Quiz 7: 1. 0.621371 2. Using the <code>*</code> operator (e.g., <code>km * 0.621371</code>) 3. 3.106855 4. True 5. 6.21371 miles</p> <p>Quiz 8: 1. <code>(Celsius * 9/5) + 32</code> 2. 32.0 3. True 4. 212\u00b0F 5. -40\u00b0F</p> <p>Quiz 9: 1. Least Common Multiple 2. By using a loop or a mathematical formula to find the smallest common multiple 3. True 4. 15 5. 24</p> <p>Quiz 10: 1. Highest Common Factor 2. Greatest Common Divisor (GCD) 3. True 4. 4 5. 5</p> <p>Quiz 11: 1. <code>while condition:</code> 2. Using <code>i += 1</code> 3. False 4. 1 2 3 5. 1, 2, 3, 4, 5, 6, 7, 8, 9, 10</p> <p>Quiz 12: 1. <code>for element in sequence:</code> 2. Using a <code>for</code> loop (e.g., <code>for char in string</code>) 3. True 4. P Y T H O N 5. P, Y, T, H, O, N</p> <p>Quiz 13: 1. <code>input()</code> 2. Using a <code>for</code> loop (e.g., <code>for i in range(n)</code>) 3. True 4.      <pre><code>*\n**\n***\n</code></pre> 5.      <pre><code>*\n**\n***\n****\n</code></pre></p> <p>Quiz 14: 1. Using <code>def</code> (e.g., <code>def function_name():</code>) 2. <code>length * breadth</code> 3. True 4. (15, 16) 5. 30</p> <p>Quiz 15: 1. <code>append()</code> 2. Using <code>[]</code> 3. True 4. <code>[1, 2, 3, 4]</code> 5. <code>[10, 20, 5]</code></p> <p>Quiz 16: 1. Using curly braces <code>{}</code> (e.g., <code>my_dict = {}</code>) 2. Dictionary 3. True 4. Alice 5. Using <code>dict[key] = value</code></p> <p>Quiz 17: 1. <code>n! = n * (n-1) * (n-2) * ... * 1</code> 2. Using <code>def</code> and calling the function within itself 3. True 4. 120 5. 720</p> <p>This completes the quizzes for all the practical projects in Unit 7. These questions and answers will help you assess your understanding of the key programming concepts covered in this unit.</p>"},{"location":"chapters/contents/","title":"High School Computer Science: From Zero to Fun!","text":""},{"location":"chapters/contents/#course-contents-computer-science-and-python-for-high-school-students","title":"Course Contents: Computer Science and Python for High School Students","text":""},{"location":"chapters/contents/#unit-1-computer-system","title":"Unit 1: Computer System","text":"<ul> <li>Introduction to Computer: Central Processing Unit (CPU), I/O devices, Evolution of computers, Data and information, Types of data, Functional components of a computer system and their interconnections.</li> <li>Computer Memory: Units of memory, Types of memory (Primary, Cache, and Secondary).</li> <li>Microprocessor: Evolution and features of microprocessors.</li> <li>Software: Purpose and types (System and Application software), Language translators, Device drivers, Programming tools, Generic and Specific purpose software.</li> <li>Classification of Programming Languages: High-level language, Machine language.</li> <li>Operating System (OS): Need for an OS, Functions of an OS.</li> <li>Important Terminology: Data, Information, Computer Memory, Microprocessor, Software, Generic Software, Specific Purpose Software, High-Level Language, Machine Language, Operating System, Device Drivers.</li> </ul>"},{"location":"chapters/contents/#unit-2-encoding-schemes-and-number-systems","title":"Unit 2: Encoding Schemes and Number Systems","text":"<ul> <li>Encoding Schemes: American Standard Code for Information Interchange (ASCII), UNICODE.</li> <li>Number Systems: Decimal, Binary, Octal, and Hexadecimal, Conversions between number systems (excluding fractional parts).</li> <li>Important Terminology: Encoding, ASCII, UNICODE, Decimal, Binary, Octal, Hexadecimal.</li> </ul>"},{"location":"chapters/contents/#unit-3-emerging-trends","title":"Unit 3: Emerging Trends","text":"<ul> <li>Artificial Intelligence, Machine Learning, Natural Language Processing, Robotics, Big Data, Internet of Things (IoT), Sensors, Smart Cities, Cloud Computing, Grid Computing, Blockchain Technology, 5G Network, Introduction to E-Commerce.</li> <li>Important Terminology: Artificial Intelligence, Machine Learning, Natural Language Processing, Robotics, Big Data, Internet of Things, Sensors, Blockchain, 5G, E-Commerce.</li> </ul>"},{"location":"chapters/contents/#unit-4-problem-solving","title":"Unit 4: Problem Solving","text":"<ul> <li>Introduction to Problem Solving: Problem-solving cycle, Analyzing a problem, Designing algorithms, Implementation through coding, Testing the solution.</li> <li>Algorithm: What is an algorithm, Need for algorithms in problem solving, Representation of algorithms using flowcharts.</li> <li>Programming: Concept of a program, Need for writing programs.</li> <li>Programming Constructs: Sequence, Selection, and Iteration.</li> <li>Important Terminology: Problem-solving, Algorithm, Coding, Flowchart, Sequence, Selection, Iteration.</li> </ul>"},{"location":"chapters/contents/#unit-5-getting-started-with-python","title":"Unit 5: Getting Started with Python","text":""},{"location":"chapters/contents/#basics-of-python-programming","title":"Basics of Python Programming","text":"<ul> <li>Introduction to Python, Features of Python, Working with Python interpreter in interactive mode and script mode, Structure of a program, Identifiers, Keywords, Constants, Variables, Types of operators, Precedence of operators, Data types, Statements, Expressions, Evaluation, Comments, Input and output statements, Data type conversion, Debugging.</li> <li>Important Terminology: Interpreter, Identifiers, Keywords, Constants, Variables, Operators, Data types, Expressions, Comments, Conversion.</li> </ul>"},{"location":"chapters/contents/#unit-5a-flow-of-control-and-functions","title":"Unit 5a: Flow of Control and Functions","text":"<ul> <li>Control Structures: Sequence, Selection (if, if-else, nested if), and Repetition (for, while, loops, break, continue).</li> <li>Functions: Introduction to Functions, Need for functions, User-defined functions, Built-in functions.</li> <li>Important Terminology: Sequence, Selection, Repetition, Iteration, If statement, If-Else statement, For statement, While statement, Break statement, Continue statement, Functions, User-defined functions, Built-in functions.</li> </ul>"},{"location":"chapters/contents/#unit-5b-strings-and-lists","title":"Unit 5b: Strings and Lists","text":"<ul> <li>Strings: Introduction to strings, Initializing strings, Accessing strings, String operations.</li> <li>Lists: Introduction to lists, Creating, Initializing, Traversing, and Manipulating lists.</li> <li>Important Terminology: String, Initialization, Access, String operations, List, Initialization, Traversing, Manipulation.</li> </ul>"},{"location":"chapters/contents/#unit-5c-tuples-and-dictionary","title":"Unit 5c: Tuples and Dictionary","text":"<ul> <li>Tuples: Introduction to Tuples, Creating, Initializing, Accessing elements, Operations on Tuples.</li> <li>Dictionary: Introduction to dictionary, Concept of key-value pair, Mutability, Creating, Initializing, Dictionary operations.</li> <li>Important Terminology: Tuple, Dictionary, Key-Value Pair, Mutability.</li> </ul>"},{"location":"chapters/contents/#unit-6-societal-impacts","title":"Unit 6: Societal Impacts","text":"<ul> <li>Digital Footprints: Introduction to Digital footprints, Net surfing etiquette, Social media communication etiquette, Intellectual Property Rights (IPR), Cyber-crime, Cyber laws, Hacking, Phishing, Cyberbullying, Indian IT Act, Preventing cybercrime.</li> <li>Impact on Health: Awareness about health concerns related to technology use (e.g., effects on eyesight, physiological issues).</li> <li>Important Terminology: Digital Footprint, Etiquette, Net surfing, Social Media, Hacking, Cracking, Intellectual Property Rights (IPR), Cyber-crime, Cyber law, Phishing, Bullying, Physiological.</li> </ul>"},{"location":"chapters/contents/#unit-7-suggested-practical-projects","title":"Unit 7: Suggested Practical Projects","text":"<ol> <li>Write a Python Program to Print \u201cHello computer world!\u201d</li> <li>Write a Python Program to Add Two Numbers.</li> <li>Write a Python Program to Print the Difference of Two Numbers.</li> <li>Write a Python Program to Find the Larger of Two Numbers.</li> <li>Write a Python Program to Find the Square Root.</li> <li>Write a Python Program to Swap Two Variables.</li> <li>Write a Python Program to Convert Kilometers to Miles.</li> <li>Write a Python Program to Convert Celsius to Fahrenheit.</li> <li>Write a Python Program to Find LCM.</li> <li>Write a Python Program to Find HCF.</li> <li>Write a Python Program to Print the First Ten Natural Numbers Using a While Loop.</li> <li>Write a Python Program to Print the Characters in the String \u2018PYTHON\u2019 Using a For Loop.</li> <li>Write a Python Program to Print a Pattern for a Number Input by the User.</li> <li>Write a Python Program Using User-Defined Functions to Calculate the Area and Perimeter of a Rectangle.</li> <li>Write a Python Program to Append an Element to a List.</li> <li>Write a Python Program to Create a Dictionary.</li> <li>Write a Python Program to Find the Factorial of a Number.</li> </ol>"},{"location":"chapters/contents/#question-bank","title":"Question Bank","text":""},{"location":"chapters/contents/#answers-to-question-bank","title":"Answers to Question Bank","text":""},{"location":"chapters/contents/#faq","title":"FAQ","text":""},{"location":"chapters/faq/","title":"Frequently Asked Questions","text":"<ul> <li>Frequently Asked Questions</li> <li>A Detailed Guide to Running Python Jupyter Notebooks</li> <li>Steps for Windows<ul> <li>Step 1: Install <code>pyenv-win</code> (Python Version Manager)</li> <li>Step 2: Install a Specific Python Version Using <code>pyenv-win</code></li> <li>Step 3: Create and Activate a Virtual Environment</li> <li>Step 4: Install JupyterLab and Standard Libraries</li> <li>Step 5: Run JupyterLab in the Browser</li> <li>Step 6: Run <code>.py</code> Files from Terminal</li> </ul> </li> <li>Steps for Mac<ul> <li>Step 1: Install <code>pyenv</code> (Python Version Manager)</li> <li>Step 2: Install a Specific Python Version Using <code>pyenv</code></li> <li>Step 3: Create and Activate a Virtual Environment</li> <li>Step 4: Install JupyterLab and Standard Libraries</li> <li>Step 5: Run JupyterLab in the Browser</li> <li>Step 6: Run <code>.py</code> Files from Terminal</li> </ul> </li> <li>Running Notebooks in Google Colab<ul> <li>Step 1: Create a Google Account</li> <li>Step 2: Access Google Colab</li> <li>Step 3: Create a New Notebook</li> <li>Step 4: Importing and Using Datasets in Colab</li> <li>Step 5: Using Google Drive with Colab</li> <li>Step 6: Installing Additional Libraries in Colab</li> <li>Step 7: Saving and Sharing Notebooks</li> </ul> </li> <li>References for Data Sources and Further Reading<ul> <li>Data Sources</li> <li>Free Online Books for Further Reading</li> <li>Computer Science</li> </ul> </li> <li>FAQ and Potential Issues<ul> <li>1. Q: How do I deactivate the virtual environment?</li> <li>2. Q: What if <code>pyenv</code> commands are not recognized?</li> <li>3. Q: What if JupyterLab doesn\u2019t open automatically in the browser?</li> <li>4. Q: How do I install additional libraries later?</li> <li>5. Q: How do I remove a virtual environment?</li> <li>6. Q: What if I get permission errors when installing Homebrew on Mac?</li> <li>7. Q: Why isn\u2019t <code>pyenv</code> installing Python versions on Mac?</li> </ul> </li> </ul>"},{"location":"chapters/faq/#a-detailed-guide-to-running-python-jupyter-notebooks","title":"A Detailed Guide to Running Python Jupyter Notebooks","text":"<p>Here's a detailed guide to help a beginner run Python Jupyter Notebooks on both Windows and Mac machines using <code>pyenv-win</code> or <code>pyenv</code> for managing Python versions, <code>venv</code> for virtual environments, and other related tasks.</p>"},{"location":"chapters/faq/#steps-for-windows","title":"Steps for Windows","text":""},{"location":"chapters/faq/#step-1-install-pyenv-win-python-version-manager","title":"Step 1: Install <code>pyenv-win</code> (Python Version Manager)","text":"<ol> <li>Open PowerShell as Administrator:</li> <li> <p>Press <code>Windows + X</code> and choose Windows PowerShell (Admin).</p> </li> <li> <p>Install <code>pyenv-win</code>:    In PowerShell, run the following commands:    <pre><code>Invoke-WebRequest -UseBasicParsing https://pyenv.run | Invoke-Expression\n</code></pre>    After installation, restart PowerShell and verify by running:    <pre><code>pyenv --version\n</code></pre></p> </li> </ol>"},{"location":"chapters/faq/#step-2-install-a-specific-python-version-using-pyenv-win","title":"Step 2: Install a Specific Python Version Using <code>pyenv-win</code>","text":"<ol> <li> <p>List available Python versions:    <pre><code>pyenv install --list\n</code></pre></p> </li> <li> <p>Install a specific version (e.g., Python 3.10.5):    <pre><code>pyenv install 3.10.5\n</code></pre></p> </li> <li> <p>Set the global Python version:    <pre><code>pyenv global 3.10.5\n</code></pre></p> </li> <li> <p>Verify the Python version:    <pre><code>python --version\n</code></pre></p> </li> </ol>"},{"location":"chapters/faq/#step-3-create-and-activate-a-virtual-environment","title":"Step 3: Create and Activate a Virtual Environment","text":"<ol> <li> <p>Create a new directory for your project (optional):    <pre><code>mkdir my_project\ncd my_project\n</code></pre></p> </li> <li> <p>Create a virtual environment using <code>venv</code>:    <pre><code>python -m venv venv\n</code></pre></p> </li> <li> <p>Activate the virtual environment:    <pre><code>.\\venv\\Scripts\\activate\n</code></pre></p> </li> </ol>"},{"location":"chapters/faq/#step-4-install-jupyterlab-and-standard-libraries","title":"Step 4: Install JupyterLab and Standard Libraries","text":"<ol> <li> <p>Upgrade <code>pip</code> (Python package installer):    <pre><code>python -m pip install --upgrade pip\n</code></pre></p> </li> <li> <p>Install JupyterLab:    <pre><code>pip install jupyterlab\n</code></pre></p> </li> <li> <p>Install other libraries (e.g., NumPy, Pandas, Matplotlib):    <pre><code>pip install numpy pandas matplotlib\n</code></pre></p> </li> </ol>"},{"location":"chapters/faq/#step-5-run-jupyterlab-in-the-browser","title":"Step 5: Run JupyterLab in the Browser","text":"<ol> <li> <p>Start JupyterLab:    <pre><code>jupyter lab\n</code></pre></p> </li> <li> <p>A browser window will automatically open with JupyterLab. If not, copy the URL provided in the terminal and paste it into the browser.</p> </li> </ol>"},{"location":"chapters/faq/#step-6-run-py-files-from-terminal","title":"Step 6: Run <code>.py</code> Files from Terminal","text":"<ol> <li> <p>Navigate to the folder where your <code>.py</code> file is located:    <pre><code>cd path_to_your_script\n</code></pre></p> </li> <li> <p>Run the Python script:    <pre><code>python your_script.py\n</code></pre></p> </li> </ol>"},{"location":"chapters/faq/#steps-for-mac","title":"Steps for Mac","text":""},{"location":"chapters/faq/#step-1-install-pyenv-python-version-manager","title":"Step 1: Install <code>pyenv</code> (Python Version Manager)","text":"<ol> <li>Open Terminal:</li> <li> <p>Use <code>Cmd + Space</code>, search for Terminal, and open it.</p> </li> <li> <p>Install Homebrew (if you don't have it):    <pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre></p> </li> <li> <p>Install <code>pyenv</code>:    <pre><code>brew install pyenv\n</code></pre></p> </li> <li> <p>Add <code>pyenv</code> to your shell configuration:    <pre><code>echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' &gt;&gt; ~/.bash_profile\necho 'export PATH=\"$PYENV_ROOT/bin:$PATH\"' &gt;&gt; ~/.bash_profile\necho 'eval \"$(pyenv init --path)\"' &gt;&gt; ~/.bash_profile\nsource ~/.bash_profile\n</code></pre></p> </li> <li> <p>Verify <code>pyenv</code> installation:    <pre><code>pyenv --version\n</code></pre></p> </li> </ol>"},{"location":"chapters/faq/#step-2-install-a-specific-python-version-using-pyenv","title":"Step 2: Install a Specific Python Version Using <code>pyenv</code>","text":"<ol> <li> <p>List available Python versions:    <pre><code>pyenv install --list\n</code></pre></p> </li> <li> <p>Install a specific version (e.g., Python 3.10.5):    <pre><code>pyenv install 3.10.5\n</code></pre></p> </li> <li> <p>Set the global Python version:    <pre><code>pyenv global 3.10.5\n</code></pre></p> </li> <li> <p>Verify the Python version:    <pre><code>python --version\n</code></pre></p> </li> </ol>"},{"location":"chapters/faq/#step-3-create-and-activate-a-virtual-environment_1","title":"Step 3: Create and Activate a Virtual Environment","text":"<ol> <li> <p>Create a new directory for your project (optional):    <pre><code>mkdir my_project\ncd my_project\n</code></pre></p> </li> <li> <p>Create a virtual environment using <code>venv</code>:    <pre><code>python -m venv venv\n</code></pre></p> </li> <li> <p>Activate the virtual environment:    <pre><code>source venv/bin/activate\n</code></pre></p> </li> </ol>"},{"location":"chapters/faq/#step-4-install-jupyterlab-and-standard-libraries_1","title":"Step 4: Install JupyterLab and Standard Libraries","text":"<ol> <li> <p>Upgrade <code>pip</code> (Python package installer):    <pre><code>python -m pip install --upgrade pip\n</code></pre></p> </li> <li> <p>Install JupyterLab:    <pre><code>pip install jupyterlab\n</code></pre></p> </li> <li> <p>Install other libraries (e.g., NumPy, Pandas, Matplotlib):    <pre><code>pip install numpy pandas matplotlib\n</code></pre></p> </li> </ol>"},{"location":"chapters/faq/#step-5-run-jupyterlab-in-the-browser_1","title":"Step 5: Run JupyterLab in the Browser","text":"<ol> <li>Start JupyterLab:    ```bash</li> </ol> <p>jupyter lab    ```</p> <ol> <li>A browser window will automatically open with JupyterLab. If not, copy the URL provided in the terminal and paste it into the browser.</li> </ol>"},{"location":"chapters/faq/#step-6-run-py-files-from-terminal_1","title":"Step 6: Run <code>.py</code> Files from Terminal","text":"<ol> <li> <p>Navigate to the folder where your <code>.py</code> file is located:    <pre><code>cd path_to_your_script\n</code></pre></p> </li> <li> <p>Run the Python script:    <pre><code>python your_script.py\n</code></pre></p> </li> </ol>"},{"location":"chapters/faq/#running-notebooks-in-google-colab","title":"Running Notebooks in Google Colab","text":"<p>Google Colab is a free cloud-based environment that allows you to run Jupyter notebooks without any local setup. Here\u2019s how to get started:</p>"},{"location":"chapters/faq/#step-1-create-a-google-account","title":"Step 1: Create a Google Account","text":"<ul> <li>If you don\u2019t have one, create a Google account at accounts.google.com.</li> </ul>"},{"location":"chapters/faq/#step-2-access-google-colab","title":"Step 2: Access Google Colab","text":"<ul> <li>Go to Google Colab.</li> </ul>"},{"location":"chapters/faq/#step-3-create-a-new-notebook","title":"Step 3: Create a New Notebook","text":"<ol> <li>Click on File &gt; New Notebook.</li> <li>A new notebook will open in a new tab.</li> </ol>"},{"location":"chapters/faq/#step-4-importing-and-using-datasets-in-colab","title":"Step 4: Importing and Using Datasets in Colab","text":"<ul> <li>Use the following code to import datasets (for example, from a CSV file):   <pre><code>import pandas as pd\n\n# Load a dataset from a URL\ndf = pd.read_csv('https://example.com/your-dataset.csv')\n</code></pre></li> </ul>"},{"location":"chapters/faq/#step-5-using-google-drive-with-colab","title":"Step 5: Using Google Drive with Colab","text":"<ul> <li>To access files from your Google Drive, run the following:   <pre><code>from google.colab import drive\ndrive.mount('/content/drive')\n</code></pre></li> </ul>"},{"location":"chapters/faq/#step-6-installing-additional-libraries-in-colab","title":"Step 6: Installing Additional Libraries in Colab","text":"<ul> <li>To install libraries, use <code>pip</code> as you would normally:   <pre><code>!pip install your-library\n</code></pre></li> </ul>"},{"location":"chapters/faq/#step-7-saving-and-sharing-notebooks","title":"Step 7: Saving and Sharing Notebooks","text":"<ul> <li>Notebooks are saved automatically in your Google Drive. You can share them by clicking the Share button in the top right corner.</li> </ul>"},{"location":"chapters/faq/#references-for-data-sources-and-further-reading","title":"References for Data Sources and Further Reading","text":""},{"location":"chapters/faq/#data-sources","title":"Data Sources","text":"<ul> <li>Kaggle Datasets</li> <li>UCI Machine Learning Repository</li> <li>Data.gov</li> </ul>"},{"location":"chapters/faq/#free-online-books-for-further-reading","title":"Free Online Books for Further Reading","text":"<ul> <li>Python for Data Analysis by Wes McKinney</li> <li>Think Python: How to Think Like a Computer Scientist</li> <li>Automate the Boring Stuff with Python</li> <li>Python Documentation</li> <li>W3Schools Python</li> <li>Real Python</li> </ul>"},{"location":"chapters/faq/#computer-science","title":"Computer Science","text":"<ul> <li>Open Source CS with Python</li> <li>MIT Computer Science</li> </ul>"},{"location":"chapters/faq/#faq-and-potential-issues","title":"FAQ and Potential Issues","text":""},{"location":"chapters/faq/#1-q-how-do-i-deactivate-the-virtual-environment","title":"1. Q: How do I deactivate the virtual environment?","text":"<ul> <li>A: Run <code>deactivate</code> in the terminal.</li> </ul>"},{"location":"chapters/faq/#2-q-what-if-pyenv-commands-are-not-recognized","title":"2. Q: What if <code>pyenv</code> commands are not recognized?","text":"<ul> <li>A: Ensure that <code>pyenv</code> is properly installed and that your shell configuration is set up correctly. Restart the terminal.</li> </ul>"},{"location":"chapters/faq/#3-q-what-if-jupyterlab-doesnt-open-automatically-in-the-browser","title":"3. Q: What if JupyterLab doesn\u2019t open automatically in the browser?","text":"<ul> <li>A: Check the terminal for a URL, copy it, and paste it into your web browser.</li> </ul>"},{"location":"chapters/faq/#4-q-how-do-i-install-additional-libraries-later","title":"4. Q: How do I install additional libraries later?","text":"<ul> <li>A: Activate your virtual environment and use <code>pip install library_name</code>.</li> </ul>"},{"location":"chapters/faq/#5-q-how-do-i-remove-a-virtual-environment","title":"5. Q: How do I remove a virtual environment?","text":"<ul> <li>A: Simply delete the directory containing the virtual environment.</li> </ul>"},{"location":"chapters/faq/#6-q-what-if-i-get-permission-errors-when-installing-homebrew-on-mac","title":"6. Q: What if I get permission errors when installing Homebrew on Mac?","text":"<ul> <li>A: Run the installation command with <code>sudo</code> if you encounter permission issues.</li> </ul>"},{"location":"chapters/faq/#7-q-why-isnt-pyenv-installing-python-versions-on-mac","title":"7. Q: Why isn\u2019t <code>pyenv</code> installing Python versions on Mac?","text":"<ul> <li>A: Ensure that you have the required build tools and libraries installed. Use <code>brew install openssl readline sqlite3 xz zlib</code> to install necessary dependencies.</li> </ul>"},{"location":"chapters/qbank/","title":"Question Bank: Computer Science and Python for High School","text":""},{"location":"chapters/qbank/#unit-1-computer-system","title":"Unit 1: Computer System","text":"<ol> <li> <p>What is the CPU often referred to as?     a) The heart of the computer     b) The brain of the computer     c) The storage of the computer     d) The power supply of the computer  </p> </li> <li> <p>Which of the following is an input device?     a) Monitor     b) Keyboard     c) Printer     d) Speaker  </p> </li> <li> <p>Which type of memory is volatile?     a) Primary Memory (RAM)     b) Secondary Memory (Hard Drive)     c) Cache Memory     d) ROM  </p> </li> <li> <p>The first generation of computers used which technology?     a) Transistors     b) Microprocessors     c) Vacuum tubes     d) Integrated Circuits  </p> </li> <li> <p>What is the main function of system software?     a) To perform calculations     b) To run hardware and manage resources     c) To entertain users     d) To create new files  </p> </li> <li> <p>The microprocessor was introduced in which generation of computers?     a) First generation     b) Second generation     c) Third generation     d) Fourth generation  </p> </li> <li> <p>Which of the following is NOT a type of operating system?     a) Linux     b) Windows     c) Java     d) macOS  </p> </li> <li> <p>Which type of software is used to manage hardware and run the computer itself?     a) Application software     b) System software     c) Specific software     d) Programming software  </p> </li> <li> <p>What is the full form of ALU in CPU architecture?     a) Arithmetic Learning Unit     b) Arithmetic Logic Unit     c) Algorithm Logic Unit     d) Arithmetic Language Unit  </p> </li> <li> <p>What is the role of a device driver?     a) To store data     b) To manage power supply     c) To help the OS communicate with hardware devices     d) To secure the network  </p> </li> <li> <p>What type of software is Microsoft Word?     a) System software     b) Generic software     c) Specific software     d) Device driver  </p> </li> <li> <p>The Operating System performs which of the following functions?     a) Performing calculations     b) Managing memory     c) Writing programs     d) Drawing shapes  </p> </li> <li> <p>Which language is closest to the machine\u2019s native language?     a) High-level language     b) Assembly language     c) Machine language     d) Markup language  </p> </li> <li> <p>The acronym \"RAM\" stands for:     a) Random Access Machine     b) Read Access Memory     c) Random Access Memory     d) Readable and Accessible Memory  </p> </li> <li> <p>True or False: Secondary storage is a type of volatile memory.  </p> </li> <li> <p>Which of the following is a peripheral device?     a) CPU     b) Keyboard     c) RAM     d) ROM  </p> </li> <li> <p>In the memory hierarchy, which memory is the fastest?     a) Cache memory     b) RAM     c) Hard Disk     d) ROM  </p> </li> <li> <p>Fill in the blank: The first computers used __ as their primary memory storage.     a) Vacuum tubes     b) Punched cards     c) Transistors     d) Magnetic tapes  </p> </li> <li> <p>What does the term \"booting\" refer to in computer systems?     a) Restarting the operating system     b) Loading the operating system into memory     c) Installing new hardware     d) Formatting the hard drive  </p> </li> <li> <p>True or False: ROM is a type of non-volatile memory.  </p> </li> </ol>"},{"location":"chapters/qbank/#unit-2-encoding-schemes-and-number-systems","title":"Unit 2: Encoding Schemes and Number Systems","text":"<ol> <li> <p>What does ASCII stand for?     a) American Standard Code for Internet Interchange     b) American Standard Code for Information Interchange     c) Advanced Symbol Code for Internet Information     d) Application System Code for Internet  </p> </li> <li> <p>How many bits are used in standard ASCII?     a) 8     b) 7     c) 16     d) 32  </p> </li> <li> <p>What encoding scheme is designed to support characters from multiple languages, including emojis?     a) ASCII     b) Unicode     c) Base64     d) Hexadecimal  </p> </li> <li> <p>True or False: In the decimal system, we use base 10.  </p> </li> <li> <p>How many digits are used in the binary number system?     a) 2     b) 8     c) 10     d) 16  </p> </li> <li> <p>Convert the binary number <code>1011</code> into decimal.     a) 9     b) 11     c) 13     d) 15  </p> </li> <li> <p>What base is the hexadecimal system?     a) Base 2     b) Base 8     c) Base 10     d) Base 16  </p> </li> <li> <p>Convert the decimal number <code>15</code> to binary.     a) 1101     b) 1001     c) 1111     d) 1011  </p> </li> <li> <p>True or False: Octal number system uses base 16.  </p> </li> <li> <p>What is the hexadecimal representation of decimal number <code>255</code>?     a) A1     b) FF     c) 1F     d) AF  </p> </li> <li> <p>Convert <code>A3</code> from hexadecimal to decimal.     a) 256     b) 128     c) 163     d) 213  </p> </li> <li> <p>Fill in the blank: The ASCII character code for the letter 'A' is ____.     a) 64     b) 65     c) 66     d) 67  </p> </li> <li> <p>In binary, what does <code>1010</code> represent in decimal?     a) 5     b) 8     c) 10     d) 12  </p> </li> <li> <p>Which encoding scheme is widely used for web and internet technologies to handle multiple languages?     a) ASCII     b) Base64     c) Unicode     d) ISO-8859-1  </p> </li> <li> <p>What is the octal representation of decimal number <code>16</code>?     a) 12     b) 16     c) 20     d) 21  </p> </li> <li> <p>How many possible characters can standard ASCII represent?     a) 64     b) 128     c) 256     d) 512  </p> </li> <li> <p>True or False: In the hexadecimal system, the letters A-F represent the numbers 10-15.  </p> </li> <li> <p>Fill in the blank: The binary number system uses only the digits _ and _.  </p> </li> <li> <p>Convert <code>1100</code> from binary to hexadecimal.     a) C     b) F     c) A     d) D  </p> </li> <li> <p>Convert <code>10101</code> from binary to decimal.     a) 25     b) 21     c) 23     d) 19  </p> </li> </ol>"},{"location":"chapters/qbank/#unit-3-emerging-trends","title":"Unit 3: Emerging Trends","text":"<ol> <li> <p>Artificial Intelligence (AI) is primarily concerned with:     a) Physical computing     b) Machine learning     c) Simulating human intelligence     d) Digital imaging  </p> </li> <li> <p>True or False: Machine learning is a subset of artificial intelligence.  </p> </li> <li> <p>Which of the following is an example of AI in daily life?     a) A calculator     b) Voice assistants like Siri     c) A basic light switch     d) None of the above  </p> </li> <li> <p>What does IoT stand for?     a) Internet of Technology     b) Internet of Things     c) Interconnection of Technologies     d) Information on Things  </p> </li> <li> <p>True or False: Big Data refers to small sets of structured data that are easy to process.  </p> </li> <li> <p>Which of the following is used to store and analyze massive amounts of unstructured data?     a) Big Data     b) AI     c) Blockchain     d) Sensors  </p> </li> <li> <p>What is the main goal of smart cities?     a) To create more jobs     b) To make cities more sustainable and efficient using technology     c) To replace all human workers with robots     d) To make cities larger and more populous  </p> </li> <li> <p>Blockchain technology is best known for being used in which area?     a) Financial transactions and cryptocurrencies     b) Social media platforms     c) Space exploration     d) Traditional data storage systems  </p> </li> <li> <p>True or False: Robotics is the field concerned with designing and creating robots.  </p> </li> <li> <p>What network technology is considered the next generation for faster, more reliable mobile connections?     a) 3G     b) 4G     c) 5G     d) Wi-Fi  </p> </li> <li> <p>Which of the following is NOT an example of IoT?     a) Smart refrigerator     b) Fitness tracker     c) Laptop     d) Smart thermostat  </p> </li> <li> <p>Fill in the blank: A smart city uses ____ to improve urban living and sustainability.     a) Machine learning     b) Blockchain     c) IoT and sensors     d) Social media  </p> </li> <li> <p>Which term refers to using machines to automatically learn from data and improve over time?     a) Artificial Intelligence     b) Machine Learning     c) Blockchain     d) Cloud Computing  </p> </li> <li> <p>True or False: Cloud computing requires you to store all your data on your own hardware.  </p> </li> <li> <p>What does the term \u201cphishing\u201d refer to?     a) Fishing for real fish in a lake     b) Sending fake emails to steal personal information     c) Monitoring user behavior through AI     d) Using social media to gather followers  </p> </li> <li> <p>Fill in the blank: Blockchain technology is known for providing ____ security in digital transactions.     a) Weak     b) Average     c) Strong     d) Non-existent  </p> </li> <li> <p>What is the main use of cloud computing?     a) Developing software     b) Storing and accessing data over the internet     c) Managing social media accounts     d) Building IoT devices  </p> </li> <li> <p>True or False: Robotics is only used in industrial settings.  </p> </li> <li> <p>What is a key feature of 5G technology?     a) Higher speed and lower latency     b) Slower connection speeds     c) Reduced data security     d) Limited device connectivity  </p> </li> <li> <p>Which of the following fields is known for involving autonomous machines?     a) Blockchain     b) Robotics     c) Cloud computing     d) AI  </p> </li> </ol>"},{"location":"chapters/qbank/#unit-4-problem-solving","title":"Unit 4: Problem Solving","text":"<ol> <li> <p>What is the first step in the problem-solving cycle?     a) Testing the solution     b) Designing an algorithm     c) Analyzing the problem     d) Writing code  </p> </li> <li> <p>What is an algorithm?     a) A type of computer     b) A step-by-step procedure to solve a problem     c) A programming language     d) A hardware component  </p> </li> <li> <p>True or False: A flowchart is used to visually represent an algorithm.  </p> </li> <li> <p>Which symbol in a flowchart represents a decision point?     a) Rectangle     b) Oval     c) Diamond     d) Circle  </p> </li> <li> <p>What is the purpose of an algorithm in problem-solving?     a) To visually display data     b) To break down a problem into logical steps     c) To print output     d) To write a report  </p> </li> <li> <p>True or False: An algorithm must always be implemented using code.  </p> </li> <li> <p>What type of construct allows the execution of instructions in sequence?     a) Selection     b) Repetition     c) Sequence     d) Function  </p> </li> <li> <p>Which statement allows you to choose between two actions based on a condition?     a) While loop     b) If-else statement     c) Break statement     d) Function  </p> </li> <li> <p>What type of construct repeats a block of code?     a) Iteration     b) Sequence     c) If statement     d) Selection  </p> </li> <li> <p>True or False: The <code>while</code> loop is used to repeat a block of code indefinitely until a condition is met.  </p> </li> <li> <p>Fill in the blank: A ____ is a step-by-step process used to solve a problem in programming.     a) Flowchart     b) Function     c) Algorithm     d) Sequence  </p> </li> <li> <p>What is the purpose of testing in the problem-solving cycle?     a) To evaluate the efficiency of the solution     b) To design the algorithm     c) To write the program     d) To print the results  </p> </li> <li> <p>Which of the following is NOT a programming construct?     a) Sequence     b) Selection     c) Iteration     d) Debugging  </p> </li> <li> <p>What statement is used to make decisions based on conditions in Python?     a) for loop     b) if statement     c) print statement     d) def statement  </p> </li> <li> <p>True or False: An iteration construct is also known as a loop.  </p> </li> <li> <p>Fill in the blank: The ____ statement allows a block of code to be executed only when a specific condition is true.     a) While     b) Break     c) If     d) Continue  </p> </li> <li> <p>Which of the following is an example of a selection statement in Python?     a) if-else     b) for loop     c) while loop     d) return  </p> </li> <li> <p>What is the purpose of an <code>if-else</code> statement?     a) To iterate through a list     b) To select between two options based on a condition     c) To create functions     d) To print output  </p> </li> <li> <p>True or False: The <code>for</code> loop allows you to execute a block of code for a specified number of iterations.  </p> </li> <li> <p>Fill in the blank: A flowchart is used to ____ an algorithm.     a) Implement     b) Execute     c) Visualize     d) Debug  </p> </li> </ol>"},{"location":"chapters/qbank/#unit-5a-flow-of-control-and-functions","title":"Unit 5a: Flow of Control and Functions","text":"<ol> <li> <p>What is the default control flow structure in Python?     a) Sequence     b) Selection     c) Iteration     d) Recursion  </p> </li> <li> <p>Which statement is used to terminate a loop in Python?     a) Continue     b) Break     c) Return     d) Pass  </p> </li> <li> <p>True or False: The <code>while</code> loop is used when the number of iterations is known.  </p> </li> <li> <p>What does the <code>continue</code> statement do?     a) Ends the current iteration and moves to the next one     b) Terminates the loop entirely     c) Skips all iterations     d) None of the above  </p> </li> <li> <p>What keyword is used to define a function in Python?     a) function     b) def     c) for     d) while  </p> </li> <li> <p>Which loop is used when the number of iterations is known beforehand?     a) while loop     b) for loop     c) if statement     d) switch  </p> </li> <li> <p>Fill in the blank: A function in Python is defined using the ____ keyword.     a) return     b) def     c) function     d) loop  </p> </li> <li> <p>True or False: A function can return multiple values in Python.  </p> </li> <li> <p>What is the purpose of the <code>return</code> statement in a function?     a) To exit the function and return a value     b) To break out of a loop     c) To print a message     d) To define the function  </p> </li> <li> <p>Which statement allows a block of code to be executed repeatedly?     a) If statement     b) Function     c) Loop     d) Return  </p> </li> <li> <p>Fill in the blank: The <code>if-else</code> statement is an example of ____ in Python.     a) Sequence     b) Selection     c) Iteration     d) Looping  </p> </li> <li> <p>What does the <code>break</code> statement do in Python?     a) Ends the current function     b) Terminates the loop entirely     c) Continues to the next iteration     d) Stops the function  </p> </li> <li> <p>True or False: Functions help in breaking down large problems into smaller, manageable tasks.  </p> </li> <li> <p>What is the correct syntax for defining a function in Python?     a) def function_name():     b) function function_name():     c) return function_name():     d) def function_name[]  </p> </li> <li> <p>Fill in the blank: The ____ loop executes a block of code for a specified number of times.     a) while     b) for     c) if-else     d) function  </p> </li> <li> <p>Which of the following is NOT an example of a loop structure in Python?     a) for loop     b) if-else statement     c) while loop     d) None of the above  </p> </li> <li> <p>True or False: The <code>if</code> statement can be used inside a function.  </p> </li> <li> <p>What will the following code output? <pre><code>for i in range(3):\n    print(i)\n</code></pre>     a) 1, 2, 3     b) 0, 1, 2     c) 0, 1, 2, 3     d) 1, 2  </p> </li> <li> <p>Fill in the blank: The ____ statement is used to exit a loop in Python.     a) return     b) break     c) continue     d) def  </p> </li> <li> <p>What is the purpose of the <code>continue</code> statement in Python loops?     a) Skip the rest of the current iteration and move to the next one     b) Break the loop entirely     c) Define a new function     d) Terminate the program  </p> </li> </ol>"},{"location":"chapters/qbank/#unit-5b-strings-and-lists","title":"Unit 5b: Strings and Lists","text":"<ol> <li> <p>How do you create a string in Python?     a) Using square brackets     b) Using curly braces     c) Using quotes     d) Using parentheses  </p> </li> <li> <p>What will the following code output? <pre><code>print(\"Hello\"[1])\n</code></pre>     a) H     b) e     c) l     d) o  </p> </li> <li> <p>True or False: Strings in Python are mutable.  </p> </li> <li> <p>How do you append an item to a list in Python?     a) Using the <code>append()</code> method     b) Using the <code>add()</code> method     c) Using the <code>insert()</code> method     d) Using the <code>update()</code> method  </p> </li> <li> <p>What will the following code output? <pre><code>my_list = [1, 2, 3]\nprint(len(my_list))\n</code></pre>     a) 3     b) 2     c) 1     d) 0  </p> </li> <li> <p>Fill in the blank: Lists in Python are ____, meaning their content can be modified.     a) Mutable     b) Immutable     c) Fixed     d) Locked  </p> </li> <li> <p>True or False: Strings are enclosed in quotes, whereas lists are enclosed in square brackets.  </p> </li> <li> <p>What is the index of the first element in a Python list?     a) 0     b) 1     c) -1     d) None of the above  </p> </li> <li> <p>What does the <code>len()</code> function do when applied to a list?     a) Removes the last element from the list     b) Returns the length of the list     c) Appends an element to the list     d) Sorts the list  </p> </li> </ol> <p>10.</p> <p>Fill in the blank: The index of the last element in a list can be accessed using ____.     a) 0     b) -1     c) 1     d) 2  </p> <ol> <li> <p>Which of the following is a valid way to create a list in Python?     a) <code>[1, 2, 3]</code>     b) <code>(1, 2, 3)</code>     c) <code>{1, 2, 3}</code>     d) <code>\"1, 2, 3\"</code> </p> </li> <li> <p>True or False: Strings in Python can be concatenated using the <code>+</code> operator.  </p> </li> <li> <p>What will the following code output? <pre><code>my_string = \"Python\"\nprint(my_string[2:4])\n</code></pre>     a) Py     b) th     c) ho     d) yt  </p> </li> <li> <p>Which method is used to add an element to the end of a list in Python?     a) add()     b) insert()     c) append()     d) update()  </p> </li> <li> <p>What will the following code output? <pre><code>my_list = [10, 20, 30, 40]\nmy_list.append(50)\nprint(my_list)\n</code></pre>     a) [10, 20, 30, 40]     b) [10, 20, 30, 40, 50]     c) [50, 10, 20, 30, 40]     d) [10, 50, 20, 30, 40]  </p> </li> <li> <p>Fill in the blank: The <code>append()</code> method adds an item to the ____ of the list.     a) Beginning     b) Middle     c) End     d) Any position  </p> </li> <li> <p>True or False: Lists in Python are zero-indexed.  </p> </li> <li> <p>What is the result of the following code? <pre><code>my_list = [\"apple\", \"banana\", \"cherry\"]\nprint(my_list[1])\n</code></pre>     a) apple     b) banana     c) cherry     d) None of the above  </p> </li> <li> <p>How do you remove an item from a list in Python?     a) Using the <code>remove()</code> method     b) Using the <code>append()</code> method     c) Using the <code>pop()</code> method     d) Both a and c  </p> </li> <li> <p>Fill in the blank: The <code>insert()</code> method allows you to add an element to a ____ position in the list.     a) Last     b) Specified     c) Random     d) Middle  </p> </li> </ol>"},{"location":"chapters/qbank/#unit-5c-tuples-and-dictionaries","title":"Unit 5c: Tuples and Dictionaries","text":"<ol> <li> <p>How do you create a tuple in Python?     a) Using square brackets     b) Using curly braces     c) Using parentheses     d) Using quotes  </p> </li> <li> <p>True or False: Tuples in Python are mutable.  </p> </li> <li> <p>What will the following code output? <pre><code>my_tuple = (1, 2, 3)\nprint(my_tuple[1])\n</code></pre>     a) 1     b) 2     c) 3     d) None of the above  </p> </li> <li> <p>What is a key-value pair in Python?     a) A combination of two numbers     b) A combination of a key and its associated value in a dictionary     c) A loop     d) A tuple of two elements  </p> </li> <li> <p>Which method is used to add a new key-value pair to a dictionary?     a) append()     b) insert()     c) update()     d) add()  </p> </li> <li> <p>Fill in the blank: Tuples in Python are ____, meaning their content cannot be changed after creation.     a) Mutable     b) Immutable     c) Static     d) Dynamic  </p> </li> <li> <p>True or False: A dictionary key must be unique.  </p> </li> <li> <p>What will the following code output? <pre><code>my_dict = {\"name\": \"Alice\", \"age\": 25}\nprint(my_dict[\"name\"])\n</code></pre>     a) Alice     b) 25     c) name     d) None of the above  </p> </li> <li> <p>What is the correct way to create an empty dictionary?     a) <code>[]</code>     b) <code>()</code>     c) <code>{}</code>     d) <code>\"\"</code> </p> </li> <li> <p>Fill in the blank: The <code>len()</code> function returns the ____ of elements in a tuple.     a) Total number     b) First element     c) Last element     d) Sum  </p> </li> <li> <p>Which of the following is a valid tuple in Python?     a) <code>(1, 2, 3)</code>     b) <code>[1, 2, 3]</code>     c) <code>{1, 2, 3}</code>     d) <code>\"1, 2, 3\"</code> </p> </li> <li> <p>True or False: A dictionary key can be a list in Python.  </p> </li> <li> <p>What will the following code output? <pre><code>my_tuple = (10, 20, 30, 40)\nprint(my_tuple[-1])\n</code></pre>     a) 10     b) 20     c) 40     d) 30  </p> </li> <li> <p>Which method is used to remove an element from a dictionary in Python?     a) pop()     b) append()     c) remove()     d) discard()  </p> </li> <li> <p>Fill in the blank: A tuple is similar to a list but is ____.     a) Mutable     b) Immutable     c) Changeable     d) None of the above  </p> </li> <li> <p>What is the output of the following code? <pre><code>my_dict = {\"name\": \"John\", \"age\": 30}\nprint(len(my_dict))\n</code></pre>     a) 1     b) 2     c) 3     d) 4  </p> </li> <li> <p>True or False: Tuples can store multiple data types.  </p> </li> <li> <p>What is the result of the following code? <pre><code>my_dict = {\"name\": \"John\", \"age\": 30}\nmy_dict[\"age\"] = 31\nprint(my_dict[\"age\"])\n</code></pre>     a) 30     b) 31     c) Error     d) None of the above  </p> </li> <li> <p>How do you access the first element of a tuple?     a) tuple[0]     b) tuple[1]     c) tuple[-1]     d) tuple.first()  </p> </li> <li> <p>Fill in the blank: The ____ method in a dictionary is used to return a list of all the keys.     a) keys()     b) items()     c) values()     d) pop()  </p> </li> </ol>"},{"location":"chapters/qbank/#unit-6-societal-impacts","title":"Unit 6: Societal Impacts","text":"<ol> <li> <p>What is a digital footprint?     a) The physical trace of where you have been     b) The trail of data left by your online activities     c) A method for protecting your computer     d) A software program  </p> </li> <li> <p>True or False: Phishing is a type of cybercrime that involves tricking users into revealing personal information.  </p> </li> <li> <p>What is the purpose of the Indian IT Act?     a) To regulate social media usage     b) To protect users from cybercrime     c) To increase data storage     d) To install firewalls  </p> </li> <li> <p>What does IPR stand for?     a) Intellectual Property Rights     b) Internet Privacy Rights     c) Information Processing Rules     d) Internet Protocol Registry  </p> </li> <li> <p>Which of the following is NOT an example of cybercrime?     a) Phishing     b) Cyberbullying     c) Hacking     d) Copyright infringement  </p> </li> <li> <p>Fill in the blank: Digital etiquette refers to the proper and responsible behavior while using ____.     a) Cars     b) Social media     c) Schools     d) Roads  </p> </li> <li> <p>True or False: The blue light emitted by screens can interfere with sleep patterns.  </p> </li> <li> <p>Which of the following is an effect of cyberbullying?     a) Increased productivity     b) Better mental health     c) Harassment and emotional distress     d) Improved social skills  </p> </li> <li> <p>What is a common health risk associated with prolonged use of technology?     a) Back pain     b) Headaches     c) Eye strain     d) All of the above  </p> </li> <li> <p>Fill in the blank: The ____ Act in India addresses issues related to cybercrime.     a) IT     b) Digital Privacy     c) Copyright     d) Data Protection  </p> </li> <li> <p>True or False: Hacking is the unauthorized access to computer systems.  </p> </li> <li> <p>What does the term \"phishing\" refer to?     a) A cybercrime where attackers trick users into giving sensitive information     b) Sending junk emails     c) Playing online games     d) Writing computer programs  </p> </li> <li> <p>What is Intellectual Property Rights (IPR) concerned with?     a) Physical property     b) Creations of the mind     c) Hardware design     d  </p> </li> </ol> <p>) Network security</p> <ol> <li> <p>True or False: Social media etiquette includes being respectful and avoiding offensive language.  </p> </li> <li> <p>Which of the following is a way to protect yourself from cybercrime?     a) Using strong passwords     b) Sharing personal data publicly     c) Ignoring phishing emails     d) None of the above  </p> </li> <li> <p>Fill in the blank: Using technology for long periods without breaks can cause ____.     a) Improved vision     b) Physical strain and health issues     c) Mental relaxation     d) None of the above  </p> </li> <li> <p>What is the recommended rule for reducing eye strain during screen use?     a) 10-10-10 Rule     b) 20-20-20 Rule     c) 30-30-30 Rule     d) 40-40-40 Rule  </p> </li> <li> <p>Which of the following is a type of cybercrime?     a) Hacking     b) Phishing     c) Cyberbullying     d) All of the above  </p> </li> <li> <p>True or False: Digital footprints are permanent and difficult to remove.  </p> </li> <li> <p>What is the goal of intellectual property rights?     a) To prevent internet usage     b) To protect the rights of creators and innovators     c) To increase government control     d) To manage data storage  </p> </li> </ol>"},{"location":"chapters/qbank/#unit-7-practical-questions","title":"Unit 7: Practical Questions","text":"<ol> <li> <p>What will the following code output? <pre><code>print(\"Hello computer world!\")\n</code></pre>     a) Hello computer world!     b) hello computer world     c) Hello Computer World!     d) None of the above  </p> </li> <li> <p>What is the result of <code>5 + 7</code> in Python?     a) 12     b) 10     c) 13     d) 11  </p> </li> <li> <p>What will the following code output? <pre><code>num1 = 10\nnum2 = 5\nprint(num1 - num2)\n</code></pre>     a) 5     b) 15     c) -5     d) 0  </p> </li> <li> <p>True or False: The <code>math.sqrt()</code> function is used to find the square root of a number.  </p> </li> <li> <p>What will the following code output? <pre><code>a = 5\nb = 10\na, b = b, a\nprint(a, b)\n</code></pre>     a) 5 10     b) 10 5     c) 0 0     d) None of the above  </p> </li> <li> <p>What is the conversion factor for kilometers to miles?     a) 0.621371     b) 1.60934     c) 1.1009     d) 0.50505  </p> </li> <li> <p>What is the formula to convert Celsius to Fahrenheit?     a) (Celsius * 9/5) + 32     b) (Celsius * 5/9) + 32     c) (Celsius - 32) * 9/5     d) (Celsius * 9/5) - 32  </p> </li> <li> <p>What will the following code output for LCM of 4 and 6? <pre><code>print(find_lcm(4, 6))\n</code></pre>     a) 6     b) 12     c) 8     d) 24  </p> </li> <li> <p>True or False: The <code>while</code> loop is used to print the first 10 natural numbers.  </p> </li> <li> <p>What will the following code output? <pre><code>my_list = [1, 2, 3]\nmy_list.append(4)\nprint(my_list)\n</code></pre>     a) [1, 2, 3, 4]     b) [4, 3, 2, 1]     c) [1, 2, 4]     d) None of the above  </p> </li> </ol>"},{"location":"chapters/qbank_ans/","title":"Answer Book: Computer Science and Data Science for High School Students","text":""},{"location":"chapters/qbank_ans/#unit-1-computer-system","title":"Unit 1: Computer System","text":"<ol> <li> <p>b) The brain of the computer    Explanation: The CPU is often referred to as the brain because it processes all instructions.</p> </li> <li> <p>b) Keyboard    Explanation: A keyboard is used to input data into a computer.</p> </li> <li> <p>a) Primary Memory (RAM)    Explanation: RAM is volatile, meaning it loses its data when the power is turned off.</p> </li> <li> <p>c) Vacuum tubes    Explanation: First-generation computers used vacuum tubes for circuitry.</p> </li> <li> <p>b) To run hardware and manage resources    Explanation: System software manages the hardware and other resources of a computer.</p> </li> <li> <p>d) Fourth generation    Explanation: Microprocessors were introduced in the fourth generation of computers.</p> </li> <li> <p>c) Java    Explanation: Java is a programming language, not an operating system.</p> </li> <li> <p>b) System software    Explanation: System software helps manage hardware and run the computer.</p> </li> <li> <p>b) Arithmetic Logic Unit    Explanation: The ALU handles arithmetic and logical operations in a CPU.</p> </li> <li> <p>c) To help the OS communicate with hardware devices     Explanation: Device drivers are essential for the OS to interact with hardware devices.</p> </li> <li> <p>b) Generic software     Explanation: Microsoft Word is a general-purpose application used for word processing.</p> </li> <li> <p>b) Managing memory     Explanation: The OS manages the memory and resources of the system.</p> </li> <li> <p>c) Machine language     Explanation: Machine language consists of binary code that the computer can directly understand.</p> </li> <li> <p>c) Random Access Memory</p> </li> <li> <p>False     Explanation: Secondary storage is non-volatile, meaning data is retained even when the power is turned off.</p> </li> <li> <p>b) Keyboard     Explanation: A keyboard is an external device used for input, making it a peripheral device.</p> </li> <li> <p>a) Cache memory     Explanation: Cache memory is the fastest type of memory in the memory hierarchy.</p> </li> <li> <p>b) Punched cards     Explanation: Early computers used punched cards for memory and input.</p> </li> <li> <p>b) Loading the operating system into memory     Explanation: Booting refers to the process of starting a computer and loading the OS.</p> </li> <li> <p>True     Explanation: ROM is non-volatile, meaning it retains data even without power.</p> </li> </ol>"},{"location":"chapters/qbank_ans/#unit-2-encoding-schemes-and-number-systems","title":"Unit 2: Encoding Schemes and Number Systems","text":"<ol> <li> <p>b) American Standard Code for Information Interchange</p> </li> <li> <p>b) 7    Explanation: Standard ASCII uses 7 bits, allowing for 128 characters.</p> </li> <li> <p>b) Unicode    Explanation: Unicode can represent characters from almost every language.</p> </li> <li> <p>True</p> </li> <li> <p>a) 2    Explanation: Binary uses only two digits, 0 and 1.</p> </li> <li> <p>b) 11    Explanation: <code>1011</code> in binary converts to 11 in decimal.</p> </li> <li> <p>d) Base 16</p> </li> <li> <p>c) 1111</p> </li> <li> <p>False    Explanation: The octal number system uses base 8, not 16.</p> </li> <li> <p>b) FF</p> </li> <li> <p>c) 163</p> </li> <li> <p>b) 65</p> </li> <li> <p>c) 10     Explanation: <code>1010</code> in binary equals 10 in decimal.</p> </li> <li> <p>c) Unicode</p> </li> <li> <p>a) 12</p> </li> <li> <p>b) 128</p> </li> <li> <p>True</p> </li> <li> <p>0 and 1     Explanation: Binary only uses the digits 0 and 1.</p> </li> <li> <p>a) C</p> </li> <li> <p>b) 21</p> </li> </ol>"},{"location":"chapters/qbank_ans/#unit-3-emerging-trends","title":"Unit 3: Emerging Trends","text":"<ol> <li> <p>c) Simulating human intelligence</p> </li> <li> <p>True</p> </li> <li> <p>b) Voice assistants like Siri    Explanation: Voice assistants use AI to understand and respond to user commands.</p> </li> <li> <p>b) Internet of Things</p> </li> <li> <p>False    Explanation: Big Data refers to massive amounts of data that are typically unstructured and hard to process with traditional methods.</p> </li> <li> <p>a) Big Data</p> </li> <li> <p>b) To make cities more sustainable and efficient using technology</p> </li> <li> <p>a) Financial transactions and cryptocurrencies</p> </li> <li> <p>True</p> </li> <li> <p>c) 5G</p> </li> <li> <p>c) Laptop     Explanation: A laptop is not considered an IoT device, while smart thermostats and fitness trackers are.</p> </li> <li> <p>c) IoT and sensors</p> </li> <li> <p>b) Machine Learning     Explanation: Machine learning allows machines to automatically improve through data.</p> </li> <li> <p>False     Explanation: Cloud computing allows you to store data on external servers, not your own hardware.</p> </li> <li> <p>b) Sending fake emails to steal personal information</p> </li> <li> <p>c) Strong     Explanation: Blockchain is highly secure due to its decentralized and cryptographic nature.</p> </li> <li> <p>b) Storing and accessing data over the internet</p> </li> <li> <p>False     Explanation: Robotics is used in various sectors, including healthcare, education, and home automation.</p> </li> <li> <p>a) Higher speed and lower latency</p> </li> <li> <p>b) Robotics</p> </li> </ol>"},{"location":"chapters/qbank_ans/#unit-4-problem-solving","title":"Unit 4: Problem Solving","text":"<ol> <li> <p>c) Analyzing the problem</p> </li> <li> <p>b) A step-by-step procedure to solve a problem</p> </li> <li> <p>True    Explanation: Flowcharts are used to represent algorithms visually.</p> </li> <li> <p>c) Diamond    Explanation: Diamonds in flowcharts represent decision points (yes/no questions).</p> </li> <li> <p>b) To break down a problem into logical steps</p> </li> <li> <p>False    Explanation: Algorithms do not need to be implemented in code to exist.</p> </li> <li> <p>c) Sequence</p> </li> <li> <p>b) If-else statement</p> </li> <li> <p>a) Iteration</p> </li> <li> <p>True     Explanation: A <code>while</code> loop continues until the specified condition becomes false.</p> </li> <li> <p>c) Algorithm</p> </li> <li> <p>a) To evaluate the efficiency of the solution</p> </li> <li> <p>d) Debugging     Explanation: Debugging is the process of finding and fixing errors in the code, not a programming construct.</p> </li> <li> <p>b) if statement</p> </li> <li> <p>True</p> </li> <li> <p>c) If</p> </li> <li> <p>a) if-else</p> </li> <li> <p>b) To select between two options based on a condition</p> </li> <li> <p>True</p> </li> <li> <p>c) Visualize</p> </li> </ol>"},{"location":"chapters/qbank_ans/#unit-5a-flow-of-control-and-functions","title":"Unit 5a: Flow of Control and Functions","text":"<ol> <li> <p>a) Sequence    Explanation: By default, instructions in a Python program are executed in sequence.</p> </li> <li> <p>b) Break</p> </li> <li> <p>False    Explanation: A <code>while</code> loop is generally used when the number of iterations is not known beforehand.</p> </li> <li> <p>a) Ends the current iteration and moves to the next one</p> </li> <li> <p>b) def</p> </li> <li> <p>b) for loop</p> </li> <li> <p>b) def</p> </li> <li> <p>True</p> </li> <li> <p>a) To exit the function and return a value</p> </li> <li> <p>c) Loop</p> </li> <li> <p>b) Selection</p> </li> <li> <p>b) Terminates the loop entirely</p> </li> <li> <p>True</p> </li> <li> <p>a) def function_name():</p> </li> <li> <p>b) for</p> </li> <li> <p>b) if-else statement</p> </li> <li> <p>True</p> </li> <li> <p>b) 0, 1, 2</p> </li> <li> <p>b) break</p> </li> <li> <p>a) Skip the rest of the current iteration and move to the next one</p> </li> </ol>"},{"location":"chapters/qbank_ans/#unit-5b-strings-and-lists","title":"Unit 5b: Strings and Lists","text":"<ol> <li> <p>c) Using quotes</p> </li> <li> <p>b) e    Explanation: The index starts at 0, so index 1 refers to the second character.</p> </li> <li> <p>False    Explanation: Strings in Python are immutable, meaning they cannot be changed after creation.</p> </li> <li> <p>a) Using the <code>append()</code> method</p> </li> <li> <p>a) 3</p> </li> <li> <p>a) Mutable</p> </li> <li> <p>True</p> </li> <li> <p>a) 0</p> </li> <li> <p>b) Returns the length of the list</p> </li> <li> <p>b) -1</p> </li> <li> <p>a) <code>[1, 2, 3]</code></p> </li> <li> <p>True</p> </li> <li> <p>b) th</p> </li> <li> <p>c) append()</p> </li> <li> <p>b) [10, 20, 30, 40, 50]</p> </li> <li> <p>c) End</p> </li> <li> <p>True</p> </li> <li> <p>b) banana</p> </li> <li> <p>d) Both a and c</p> </li> <li> <p>b) Specified</p> </li> </ol>"},{"location":"chapters/qbank_ans/#unit-5c-tuples-and-dictionaries","title":"Unit 5c: Tuples and Dictionaries","text":"<ol> <li> <p>c) Using parentheses</p> </li> <li> <p>False    Explanation: Tuples in Python are immutable, meaning they cannot be modified once created.</p> </li> <li> <p>b) 2</p> </li> <li> <p>b) A combination of a key and its associated value in a dictionary</p> </li> <li> <p>c) update()</p> </li> <li> <p>b) Immutable</p> </li> <li> <p>True</p> </li> <li> <p>a) Alice</p> </li> <li> <p>c) <code>{}</code></p> </li> <li> <p>a) Total number</p> </li> <li> <p>a) <code>(1, 2, 3)</code></p> </li> <li> <p>False     Explanation: Dictionary keys must be immutable data types like strings, integers, or tuples, but not lists.</p> </li> <li> <p>c) 40</p> </li> <li> <p>a) pop()</p> </li> <li> <p>b) Immutable</p> </li> <li> <p>b) 2</p> </li> <li> <p>True</p> </li> <li> <p>b) 31</p> </li> <li> <p>a) tuple[0]</p> </li> <li> <p>a) keys()</p> </li> </ol>"},{"location":"chapters/qbank_ans/#unit-6-societal-impacts","title":"Unit 6: Societal Impacts","text":"<ol> <li> <p>b) The trail of data left by your online activities</p> </li> <li> <p>True</p> </li> <li> <p>b) To protect users from cybercrime</p> </li> <li> <p>a) Intellectual Property Rights</p> </li> <li> <p>d) Copyright infringement    Explanation: Copyright infringement is an IPR violation, not cybercrime.</p> </li> <li> <p>b) Social media</p> </li> <li> <p>True</p> </li> <li> <p>c) Harassment and emotional distress</p> </li> <li> <p>d) All of the above</p> </li> <li> <p>a) IT</p> </li> <li> <p>True</p> </li> <li> <p>a) A cybercrime where attackers trick users into giving sensitive information</p> </li> <li> <p>b) Creations of the mind</p> </li> <li> <p>True</p> </li> <li> <p>a) Using strong passwords</p> </li> <li> <p>b) Physical strain and health issues</p> </li> <li> <p>b) 20-20-20 Rule</p> </li> <li> <p>d) All of the above</p> </li> <li> <p>True</p> </li> <li> <p>b) To protect the rights of creators and innovators</p> </li> </ol>"},{"location":"chapters/qbank_ans/#unit-7-practical-questions","title":"Unit 7: Practical Questions","text":"<ol> <li> <p>a) Hello computer world!</p> </li> <li> <p>a) 12</p> </li> <li> <p>a) 5</p> </li> <li> <p>True</p> </li> <li> <p>b) 10 5</p> </li> <li> <p>a) 0.621371</p> </li> <li> <p>a) (Celsius * 9/5) + 32</p> </li> <li> <p>b) 12</p> </li> <li> <p>True</p> </li> <li> <p>a) [1, 2, 3, 4]</p> </li> </ol>"},{"location":"hi/","title":"\u0939\u093e\u0908 \u0938\u094d\u0915\u0942\u0932 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u093e\u0907\u0902\u0938 \u092e\u0947\u0902 \u0906\u092a\u0915\u093e \u0938\u094d\u0935\u093e\u0917\u0924 \u0939\u0948","text":"<p>\u092f\u0939\u093e\u0901 \u0906\u092a \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u093e\u0907\u0902\u0938 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0938\u0902\u0915\u094d\u0937\u093f\u092a\u094d\u0924 \u0914\u0930 \u0935\u094d\u092f\u093e\u0935\u0939\u093e\u0930\u093f\u0915 \u092a\u093e\u0920\u094b\u0902 \u092e\u0947\u0902 \u0938\u092c \u0915\u0941\u091b \u0938\u0940\u0916\u0947\u0902\u0917\u0947 https://deepsai8.github.io/hscs/\u0964</p>"},{"location":"hi/#_2","title":"\u0932\u093f\u0902\u0915","text":""},{"location":"hi/#_3","title":"\u0939\u092e \u091a\u0940\u091c\u093c\u094b\u0902 \u0915\u094b \u091c\u093f\u0924\u0928\u093e \u0938\u0902\u092d\u0935 \u0939\u094b \u0909\u0924\u0928\u093e \u0938\u0939\u091c \u092c\u0928\u093e\u0928\u0947 \u0915\u0940 \u0915\u094b\u0936\u093f\u0936 \u0915\u0930\u0947\u0902\u0917\u0947!","text":""},{"location":"hi/chapters/chapter01/","title":"\u092f\u0942\u0928\u093f\u091f 1: \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092a\u094d\u0930\u0923\u093e\u0932\u0940","text":""},{"location":"hi/chapters/chapter01/#_1","title":"\u092a\u0930\u093f\u091a\u092f","text":"<p>\u0906\u091c \u0915\u0940 \u0921\u093f\u091c\u093f\u091f\u0932 \u0926\u0941\u0928\u093f\u092f\u093e \u092e\u0947\u0902, \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0939\u092e\u093e\u0930\u0947 \u0926\u0948\u0928\u093f\u0915 \u091c\u0940\u0935\u0928 \u0915\u093e \u090f\u0915 \u0905\u092d\u093f\u0928\u094d\u0928 \u0939\u093f\u0938\u094d\u0938\u093e \u092c\u0928 \u0917\u090f \u0939\u0948\u0902, \u091a\u093e\u0939\u0947 \u0935\u0939 \u0938\u094d\u0915\u0942\u0932 \u0939\u094b, \u0915\u093e\u092e \u0939\u094b, \u092e\u0928\u094b\u0930\u0902\u091c\u0928 \u0939\u094b \u092f\u093e \u0938\u0902\u091a\u093e\u0930\u0964 \u0932\u0947\u0915\u093f\u0928 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0935\u093e\u0938\u094d\u0924\u0935 \u092e\u0947\u0902 \u0915\u094d\u092f\u093e \u0939\u0948 \u0914\u0930 \u092f\u0939 \u0915\u0948\u0938\u0947 \u0915\u093e\u092e \u0915\u0930\u0924\u093e \u0939\u0948? \u0907\u0938 \u0905\u0927\u094d\u092f\u093e\u092f \u092e\u0947\u0902, \u0939\u092e \u090f\u0915 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u0947 \u0906\u0935\u0936\u094d\u092f\u0915 \u0918\u091f\u0915\u094b\u0902, \u0907\u0938\u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0940 \u091c\u093e\u0928\u0947 \u0935\u093e\u0932\u0940 \u092e\u0947\u092e\u094b\u0930\u0940 \u0915\u0947 \u092a\u094d\u0930\u0915\u093e\u0930, \u0938\u0949\u092b\u094d\u091f\u0935\u0947\u092f\u0930 \u0915\u0940 \u092d\u0942\u092e\u093f\u0915\u093e, \u0914\u0930 \u092a\u094d\u0930\u093e\u0930\u0902\u092d\u093f\u0915 \u092e\u0936\u0940\u0928\u094b\u0902 \u0938\u0947 \u0932\u0947\u0915\u0930 \u0906\u091c \u0915\u0940 \u0909\u0928\u094d\u0928\u0924 \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u094b\u0902 \u0924\u0915 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0947 \u0935\u093f\u0915\u093e\u0938 \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0947\u0902\u0917\u0947\u0964 \u0939\u092e \u092f\u0939 \u092d\u0940 \u0926\u0947\u0916\u0947\u0902\u0917\u0947 \u0915\u093f \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0921\u0947\u091f\u093e \u0915\u094b \u0915\u0948\u0938\u0947 \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u0909\u0928\u0938\u0947 \u0938\u0902\u0935\u093e\u0926 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0939\u092e \u0915\u094c\u0928 \u0938\u0940 \u092d\u093e\u0937\u093e\u090f\u0901 \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 \u0911\u092a\u0930\u0947\u091f\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e \u092a\u0942\u0930\u0947 \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u094b \u0915\u0948\u0938\u0947 \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter01/#1-central-processing-unit-cpu","title":"1. Central Processing Unit (CPU)","text":"<ul> <li> <p>Central Processing Unit (CPU) \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u093e \u0939\u0943\u0926\u092f \u0939\u0948, \u091c\u093f\u0938\u0947 \u0905\u0915\u094d\u0938\u0930 \u092e\u0936\u0940\u0928 \u0915\u093e \"\u092e\u0938\u094d\u0924\u093f\u0937\u094d\u0915\" \u0915\u0939\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u092f\u0939 \u0917\u0923\u0928\u093e\u090f\u0901 \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u0947 \u0915\u093e\u0930\u094d\u092f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0906\u0935\u0936\u094d\u092f\u0915 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u093e \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u0907\u0938\u0947 \u0909\u0938 \u092c\u0949\u0938 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0938\u094b\u091a\u0947\u0902 \u091c\u094b \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0947 \u0905\u0902\u0926\u0930 \u0939\u094b \u0930\u0939\u0940 \u0939\u0930 \u091a\u0940\u091c \u0915\u094b \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>Control Unit (CU): CPU \u0915\u093e \u0935\u0939 \u0939\u093f\u0938\u094d\u0938\u093e \u091c\u094b \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u0940 \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0947 \u0905\u0928\u094d\u092f \u0918\u091f\u0915\u094b\u0902 \u0915\u0947 \u0938\u0902\u091a\u093e\u0932\u0928 \u0915\u093e \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u0928 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>Arithmetic Logic Unit (ALU): \u092f\u0939 \u0918\u091f\u0915 \u0938\u092d\u0940 \u0905\u0902\u0915\u0917\u0923\u093f\u0924\u0940\u092f (\u091c\u094b\u0921\u093c, \u0918\u091f\u093e\u0935, \u0906\u0926\u093f) \u0914\u0930 \u0924\u093e\u0930\u094d\u0915\u093f\u0915 (\u091c\u0948\u0938\u0947 \u0915\u093f \u0905\u0927\u093f\u0915, \u0915\u092e) \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> </ul>"},{"location":"hi/chapters/chapter01/#2-inputoutput-devices-io-devices","title":"2. Input/Output Devices (I/O Devices):","text":"<ul> <li>Input Devices: \u092f\u0947 \u0939\u092e\u0947\u0902 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0947 \u0938\u093e\u0925 \u0938\u0902\u0935\u093e\u0926 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0907\u0938\u0947 \u0921\u0947\u091f\u093e \u092f\u093e \u0928\u093f\u0930\u094d\u0926\u0947\u0936 \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964 \u0907\u0938\u0915\u0947 \u0909\u0926\u093e\u0939\u0930\u0923 \u0939\u0948\u0902:</li> <li>Keyboard: \u091f\u0947\u0915\u094d\u0938\u094d\u091f \u0907\u0928\u092a\u0941\u091f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f\u0964</li> <li> <p>Mouse: \u092a\u0949\u0907\u0902\u091f \u0914\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u091c\u093f\u0938\u0938\u0947 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0947 \u0917\u094d\u0930\u093e\u092b\u093f\u0915\u0932 \u092f\u0942\u091c\u0930 \u0907\u0902\u091f\u0930\u092b\u0947\u0938 \u0915\u0947 \u0938\u093e\u0925 \u0907\u0902\u091f\u0930\u0948\u0915\u094d\u091f \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>Output Devices: \u092f\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0947 \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0947 \u092a\u0930\u093f\u0923\u093e\u092e \u0926\u093f\u0916\u093e\u0924\u0947 \u0939\u0948\u0902\u0964 \u0938\u093e\u092e\u093e\u0928\u094d\u092f \u0909\u0926\u093e\u0939\u0930\u0923 \u0939\u0948\u0902:</p> </li> <li>Monitor: \u0935\u093f\u091c\u093c\u0941\u0905\u0932 \u0906\u0909\u091f\u092a\u0941\u091f \u091c\u0948\u0938\u0947 \u091b\u0935\u093f\u092f\u094b\u0902 \u0914\u0930 \u091f\u0947\u0915\u094d\u0938\u094d\u091f \u0915\u094b \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>Printer: \u0926\u0938\u094d\u0924\u093e\u0935\u0947\u091c\u093c\u094b\u0902 \u0915\u0940 \u092d\u094c\u0924\u093f\u0915 \u0915\u0949\u092a\u0940 \u0924\u0948\u092f\u093e\u0930 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter01/#3","title":"3. \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u093e \u0935\u093f\u0915\u093e\u0938:","text":"<p>\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0915\u093e \u0935\u093f\u0915\u093e\u0938 \u0915\u0908 \u0936\u0924\u093e\u092c\u094d\u0926\u093f\u092f\u094b\u0902 \u092e\u0947\u0902 \u092b\u0948\u0932\u093e \u0939\u0941\u0906 \u0939\u0948\u0964 \u0936\u0941\u0930\u0941\u0906\u0924\u0940 \u092f\u093e\u0902\u0924\u094d\u0930\u093f\u0915 \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u0938\u0947 \u0932\u0947\u0915\u0930 \u0906\u091c \u0915\u0940 \u0909\u091a\u094d\u091a \u0924\u0915\u0928\u0940\u0915 \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u094b\u0902 \u0924\u0915, \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0915\u0947 \u0906\u0915\u093e\u0930, \u0917\u0924\u093f \u0914\u0930 \u0915\u094d\u0937\u092e\u0924\u093e\u0913\u0902 \u092e\u0947\u0902 \u091c\u092c\u0930\u0926\u0938\u094d\u0924 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928 \u0939\u0941\u090f \u0939\u0948\u0902\u0964 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0915\u0947 \u0935\u093f\u0915\u093e\u0938 \u0915\u094b \u092a\u093e\u0901\u091a \u092a\u0940\u0922\u093c\u093f\u092f\u094b\u0902 \u092e\u0947\u0902 \u0935\u093f\u092d\u093e\u091c\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948:</p>"},{"location":"hi/chapters/chapter01/#1940-1956-vacuum-tubes","title":"\u092a\u0939\u0932\u0940 \u092a\u0940\u0922\u093c\u0940 (1940-1956): Vacuum Tubes","text":"<ul> <li>\u0924\u0915\u0928\u0940\u0915: \u092a\u0939\u0932\u0940 \u092a\u0940\u0922\u093c\u0940 \u0915\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0928\u0947 \u0921\u0947\u091f\u093e \u0915\u094b \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0914\u0930 \u0938\u094d\u091f\u094b\u0930 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f Vacuum Tubes \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e\u0964 \u092f\u0947 \u091f\u094d\u092f\u0942\u092c \u092c\u0921\u093c\u0947, \u0928\u093e\u091c\u0941\u0915 \u0914\u0930 \u092c\u0939\u0941\u0924 \u0905\u0927\u093f\u0915 \u090a\u0930\u094d\u091c\u093e \u0915\u093e \u0909\u092a\u092d\u094b\u0917 \u0915\u0930\u0924\u0947 \u0925\u0947\u0964</li> <li>\u0906\u0915\u093e\u0930 \u0914\u0930 \u0935\u093f\u0936\u0947\u0937\u0924\u093e\u090f\u0902: \u092f\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0935\u093f\u0936\u093e\u0932 \u0939\u094b\u0924\u0947 \u0925\u0947, \u092a\u0942\u0930\u0947 \u0915\u092e\u0930\u094b\u0902 \u0915\u094b \u0918\u0947\u0930\u0924\u0947 \u0925\u0947\u0964 \u092f\u0947 \u092c\u0939\u0941\u0924 \u0917\u0930\u094d\u092e\u0940 \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0915\u0930\u0924\u0947 \u0925\u0947 \u0914\u0930 \u0905\u0915\u094d\u0938\u0930 \u0916\u0930\u093e\u092c \u0939\u094b \u091c\u093e\u0924\u0947 \u0925\u0947\u0964</li> <li>\u0909\u0926\u093e\u0939\u0930\u0923: <ul> <li>ENIAC (Electronic Numerical Integrator and Computer): \u092a\u094d\u0930\u093e\u0930\u0902\u092d\u093f\u0915 \u0938\u093e\u092e\u093e\u0928\u094d\u092f-\u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f \u0935\u093e\u0932\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u092e\u0947\u0902 \u0938\u0947 \u090f\u0915, \u091c\u093f\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0917\u0923\u0928\u093e \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u0917\u092f\u093e\u0964  </li> <li>UNIVAC (Universal Automatic Computer): \u0935\u093e\u0923\u093f\u091c\u094d\u092f\u093f\u0915 \u0930\u0942\u092a \u0938\u0947 \u092c\u0947\u091a\u093e \u091c\u093e\u0928\u0947 \u0935\u093e\u0932\u093e \u092a\u0939\u0932\u093e \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u0964  </li> </ul> </li> <li>\u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u092d\u093e\u0937\u093e: \u092e\u0936\u0940\u0928 \u092d\u093e\u0937\u093e \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0925\u093e, \u091c\u093f\u0938\u092e\u0947\u0902 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u0947 \u0938\u0902\u0935\u093e\u0926 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092c\u093e\u0907\u0928\u0930\u0940 \u0915\u094b\u0921 (0 \u0914\u0930 1) \u0939\u094b\u0924\u0947 \u0925\u0947\u0964</li> <li>\u092e\u0941\u0916\u094d\u092f \u0935\u093f\u0936\u0947\u0937\u0924\u093e\u090f\u0902: \u0927\u0940\u092e\u0940 \u0917\u0924\u093f, \u0938\u0940\u092e\u093f\u0924 \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u093f\u0902\u0917 \u0915\u094d\u0937\u092e\u0924\u093e\u090f\u0902, \u092c\u0939\u0941\u0924 \u092e\u0939\u0902\u0917\u093e \u0914\u0930 \u092e\u0941\u0916\u094d\u092f \u0930\u0942\u092a \u0938\u0947 \u0935\u0948\u091c\u094d\u091e\u093e\u0928\u093f\u0915 \u0914\u0930 \u0938\u0948\u0928\u094d\u092f \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0925\u093e\u0964</li> </ul>"},{"location":"hi/chapters/chapter01/#1956-1963-transistors","title":"\u0926\u0942\u0938\u0930\u0940 \u092a\u0940\u0922\u093c\u0940 (1956-1963): Transistors","text":"<ul> <li>\u0924\u0915\u0928\u0940\u0915: Vacuum Tubes \u0915\u094b Transistors \u0926\u094d\u0935\u093e\u0930\u093e \u092a\u094d\u0930\u0924\u093f\u0938\u094d\u0925\u093e\u092a\u093f\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e, \u091c\u094b \u091b\u094b\u091f\u0947, \u0924\u0947\u091c\u093c, \u0905\u0927\u093f\u0915 \u090a\u0930\u094d\u091c\u093e-\u0915\u0941\u0936\u0932 \u0914\u0930 \u0905\u0927\u093f\u0915 \u0935\u093f\u0936\u094d\u0935\u0938\u0928\u0940\u092f \u0925\u0947\u0964</li> <li>\u0906\u0915\u093e\u0930 \u0914\u0930 \u0935\u093f\u0936\u0947\u0937\u0924\u093e\u090f\u0902: \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u091b\u094b\u091f\u0947, \u0938\u0938\u094d\u0924\u0947 \u0914\u0930 \u0915\u092e \u090a\u0930\u094d\u091c\u093e-\u0916\u092a\u0924 \u0935\u093e\u0932\u0947 \u0939\u094b \u0917\u090f, \u0939\u093e\u0932\u093e\u0902\u0915\u093f \u0906\u091c \u0915\u0940 \u0924\u0941\u0932\u0928\u093e \u092e\u0947\u0902 \u092b\u093f\u0930 \u092d\u0940 \u0915\u093e\u092b\u0940 \u092c\u0921\u093c\u0947 \u0925\u0947\u0964</li> <li>\u0909\u0926\u093e\u0939\u0930\u0923:<ul> <li>IBM 7094: \u0935\u094d\u092f\u093e\u092a\u093e\u0930 \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u093f\u0902\u0917 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0925\u093e\u0964  </li> <li>CDC 1604: \u092a\u094d\u0930\u093e\u0930\u0902\u092d\u093f\u0915 \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u0923 \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0921\u093f\u091c\u093c\u093e\u0907\u0928 \u0915\u093f\u090f \u0917\u090f \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u092e\u0947\u0902 \u0938\u0947 \u090f\u0915\u0964  </li> </ul> </li> <li>\u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u092d\u093e\u0937\u093e: \u0905\u0938\u0947\u0902\u092c\u0932\u0940 \u092d\u093e\u0937\u093e \u0915\u093e \u092a\u0930\u093f\u091a\u092f \u0926\u093f\u092f\u093e \u0917\u092f\u093e, \u091c\u094b \u092e\u0936\u0940\u0928 \u092d\u093e\u0937\u093e \u0915\u0940 \u0924\u0941\u0932\u0928\u093e \u092e\u0947\u0902 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0928\u093e \u0906\u0938\u093e\u0928 \u092c\u0928\u093e\u0924\u0940 \u0925\u0940\u0964</li> <li>\u092e\u0941\u0916\u094d\u092f \u0935\u093f\u0936\u0947\u0937\u0924\u093e\u090f\u0902: \u0924\u0947\u091c \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u093f\u0902\u0917, \u0915\u092e \u0917\u0930\u094d\u092e\u0940 \u0909\u0924\u094d\u092a\u093e\u0926\u0928, \u0914\u0930 \u0935\u093e\u0923\u093f\u091c\u094d\u092f\u093f\u0915 \u0914\u0930 \u0935\u094d\u092f\u093e\u0935\u0938\u093e\u092f\u093f\u0915 \u0909\u092a\u092f\u094b\u0917 \u0915\u0947 \u0932\u093f\u090f \u0905\u0927\u093f\u0915 \u0935\u094d\u092f\u093e\u0935\u0939\u093e\u0930\u093f\u0915\u0964</li> </ul>"},{"location":"hi/chapters/chapter01/#1964-1971-integrated-circuits-ics","title":"\u0924\u0940\u0938\u0930\u0940 \u092a\u0940\u0922\u093c\u0940 (1964-1971): Integrated Circuits (ICs)","text":"<ul> <li>\u0924\u0915\u0928\u0940\u0915: Integrated Circuits (ICs) \u0915\u093e \u0906\u0935\u093f\u0937\u094d\u0915\u093e\u0930, \u091c\u093f\u0938\u092e\u0947\u0902 \u090f\u0915 \u091a\u093f\u092a \u092a\u0930 \u0915\u0908 Transistors \u0915\u094b \u090f\u0915\u0940\u0915\u0943\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e, \u0928\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u092e\u0947\u0902 \u0915\u094d\u0930\u093e\u0902\u0924\u093f \u0932\u093e \u0926\u0940\u0964</li> <li>\u0906\u0915\u093e\u0930 \u0914\u0930 \u0935\u093f\u0936\u0947\u0937\u0924\u093e\u090f\u0902: \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092c\u0939\u0941\u0924 \u091b\u094b\u091f\u0947, \u0924\u0947\u091c, \u0905\u0927\u093f\u0915 \u0935\u093f\u0936\u094d\u0935\u0938\u0928\u0940\u092f \u0914\u0930 \u0938\u0938\u094d\u0924\u0947 \u0939\u094b \u0917\u090f\u0964 \u0905\u092c \u0935\u0947 \u0935\u094d\u092f\u0935\u0938\u093e\u092f \u0914\u0930 \u0935\u093e\u0923\u093f\u091c\u094d\u092f\u093f\u0915 \u0909\u092a\u092f\u094b\u0917 \u0915\u0947 \u0932\u093f\u090f \u092d\u0940 \u0909\u092a\u0932\u092c\u094d\u0927 \u0939\u094b \u0917\u090f\u0964</li> <li>\u0909\u0926\u093e\u0939\u0930\u0923:<ul> <li>IBM 360 Series: \u0907\u0938 \u092a\u0940\u0922\u093c\u0940 \u092e\u0947\u0902 \u0938\u092c\u0938\u0947 \u0932\u094b\u0915\u092a\u094d\u0930\u093f\u092f \u0914\u0930 \u0935\u094d\u092f\u093e\u092a\u0915 \u0930\u0942\u092a \u0938\u0947 \u0909\u092a\u092f\u094b\u0917 \u0915\u0940 \u091c\u093e\u0928\u0947 \u0935\u093e\u0932\u0940 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0936\u094d\u0930\u0943\u0902\u0916\u0932\u093e\u0913\u0902 \u092e\u0947\u0902 \u0938\u0947 \u090f\u0915\u0964</li> <li>PDP-8: \u091b\u094b\u091f\u0947, \u0905\u0927\u093f\u0915 \u0938\u0938\u094d\u0924\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930, \u091c\u093f\u0928\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0935\u093f\u0936\u094d\u0935\u0935\u093f\u0926\u094d\u092f\u093e\u0932\u092f\u094b\u0902 \u0914\u0930 \u0905\u0928\u0941\u0938\u0902\u0927\u093e\u0928 \u0915\u0947\u0902\u0926\u094d\u0930\u094b\u0902 \u0926\u094d\u0935\u093e\u0930\u093e \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0925\u093e\u0964</li> </ul> </li> <li>\u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u092d\u093e\u0937\u093e: \u0909\u091a\u094d\u091a-\u0938\u094d\u0924\u0930\u0940\u092f \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u092d\u093e\u0937\u093e\u090f\u0901 \u091c\u0948\u0938\u0947 FORTRAN \u0914\u0930 COBOL \u0935\u093f\u0915\u0938\u093f\u0924 \u0915\u0940 \u0917\u0908\u0902\u0964</li> <li>\u092e\u0941\u0916\u094d\u092f \u0935\u093f\u0936\u0947\u0937\u0924\u093e\u090f\u0902: \u092c\u0922\u093c\u0940 \u0939\u0941\u0908 \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u093f\u0902\u0917 \u0936\u0915\u094d\u0924\u093f, \u0905\u0927\u093f\u0915 \u0938\u0938\u094d\u0924\u0940, \u0914\u0930 \u0938\u0930\u0915\u093e\u0930\u0940 \u0914\u0930 \u0905\u0928\u0941\u0938\u0902\u0927\u093e\u0928 \u0938\u0947 \u092a\u0930\u0947 \u0915\u0908 \u0909\u0926\u094d\u092f\u094b\u0917\u094b\u0902 \u092e\u0947\u0902 \u0909\u092a\u092f\u094b\u0917 \u0915\u0940 \u091c\u093e\u0928\u0947 \u0932\u0917\u0940\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter01/#1971-microprocessors","title":"\u091a\u094c\u0925\u0940 \u092a\u0940\u0922\u093c\u0940 (1971-\u0935\u0930\u094d\u0924\u092e\u093e\u0928): Microprocessors","text":"<ul> <li>\u0924\u0915\u0928\u0940\u0915: \u0907\u0938 \u092a\u0940\u0922\u093c\u0940 \u0915\u094b Microprocessors \u0915\u0947 \u0935\u093f\u0915\u093e\u0938 \u0926\u094d\u0935\u093e\u0930\u093e \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e, \u091c\u093f\u0938\u0928\u0947 CPU \u0915\u094b \u090f\u0915 \u090f\u0915\u0932 \u091a\u093f\u092a \u092a\u0930 \u090f\u0915\u0940\u0915\u0943\u0924 \u0915\u093f\u092f\u093e\u0964 \u0907\u0938\u0938\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0905\u0927\u093f\u0915 \u0938\u0938\u094d\u0924\u0947 \u0914\u0930 \u0938\u0941\u0932\u092d \u0939\u094b \u0917\u090f\u0964</li> <li>\u0906\u0915\u093e\u0930 \u0914\u0930 \u0935\u093f\u0936\u0947\u0937\u0924\u093e\u090f\u0902: \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0907\u0924\u0928\u0947 \u091b\u094b\u091f\u0947 \u0939\u094b \u0917\u090f \u0915\u093f \u0909\u0928\u094d\u0939\u0947\u0902 \u0921\u0947\u0938\u094d\u0915 \u092a\u0930 \u092f\u093e \u0918\u0930 \u092e\u0947\u0902 \u092b\u093f\u091f \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0947\u0964 \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 (PC) \u0915\u094d\u0930\u093e\u0902\u0924\u093f \u0936\u0941\u0930\u0942 \u0939\u0941\u0908\u0964</li> <li>\u0909\u0926\u093e\u0939\u0930\u0923:<ul> <li>Intel 4004: \u092a\u0939\u0932\u093e \u0935\u094d\u092f\u093e\u0935\u0938\u093e\u092f\u093f\u0915 \u0930\u0942\u092a \u0938\u0947 \u0909\u092a\u0932\u092c\u094d\u0927 Microprocessor, \u091c\u093f\u0938\u0928\u0947 \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 \u0915\u094d\u0930\u093e\u0902\u0924\u093f \u0915\u0940 \u0936\u0941\u0930\u0941\u0906\u0924 \u0915\u0940\u0964</li> <li>IBM PC: \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u094b \u0932\u094b\u0915\u092a\u094d\u0930\u093f\u092f \u092c\u0928\u093e\u092f\u093e, \u091c\u093f\u0938\u0938\u0947 \u092f\u0939 \u0914\u0938\u0924 \u0909\u092a\u092d\u094b\u0915\u094d\u0924\u093e \u0915\u0947 \u0932\u093f\u090f \u0938\u0941\u0932\u092d \u0939\u094b \u0917\u092f\u093e\u0964</li> </ul> </li> <li>\u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u092d\u093e\u0937\u093e: \u0909\u091a\u094d\u091a-\u0938\u094d\u0924\u0930\u0940\u092f \u092d\u093e\u0937\u093e\u090f\u0901 \u091c\u0948\u0938\u0947 C \u0914\u0930 C++ \u0935\u094d\u092f\u093e\u092a\u0915 \u0930\u0942\u092a \u0938\u0947 \u0909\u092a\u092f\u094b\u0917 \u092e\u0947\u0902 \u0906\u0908\u0902\u0964</li> <li>\u092e\u0941\u0916\u094d\u092f \u0935\u093f\u0936\u0947\u0937\u0924\u093e\u090f\u0902: \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0915\u093e \u092c\u0921\u093c\u0947 \u092a\u0948\u092e\u093e\u0928\u0947 \u092a\u0930 \u0909\u0924\u094d\u092a\u093e\u0926\u0928, \u0917\u094d\u0930\u093e\u092b\u093f\u0915\u0932 \u092f\u0942\u091c\u0930 \u0907\u0902\u091f\u0930\u092b\u0947\u0938 (GUIs) \u0915\u0940 \u0936\u0941\u0930\u0941\u0906\u0924, \u0914\u0930 \u0917\u0924\u093f \u0914\u0930 \u0938\u094d\u091f\u094b\u0930\u0947\u091c \u092e\u0947\u0902 \u091c\u092c\u0930\u0926\u0938\u094d\u0924 \u0935\u0943\u0926\u094d\u0927\u093f\u0964</li> </ul>"},{"location":"hi/chapters/chapter01/#artificial-intelligence-ai","title":"\u092a\u093e\u0901\u091a\u0935\u0940\u0902 \u092a\u0940\u0922\u093c\u0940 (\u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u0914\u0930 \u092d\u0935\u093f\u0937\u094d\u092f): Artificial Intelligence (AI)","text":"<ul> <li>\u0924\u0915\u0928\u0940\u0915: \u092a\u093e\u0901\u091a\u0935\u0940\u0902 \u092a\u0940\u0922\u093c\u0940 \u0915\u093e \u092b\u094b\u0915\u0938 Artificial Intelligence (AI) \u0914\u0930 Quantum Computing \u092a\u0930 \u0939\u0948\u0964 \u0905\u092c \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 AI \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u092e\u093e\u0928\u0935 \u092c\u0941\u0926\u094d\u0927\u093f\u092e\u0924\u094d\u0924\u093e \u0914\u0930 \u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947\u0928\u0947 \u0915\u093e \u0905\u0928\u0941\u0915\u0930\u0923 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902\u0964</li> <li>\u0906\u0915\u093e\u0930 \u0914\u0930 \u0935\u093f\u0936\u0947\u0937\u0924\u093e\u090f\u0902: \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0915\u093e \u0906\u0915\u093e\u0930 \u092c\u0947\u0939\u0926 \u091b\u094b\u091f\u093e \u0939\u094b \u0917\u092f\u093e \u0939\u0948 (\u091c\u0948\u0938\u0947 \u0938\u094d\u092e\u093e\u0930\u094d\u091f\u092b\u094b\u0928), \u091c\u092c\u0915\u093f \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u093f\u0902\u0917 \u0936\u0915\u094d\u0924\u093f \u0914\u0930 \u0938\u094d\u091f\u094b\u0930\u0947\u091c \u092e\u0947\u0902 \u092d\u093e\u0930\u0940 \u0935\u0943\u0926\u094d\u0927\u093f \u0939\u0941\u0908 \u0939\u0948\u0964 Quantum Computers, \u0939\u093e\u0932\u093e\u0901\u0915\u093f \u0905\u092d\u0940 \u092a\u094d\u0930\u092f\u094b\u0917\u093e\u0924\u094d\u092e\u0915 \u0939\u0948\u0902, \u0910\u0938\u0947 \u0938\u092e\u0938\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u0939\u0932 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0915\u094d\u0937\u092e\u0924\u093e \u0926\u093f\u0916\u093e \u0930\u0939\u0947 \u0939\u0948\u0902 \u091c\u094b \u092a\u093e\u0930\u0902\u092a\u0930\u093f\u0915 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0915\u0940 \u0915\u094d\u0937\u092e\u0924\u093e \u0938\u0947 \u092a\u0930\u0947 \u0939\u0948\u0902\u0964</li> <li>\u0909\u0926\u093e\u0939\u0930\u0923:<ul> <li>IBM Watson: \u090f\u0915 AI \u0938\u093f\u0938\u094d\u091f\u092e \u091c\u094b \u092a\u094d\u0930\u093e\u0915\u0943\u0924\u093f\u0915 \u092d\u093e\u0937\u093e \u092a\u094d\u0930\u0936\u094d\u0928\u094b\u0902 \u0915\u094b \u0938\u092e\u091d\u0928\u0947 \u0914\u0930 \u0909\u0924\u094d\u0924\u0930 \u0926\u0947\u0928\u0947 \u092e\u0947\u0902 \u0938\u0915\u094d\u0937\u092e \u0939\u0948\u0964</li> <li>Quantum Computers: \u0939\u093e\u0932\u093e\u0901\u0915\u093f \u0905\u092d\u0940 \u0935\u093f\u0915\u093e\u0938 \u092e\u0947\u0902 \u0939\u0948\u0902, Quantum Computers \u0905\u0935\u093f\u0936\u094d\u0935\u0938\u0928\u0940\u092f \u0917\u0924\u093f \u0938\u0947 \u091c\u091f\u093f\u0932 \u0938\u092e\u0938\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u0939\u0932 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0915\u094d\u0937\u092e\u0924\u093e \u0930\u0916\u0924\u0947 \u0939\u0948\u0902\u0964</li> </ul> </li> <li>\u092e\u0941\u0916\u094d\u092f \u0935\u093f\u0936\u0947\u0937\u0924\u093e\u090f\u0902: \u092e\u0936\u0940\u0928 \u0932\u0930\u094d\u0928\u093f\u0902\u0917, \u0928\u094d\u092f\u0942\u0930\u0932 \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u0914\u0930 \u092a\u094d\u0930\u093e\u0915\u0943\u0924\u093f\u0915 \u092d\u093e\u0937\u093e \u092a\u094d\u0930\u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u0915\u0947 \u092d\u0935\u093f\u0937\u094d\u092f \u0915\u094b \u0906\u0915\u093e\u0930 \u0926\u0947 \u0930\u0939\u0947 \u0939\u0948\u0902\u0964 Internet of Things (IoT) \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0909\u092a\u0915\u0930\u0923 \u0906\u092a\u0938 \u092e\u0947\u0902 \u091c\u0941\u0921\u093c\u0947 \u0939\u0941\u090f \u0939\u0948\u0902, \u0914\u0930 Cloud Computing \u0915\u093e \u0909\u0926\u092f \u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094b\u0930\u0947\u091c \u0914\u0930 \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u093f\u0902\u0917 \u0915\u0947 \u0924\u0930\u0940\u0915\u094b\u0902 \u0915\u094b \u092c\u0926\u0932 \u0930\u0939\u093e \u0939\u0948\u0964</li> </ul> <p>\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0915\u093e \u0935\u093f\u0915\u093e\u0938: - \u092f\u093e\u0902\u0924\u094d\u0930\u093f\u0915 \u0938\u0947 \u0921\u093f\u091c\u093f\u091f\u0932 \u0924\u0915: \u092a\u0939\u0932\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092f\u093e\u0902\u0924\u094d\u0930\u093f\u0915 \u0925\u0947, \u091c\u093f\u0928\u092e\u0947\u0902 \u0917\u093f\u092f\u0930 \u0914\u0930 \u0932\u0940\u0935\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0925\u093e (\u091c\u0948\u0938\u0947 \u0915\u093f \u091a\u093e\u0930\u094d\u0932\u094d\u0938 \u092c\u0948\u092c\u0947\u091c \u0915\u093e Analytical Engine)\u0964 \u0938\u092e\u092f \u0915\u0947 \u0938\u093e\u0925, \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0921\u093f\u091c\u093f\u091f\u0932 \u092c\u0928 \u0917\u090f, \u091c\u093f\u0928\u092e\u0947\u0902 \u0907\u0932\u0947\u0915\u094d\u091f\u094d\u0930\u0949\u0928\u093f\u0915 \u0918\u091f\u0915\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u091c\u0948\u0938\u0947 \u0915\u093f Vacuum Tubes, Transistors, \u0914\u0930 Integrated Circuits\u0964 - \u091b\u094b\u091f\u0947, \u0924\u0947\u091c, \u0939\u094b\u0936\u093f\u092f\u093e\u0930: \u091c\u0948\u0938\u0947-\u091c\u0948\u0938\u0947 \u0924\u0915\u0928\u0940\u0915 \u0935\u093f\u0915\u0938\u093f\u0924 \u0939\u0941\u0908, \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u091b\u094b\u091f\u0947 \u0914\u0930 \u0924\u0947\u091c \u0939\u094b \u0917\u090f\u0964 \u0906\u091c \u0915\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0928 \u0915\u0947\u0935\u0932 \u091c\u091f\u093f\u0932 \u0917\u0923\u0928\u093e\u090f\u0901 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u092c\u0932\u094d\u0915\u093f \u0921\u0947\u091f\u093e \u0915\u0940 \u0935\u093f\u0936\u093e\u0932 \u092e\u093e\u0924\u094d\u0930\u093e \u0915\u094b \u092d\u0940 \u0938\u094d\u091f\u094b\u0930 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 \u092e\u093e\u0928\u0935 \u092c\u0941\u0926\u094d\u0927\u093f\u092e\u0924\u094d\u0924\u093e \u0915\u093e \u0905\u0928\u0941\u0915\u0930\u0923 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f AI \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter01/#_2","title":"\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092e\u0947\u092e\u094b\u0930\u0940","text":"<p>\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092e\u0947\u0902 \u092e\u0947\u092e\u094b\u0930\u0940 \u0909\u0928 \u0918\u091f\u0915\u094b\u0902 \u0915\u094b \u0938\u0902\u0926\u0930\u094d\u092d\u093f\u0924 \u0915\u0930\u0924\u0940 \u0939\u0948 \u091c\u094b \u0921\u0947\u091f\u093e \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964 \u092f\u0939\u093e\u0901 \u0907\u0938\u0915\u093e \u0935\u093f\u0938\u094d\u0924\u0943\u0924 \u0935\u093f\u0935\u0930\u0923 \u0939\u0948:</p>"},{"location":"hi/chapters/chapter01/#_3","title":"\u092e\u0947\u092e\u094b\u0930\u0940 \u0915\u0940 \u0907\u0915\u093e\u0907\u092f\u093e\u0901:","text":"<ul> <li>\u092c\u093f\u091f (b): \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092e\u0947\u0902 \u0938\u092c\u0938\u0947 \u091b\u094b\u091f\u0940 \u0921\u0947\u091f\u093e \u0907\u0915\u093e\u0908, \u091c\u094b \u090f\u0915 \u092c\u093e\u0907\u0928\u0930\u0940 \u092e\u093e\u0928 (0 \u092f\u093e 1) \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u0940 \u0939\u0948\u0964</li> <li>\u092c\u093e\u0907\u091f (B): 8 \u092c\u093f\u091f\u094d\u0938 \u0915\u093e \u0938\u0902\u0917\u094d\u0930\u0939, \u091c\u094b \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 \u090f\u0915 \u0905\u0915\u094d\u0937\u0930 \u092f\u093e \u0938\u0902\u0916\u094d\u092f\u093e \u091c\u0948\u0938\u0940 \u090f\u0915 \u0935\u0930\u094d\u0923 \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>\u092c\u0921\u093c\u0940 \u092e\u0947\u092e\u094b\u0930\u0940 \u0907\u0915\u093e\u0907\u092f\u094b\u0902 \u092e\u0947\u0902 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902:     \u0915\u093f\u0932\u094b\u092c\u093e\u0907\u091f (KB): 1,024 \u092c\u093e\u0907\u091f\u094d\u0938 \u092e\u0947\u0917\u093e\u092c\u093e\u0907\u091f (MB): 1,024 KB \u0917\u0940\u0917\u093e\u092c\u093e\u0907\u091f (GB): 1,024 MB \u091f\u0947\u0930\u093e\u092c\u093e\u0907\u091f (TB): 1,024 GB  </li> </ul>"},{"location":"hi/chapters/chapter01/#_4","title":"\u092e\u0947\u092e\u094b\u0930\u0940 \u0915\u0947 \u092a\u094d\u0930\u0915\u093e\u0930:","text":"<ol> <li> <p>\u092a\u094d\u0930\u093e\u0925\u092e\u093f\u0915 \u092e\u0947\u092e\u094b\u0930\u0940 (\u092e\u0941\u0916\u094d\u092f \u092e\u0947\u092e\u094b\u0930\u0940): RAM (Random Access Memory): \u0905\u0938\u094d\u0925\u093e\u092f\u0940 \u0938\u094d\u091f\u094b\u0930\u0947\u091c \u091c\u093f\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 CPU \u0926\u094d\u0935\u093e\u0930\u093e \u0909\u0938 \u0921\u0947\u091f\u093e \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u091c\u093f\u0938\u0947 \u0938\u0915\u094d\u0930\u093f\u092f \u0930\u0942\u092a \u0938\u0947 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e \u0930\u0939\u093e \u0939\u094b \u092f\u093e \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e \u0930\u0939\u093e \u0939\u094b\u0964 \u092f\u0939 \u0935\u094b\u0932\u093e\u091f\u093e\u0907\u0932 \u0939\u094b\u0924\u0940 \u0939\u0948, \u0905\u0930\u094d\u0925\u093e\u0924 \u092f\u0939 \u092c\u093f\u091c\u0932\u0940 \u092c\u0902\u0926 \u0939\u094b\u0928\u0947 \u092a\u0930 \u092e\u093f\u091f \u091c\u093e\u0924\u0940 \u0939\u0948\u0964     ROM (Read-Only Memory): \u0938\u094d\u0925\u093e\u092f\u0940 \u0938\u094d\u091f\u094b\u0930\u0947\u091c \u091c\u093f\u0938\u092e\u0947\u0902 \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u094b \u091a\u093e\u0932\u0942 \u0915\u0930\u0928\u0947 \u0914\u0930 \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0928\u093f\u0930\u094d\u0926\u0947\u0936 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964 RAM \u0915\u0947 \u0935\u093f\u092a\u0930\u0940\u0924, \u092f\u0939 \u0928\u0949\u0928-\u0935\u094b\u0932\u093e\u091f\u093e\u0907\u0932 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964</p> </li> <li> <p>\u0915\u0948\u0936 \u092e\u0947\u092e\u094b\u0930\u0940:     CPU \u0915\u0947 \u092a\u093e\u0938 \u0938\u094d\u0925\u093f\u0924 \u090f\u0915 \u0935\u093f\u0936\u0947\u0937 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u0940 \u0909\u091a\u094d\u091a \u0917\u0924\u093f \u0935\u093e\u0932\u0940 \u092e\u0947\u092e\u094b\u0930\u0940\u0964 \u092f\u0939 \u0905\u0915\u094d\u0938\u0930 \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u093f\u090f \u0917\u090f \u0921\u0947\u091f\u093e \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0924\u0940 \u0939\u0948 \u0924\u093e\u0915\u093f \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u093f\u0902\u0917 \u0924\u0947\u091c\u093c \u0939\u094b \u0938\u0915\u0947\u0964 \u0915\u0948\u0936 \u092e\u0947\u092e\u094b\u0930\u0940 RAM \u0938\u0947 \u0924\u0947\u091c\u093c \u0939\u094b\u0924\u0940 \u0939\u0948 \u0932\u0947\u0915\u093f\u0928 \u0906\u0915\u093e\u0930 \u092e\u0947\u0902 \u091b\u094b\u091f\u0940 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964</p> </li> <li> <p>\u0938\u0947\u0915\u0947\u0902\u0921\u0930\u0940 \u092e\u0947\u092e\u094b\u0930\u0940 (\u092c\u093e\u0939\u0930\u0940 \u0938\u094d\u091f\u094b\u0930\u0947\u091c):     \u0932\u0902\u092c\u0940 \u0905\u0935\u0927\u093f \u0915\u0947 \u0932\u093f\u090f \u0921\u0947\u091f\u093e \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0928\u0949\u0928-\u0935\u094b\u0932\u093e\u091f\u093e\u0907\u0932 \u092e\u0947\u092e\u094b\u0930\u0940\u0964 \u0907\u0938\u0915\u0947 \u0909\u0926\u093e\u0939\u0930\u0923\u094b\u0902 \u092e\u0947\u0902 \u0939\u093e\u0930\u094d\u0921 \u0921\u094d\u0930\u093e\u0907\u0935 (HDDs), \u0938\u0949\u0932\u093f\u0921-\u0938\u094d\u091f\u0947\u091f \u0921\u094d\u0930\u093e\u0907\u0935\u094d\u0938 (SSDs), \u0911\u092a\u094d\u091f\u093f\u0915\u0932 \u0921\u093f\u0938\u094d\u0915 (CDs/DVDs), \u0914\u0930 USB \u092b\u094d\u0932\u0948\u0936 \u0921\u094d\u0930\u093e\u0907\u0935\u094d\u0938 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902\u0964</p> </li> </ol> <p>\u092e\u091c\u093c\u0947\u0926\u093e\u0930 \u0924\u0925\u094d\u092f: \u092a\u094d\u0930\u093e\u0925\u092e\u093f\u0915 \u092e\u0947\u092e\u094b\u0930\u0940 \u0915\u094b \u0905\u092a\u0928\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0940 \"\u0935\u0930\u094d\u0915\u093f\u0902\u0917 \u092e\u0947\u092e\u094b\u0930\u0940\" \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0938\u094b\u091a\u0947\u0902\u0964 \u092f\u0939 \u0906\u092a\u0915\u0947 \u092e\u0938\u094d\u0924\u093f\u0937\u094d\u0915 \u0915\u0940 \u0905\u0932\u094d\u092a\u0915\u093e\u0932\u093f\u0915 \u0938\u094d\u092e\u0943\u0924\u093f \u0915\u0940 \u0924\u0930\u0939 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964 \u0907\u0938\u092e\u0947\u0902 \u090f\u0915 \u092c\u093e\u0930 \u092e\u0947\u0902 \u0915\u0941\u091b \u0939\u0940 \u091a\u0940\u091c\u093c\u0947\u0902 \u0930\u0916\u0940 \u091c\u093e \u0938\u0915\u0924\u0940 \u0939\u0948\u0902 (\u0938\u0940\u092e\u093f\u0924 \u0938\u094d\u0925\u093e\u0928), \u0932\u0947\u0915\u093f\u0928 \u092f\u0939 \u092c\u0939\u0941\u0924 \u0924\u0947\u091c\u093c \u0939\u094b\u0924\u0940 \u0939\u0948\u0964 \u0938\u0947\u0915\u0947\u0902\u0921\u0930\u0940 \u092e\u0947\u092e\u094b\u0930\u0940 \u0905\u0927\u093f\u0915 \u0932\u0902\u092c\u0940 \u0905\u0935\u0927\u093f \u0915\u0947 \u0932\u093f\u090f \u0921\u0947\u091f\u093e \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0939\u094b\u0924\u0940 \u0939\u0948, \u0932\u0947\u0915\u093f\u0928 \u0907\u0938\u0947 \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u0905\u0927\u093f\u0915 \u0938\u092e\u092f \u0932\u0917\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter01/#_5","title":"\u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930","text":""},{"location":"hi/chapters/chapter01/#_6","title":"\u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 \u0915\u093e \u0935\u093f\u0915\u093e\u0938","text":"<p>\u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 \u090f\u0915 \u091b\u094b\u091f\u093e \u0932\u0947\u0915\u093f\u0928 \u0936\u0915\u094d\u0924\u093f\u0936\u093e\u0932\u0940 \u0918\u091f\u0915 \u0939\u0948 \u091c\u093f\u0938\u0928\u0947 CPU \u0915\u0947 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u090f\u0915 \u0939\u0940 \u091a\u093f\u092a \u092e\u0947\u0902 \u090f\u0915\u0940\u0915\u0943\u0924 \u0915\u0930\u0915\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u092e\u0947\u0902 \u0915\u094d\u0930\u093e\u0902\u0924\u093f \u0932\u093e \u0926\u0940\u0964 1940 \u0915\u0947 \u0926\u0936\u0915 \u092e\u0947\u0902 ENIAC \u091c\u0948\u0938\u0947 \u0936\u0941\u0930\u0941\u0906\u0924\u0940 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0928\u0947 \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0939\u091c\u093e\u0930\u094b\u0902 \u0935\u0948\u0915\u094d\u092f\u0942\u092e \u091f\u094d\u092f\u0942\u092c\u094d\u0938 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u0925\u093e, \u091c\u094b \u0915\u092e\u0930\u0947 \u0915\u0947 \u0906\u0915\u093e\u0930 \u0915\u0940 \u092e\u0936\u0940\u0928\u0947\u0902 \u0925\u0940\u0902\u0964 \u092f\u0947 \u092e\u0936\u0940\u0928\u0947\u0902 \u0927\u0940\u092e\u0940, \u090a\u0930\u094d\u091c\u093e-\u0916\u092a\u0924 \u0935\u093e\u0932\u0940, \u0914\u0930 \u0915\u0947\u0935\u0932 \u0938\u0930\u0932 \u0915\u093e\u0930\u094d\u092f \u0915\u0930 \u0938\u0915\u0924\u0940 \u0925\u0940\u0902\u0964</p> <p>1971 \u092e\u0947\u0902, Intel \u0928\u0947 \u092a\u0939\u0932\u093e \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 Intel 4004 \u0935\u093f\u0915\u0938\u093f\u0924 \u0915\u093f\u092f\u093e, \u091c\u094b \u0921\u0947\u091f\u093e \u0914\u0930 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u094b \u090f\u0915 \u0939\u0940 \u091a\u093f\u092a \u092a\u0930 \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930 \u0938\u0915\u0924\u093e \u0925\u093e, \u091c\u094b \u090f\u0915 \u0928\u093e\u0916\u0942\u0928 \u0915\u0947 \u0906\u0915\u093e\u0930 \u0915\u093e \u0925\u093e! \u0907\u0938\u0928\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u094b \u091b\u094b\u091f\u093e, \u0924\u0947\u091c \u0914\u0930 \u0938\u0938\u094d\u0924\u093e \u092c\u0928\u093e\u0928\u0947 \u092e\u0947\u0902 \u0915\u094d\u0930\u093e\u0902\u0924\u093f \u0932\u093e \u0926\u0940\u0964 \u0938\u092e\u092f \u0915\u0947 \u0938\u093e\u0925, \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930\u094b\u0902 \u0915\u093e \u0935\u093f\u0915\u093e\u0938 \u0939\u0941\u0906:</p> <ul> <li>1970s-1980s: \u092a\u094d\u0930\u093e\u0930\u0902\u092d\u093f\u0915 \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 \u091c\u0948\u0938\u0947 \u0915\u093f Intel 8080 (\u091c\u094b \u0936\u0941\u0930\u0941\u0906\u0924\u0940 PCs \u092e\u0947\u0902 \u0909\u092a\u092f\u094b\u0917 \u0939\u0941\u0906) \u092c\u0941\u0928\u093f\u092f\u093e\u0926\u0940 \u0915\u093e\u0930\u094d\u092f \u0938\u0902\u092d\u093e\u0932 \u0938\u0915\u0924\u0947 \u0925\u0947\u0964 \u0909\u0928\u0915\u0940 \u0917\u0924\u093f \u0914\u0930 \u092e\u0947\u092e\u094b\u0930\u0940 \u0938\u0940\u092e\u093f\u0924 \u0925\u0940\u0964  </li> <li>1990s: Pentium \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930\u094b\u0902 \u0915\u0947 \u0909\u0926\u092f \u0928\u0947 \u0917\u0924\u093f, \u092e\u0932\u094d\u091f\u0940\u091f\u093e\u0938\u094d\u0915\u093f\u0902\u0917, \u0914\u0930 \u0917\u094d\u0930\u093e\u092b\u093f\u0915\u0932 \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u0928 \u092e\u0947\u0902 \u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0938\u0941\u0927\u093e\u0930 \u0915\u093f\u090f, \u091c\u093f\u0938\u0938\u0947 \u0905\u0927\u093f\u0915 \u091c\u091f\u093f\u0932 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0938\u0902\u092d\u0935 \u0939\u0941\u090f \u0914\u0930 \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0915\u0940 \u0915\u094d\u0930\u093e\u0902\u0924\u093f \u0936\u0941\u0930\u0942 \u0939\u0941\u0908\u0964  </li> <li>2000 \u0914\u0930 \u0909\u0938\u0915\u0947 \u092c\u093e\u0926: \u0906\u0927\u0941\u0928\u093f\u0915 \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930, \u091c\u0948\u0938\u0947 \u0915\u093f Intel Core i7 \u092f\u093e AMD Ryzen, \u092a\u094d\u0930\u0924\u093f \u0938\u0947\u0915\u0902\u0921 \u0905\u0930\u092c\u094b\u0902 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u094b \u0938\u0902\u092d\u093e\u0932\u0928\u0947 \u092e\u0947\u0902 \u0938\u0915\u094d\u0937\u092e \u0939\u094b\u0924\u0947 \u0939\u0948\u0902, \u092e\u0932\u094d\u091f\u0940\u091f\u093e\u0938\u094d\u0915\u093f\u0902\u0917 \u0915\u0947 \u0932\u093f\u090f \u0915\u0908 \u0915\u094b\u0930 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 \u0907\u0928\u094d\u0939\u0947\u0902 \u0928 \u0915\u0947\u0935\u0932 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u092e\u0947\u0902, \u092c\u0932\u094d\u0915\u093f \u0938\u094d\u092e\u093e\u0930\u094d\u091f\u092b\u094b\u0928, \u0915\u093e\u0930\u094b\u0902 \u0914\u0930 \u0918\u0930\u0947\u0932\u0942 \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u092e\u0947\u0902 \u092d\u0940 \u092a\u093e\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948!</li> </ul> <p>\u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u092a\u0940\u0922\u093c\u0940 \u0915\u0947 \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 \u0905\u0927\u093f\u0915 \u0915\u0941\u0936\u0932, \u0924\u0947\u091c, \u0914\u0930 \u0905\u0927\u093f\u0915 \u092c\u0939\u0941\u092e\u0941\u0916\u0940 \u0939\u094b \u0917\u090f \u0939\u0948\u0902, \u091c\u093f\u0938\u0938\u0947 \u0906\u091c \u0915\u0947 \u0909\u092a\u0915\u0930\u0923 \u092a\u0939\u0932\u0947 \u0938\u0947 \u0915\u0939\u0940\u0902 \u0905\u0927\u093f\u0915 \u0936\u0915\u094d\u0924\u093f\u0936\u093e\u0932\u0940 \u0939\u094b \u0917\u090f \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter01/#_7","title":"\u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 \u0915\u0940 \u0935\u093f\u0936\u0947\u0937\u0924\u093e\u090f\u0901","text":"<ol> <li> <p>\u0938\u094d\u092a\u0940\u0921 (\u0917\u0940\u0917\u093e\u0939\u0930\u094d\u091f\u094d\u091c\u093c \u092f\u093e GHz \u092e\u0947\u0902 \u092e\u093e\u092a\u0940 \u091c\u093e\u0924\u0940 \u0939\u0948): \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 \u0915\u0940 \u0938\u094d\u092a\u0940\u0921 \u092f\u0939 \u092c\u0924\u093e\u0924\u0940 \u0939\u0948 \u0915\u093f \u0935\u0939 \u092a\u094d\u0930\u0924\u093f \u0938\u0947\u0915\u0902\u0921 \u0915\u093f\u0924\u0928\u0947 \u091a\u0915\u094d\u0930 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948, \u091c\u093f\u0938\u0947 \u0917\u0940\u0917\u093e\u0939\u0930\u094d\u091f\u094d\u091c\u093c (GHz) \u092e\u0947\u0902 \u092e\u093e\u092a\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 3 GHz \u092a\u0930 \u091a\u0932\u0928\u0947 \u0935\u093e\u0932\u093e \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 \u092a\u094d\u0930\u0924\u093f \u0938\u0947\u0915\u0902\u0921 3 \u0905\u0930\u092c \u091a\u0915\u094d\u0930 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948\u0964 \u0924\u0947\u091c \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0915\u094b \u0924\u0947\u091c\u0940 \u0938\u0947 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u091a\u0932\u093e\u0928\u0947 \u0914\u0930 \u0905\u0927\u093f\u0915 \u091c\u091f\u093f\u0932 \u0915\u093e\u0930\u094d\u092f \u0938\u0902\u092d\u093e\u0932\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>\u092e\u0932\u094d\u091f\u0940\u091f\u093e\u0938\u094d\u0915\u093f\u0902\u0917 \u0915\u0947 \u0932\u093f\u090f \u0915\u0908 \u0915\u094b\u0930: \u0906\u0927\u0941\u0928\u093f\u0915 \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 \u0905\u0915\u094d\u0938\u0930 \u0915\u0908 \u0915\u094b\u0930 \u0915\u0947 \u0938\u093e\u0925 \u0906\u0924\u0947 \u0939\u0948\u0902, \u091c\u093f\u0938\u0938\u0947 \u0935\u0947 \u090f\u0915 \u0938\u093e\u0925 \u0915\u0908 \u0915\u093e\u0930\u094d\u092f \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0915\u094b\u0930 \u090f\u0915 \u0905\u0932\u0917 \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 \u0915\u0940 \u0924\u0930\u0939 \u0915\u093e\u092e \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u0909\u0926\u093e\u0939\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f, \u0915\u094d\u0935\u093e\u0921-\u0915\u094b\u0930 \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 \u090f\u0915 \u0938\u093e\u0925 \u091a\u093e\u0930 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0938\u0902\u092d\u093e\u0932 \u0938\u0915\u0924\u093e \u0939\u0948, \u091c\u093f\u0938\u0938\u0947 \u092e\u0932\u094d\u091f\u0940\u091f\u093e\u0938\u094d\u0915\u093f\u0902\u0917 \u091c\u0948\u0938\u0947 \u0915\u093f \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u093f\u0902\u0917 \u0915\u0930\u0924\u0947 \u0939\u0941\u090f \u0921\u0949\u0915\u094d\u092f\u0941\u092e\u0947\u0902\u091f \u090f\u0921\u093f\u091f \u0915\u0930\u0928\u093e \u0938\u0902\u092d\u0935 \u0939\u094b\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>\u092a\u094b\u0930\u094d\u091f\u0947\u092c\u0932 \u0921\u093f\u0935\u093e\u0907\u0938\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u092a\u093e\u0935\u0930 \u090f\u092b\u093f\u0936\u093f\u090f\u0902\u0938\u0940: \u091c\u0948\u0938\u0947-\u091c\u0948\u0938\u0947 \u0924\u0915\u0928\u0940\u0915 \u0909\u0928\u094d\u0928\u0924 \u0939\u0941\u0908, \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 \u0905\u0927\u093f\u0915 \u092a\u093e\u0935\u0930-\u090f\u092b\u093f\u0936\u093f\u090f\u0902\u091f \u0939\u094b \u0917\u090f, \u091c\u094b \u092e\u094b\u092c\u093e\u0907\u0932 \u0921\u093f\u0935\u093e\u0907\u0938\u094b\u0902 \u091c\u0948\u0938\u0947 \u0915\u093f \u0938\u094d\u092e\u093e\u0930\u094d\u091f\u092b\u094b\u0928 \u0914\u0930 \u091f\u0948\u092c\u0932\u0947\u091f \u0915\u0947 \u0932\u093f\u090f \u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0939\u0948\u0902\u0964 \u092f\u0947 \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 \u0915\u092e \u092a\u093e\u0935\u0930 \u0915\u093e \u0909\u092a\u092d\u094b\u0917 \u0915\u0930\u0924\u0947 \u0939\u0941\u090f \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u0928 \u092c\u0928\u093e\u090f \u0930\u0916\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0921\u093f\u091c\u093c\u093e\u0907\u0928 \u0915\u093f\u090f \u0917\u090f \u0939\u0948\u0902, \u091c\u093f\u0938\u0938\u0947 \u092a\u094b\u0930\u094d\u091f\u0947\u092c\u0932 \u0921\u093f\u0935\u093e\u0907\u0938\u094b\u0902 \u0915\u0940 \u092c\u0948\u091f\u0930\u0940 \u0932\u093e\u0907\u092b \u0932\u0902\u092c\u0940 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964</p> </li> </ol>"},{"location":"hi/chapters/chapter01/#_8","title":"\u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930: \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f \u0914\u0930 \u092a\u094d\u0930\u0915\u093e\u0930","text":""},{"location":"hi/chapters/chapter01/#_9","title":"\u0938\u093f\u0938\u094d\u091f\u092e \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930","text":"<p>\u0938\u093f\u0938\u094d\u091f\u092e \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0915\u094b \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0914\u0930 \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0906\u0935\u0936\u094d\u092f\u0915 \u0939\u0948 \u0924\u093e\u0915\u093f \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928 \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0915\u093e\u0930\u094d\u092f \u0915\u0930 \u0938\u0915\u0947\u0964 \u092f\u0939 \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0914\u0930 \u092f\u0942\u091c\u093c\u0930 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917\u094b\u0902 \u0915\u0947 \u092c\u0940\u091a \u092a\u0941\u0932 \u0915\u093e \u0915\u093e\u092e \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u092c\u093f\u0928\u093e \u0938\u093f\u0938\u094d\u091f\u092e \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0915\u0947, \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u0939\u0940 \u0938\u0947 \u0915\u093e\u092e \u0928\u0939\u0940\u0902 \u0915\u0930 \u092a\u093e\u090f\u0917\u093e\u0964</p> <ul> <li>\u0909\u0926\u093e\u0939\u0930\u0923:<ul> <li>\u0911\u092a\u0930\u0947\u091f\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e: \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0938\u0902\u0938\u093e\u0927\u0928\u094b\u0902 \u0915\u094b \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948, \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928 \u091a\u0932\u093e\u0924\u093e \u0939\u0948, \u0914\u0930 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0907\u0902\u091f\u0930\u092b\u093c\u0947\u0938 \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u0932\u094b\u0915\u092a\u094d\u0930\u093f\u092f OS \u0915\u0947 \u0909\u0926\u093e\u0939\u0930\u0923\u094b\u0902 \u092e\u0947\u0902 Windows, MacOS, Linux, \u0914\u0930 Android \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902\u0964  </li> <li>\u0921\u093f\u0935\u093e\u0907\u0938 \u0921\u094d\u0930\u093e\u0907\u0935\u0930\u094d\u0938: \u092f\u0947 \u0935\u093f\u0936\u0947\u0937 \u0915\u093e\u0930\u094d\u092f\u0915\u094d\u0930\u092e \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0909\u092a\u0915\u0930\u0923\u094b\u0902 (\u091c\u0948\u0938\u0947 \u092a\u094d\u0930\u093f\u0902\u091f\u0930, \u0915\u0940\u092c\u094b\u0930\u094d\u0921, \u0914\u0930 \u0935\u0947\u092c\u0915\u0948\u092e) \u0915\u094b \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u0947 \u0938\u093e\u0925 \u0938\u0902\u091a\u093e\u0930\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0947 \u0939\u0948\u0902\u0964 \u092c\u093f\u0928\u093e \u0938\u0939\u0940 \u0921\u094d\u0930\u093e\u0907\u0935\u0930\u094d\u0938 \u0915\u0947, \u0906\u092a\u0915\u093e \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0947 \u0938\u093e\u0925 \u0915\u093e\u092e \u0928\u0939\u0940\u0902 \u0915\u0930\u0947\u0917\u093e\u0964</li> </ul> </li> </ul>"},{"location":"hi/chapters/chapter01/#_10","title":"\u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928 \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930","text":"<p>\u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928 \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0909\u0928 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u094b\u0902 \u0938\u0947 \u092c\u0928\u093e \u0939\u094b\u0924\u093e \u0939\u0948 \u091c\u094b \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u094b \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0915\u093e\u0930\u094d\u092f \u092a\u0942\u0930\u0947 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964 \u092f\u0947 \u0935\u0947 \u0926\u0948\u0928\u093f\u0915 \u0909\u092a\u092f\u094b\u0917 \u0915\u0947 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u093f\u0928\u0915\u0947 \u0938\u093e\u0925 \u0932\u094b\u0917 \u0909\u0924\u094d\u092a\u093e\u0926\u0915\u0924\u093e, \u092e\u0928\u094b\u0930\u0902\u091c\u0928 \u0914\u0930 \u0905\u0928\u094d\u092f \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0907\u0902\u091f\u0930\u0948\u0915\u094d\u091f \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</p> <ul> <li>\u0909\u0926\u093e\u0939\u0930\u0923:<ul> <li>\u0935\u0930\u094d\u0921 \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930: Microsoft Word \u092f\u093e Google Docs \u091c\u0948\u0938\u0947 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e, \u091c\u094b \u0906\u092a\u0915\u094b \u0926\u0938\u094d\u0924\u093e\u0935\u0947\u091c\u093c \u0932\u093f\u0916\u0928\u0947, \u0938\u0902\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u0947 \u0914\u0930 \u0938\u094d\u0935\u0930\u0942\u092a\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0938\u0941\u0935\u093f\u0927\u093e \u0926\u0947\u0924\u0947 \u0939\u0948\u0902\u0964</li> <li>\u0917\u0947\u092e\u094d\u0938: \u0938\u0930\u0932 \u0917\u0947\u092e\u094d\u0938 \u091c\u0948\u0938\u0947 Minesweeper \u0938\u0947 \u0932\u0947\u0915\u0930 \u091c\u091f\u093f\u0932 \u091f\u093e\u0907\u091f\u0932\u094d\u0938 \u091c\u0948\u0938\u0947 Minecraft \u092f\u093e Fortnite \u0924\u0915\u0964</li> <li>\u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930: Google Chrome, Firefox, \u092f\u093e Safari \u091c\u0948\u0938\u0947 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e, \u091c\u094b \u0906\u092a\u0915\u094b \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0947 \u0939\u0948\u0902\u0964</li> </ul> </li> </ul>"},{"location":"hi/chapters/chapter01/#_11","title":"\u0932\u0948\u0902\u0917\u094d\u0935\u0947\u091c \u091f\u094d\u0930\u093e\u0902\u0938\u0932\u0947\u091f\u0930\u094d\u0938","text":"<p>\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092c\u093e\u0907\u0928\u0930\u0940 \u0915\u094b\u0921 (1s \u0914\u0930 0s) \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0915\u093e\u092e \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u091c\u094b \u092e\u0928\u0941\u0937\u094d\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0932\u093f\u0916\u0928\u093e \u0914\u0930 \u0938\u092e\u091d\u0928\u093e \u092e\u0941\u0936\u094d\u0915\u093f\u0932 \u0939\u094b\u0924\u093e \u0939\u0948\u0964 \u0932\u0948\u0902\u0917\u094d\u0935\u0947\u091c \u091f\u094d\u0930\u093e\u0902\u0938\u0932\u0947\u091f\u0930\u094d\u0938 \u092e\u093e\u0928\u0935-\u092a\u0922\u093c\u0928\u0947 \u092f\u094b\u0917\u094d\u092f \u0915\u094b\u0921 \u0915\u094b \u092e\u0936\u0940\u0928-\u092a\u0922\u093c\u0928\u0947 \u092f\u094b\u0917\u094d\u092f \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u092e\u0947\u0902 \u092c\u0926\u0932\u0924\u0947 \u0939\u0948\u0902\u0964</p> <ul> <li>\u0915\u092e\u094d\u092a\u093e\u0907\u0932\u0930\u094d\u0938: \u092f\u0947 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0926\u094d\u0935\u093e\u0930\u093e \u0932\u093f\u0916\u0947 \u0917\u090f \u092a\u0942\u0930\u0947 \u0938\u094b\u0930\u094d\u0938 \u0915\u094b\u0921 \u0915\u094b \u092e\u0936\u0940\u0928 \u0915\u094b\u0921 \u092e\u0947\u0902 \u092c\u0926\u0932\u0924\u0947 \u0939\u0948\u0902, \u0907\u0938\u0938\u0947 \u092a\u0939\u0932\u0947 \u0915\u093f \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u091a\u0932\u093e\u092f\u093e \u091c\u093e\u090f\u0964 \u0909\u0926\u093e\u0939\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f, C++ \u090f\u0915 \u0915\u092e\u094d\u092a\u093e\u0907\u0932\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>\u0907\u0902\u091f\u0930\u092a\u094d\u0930\u093f\u091f\u0930\u094d\u0938: \u092f\u0947 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u0947 \u091a\u0932\u0928\u0947 \u0915\u0947 \u0926\u094c\u0930\u093e\u0928 \u0938\u094b\u0930\u094d\u0938 \u0915\u094b\u0921 \u0915\u094b \u0932\u093e\u0907\u0928-\u092c\u093e\u092f-\u0932\u093e\u0907\u0928 \u092e\u0936\u0940\u0928 \u0915\u094b\u0921 \u092e\u0947\u0902 \u0905\u0928\u0941\u0935\u093e\u0926 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964 Python \u090f\u0915 \u0907\u0902\u091f\u0930\u092a\u094d\u0930\u093f\u091f\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u093e \u0939\u0948, \u091c\u093f\u0938\u0938\u0947 \u0906\u092a \u0915\u094b\u0921 \u0915\u094b \u0907\u0902\u091f\u0930\u0948\u0915\u094d\u091f\u093f\u0935 \u0924\u0930\u0940\u0915\u0947 \u0938\u0947 \u091a\u0932\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter01/#_12","title":"\u0921\u093f\u0935\u093e\u0907\u0938 \u0921\u094d\u0930\u093e\u0907\u0935\u0930\u094d\u0938","text":"<p>\u0921\u093f\u0935\u093e\u0907\u0938 \u0921\u094d\u0930\u093e\u0907\u0935\u0930\u094d\u0938 \u0935\u093f\u0936\u0947\u0937 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u0906\u092a\u0915\u0947 \u0911\u092a\u0930\u0947\u091f\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u094b \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0918\u091f\u0915\u094b\u0902 \u0915\u0947 \u0938\u093e\u0925 \u0938\u0902\u091a\u093e\u0930 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964 \u0909\u0926\u093e\u0939\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f, \u091c\u092c \u0906\u092a \u090f\u0915 \u0928\u092f\u093e \u092a\u094d\u0930\u093f\u0902\u091f\u0930 \u092a\u094d\u0932\u0917 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b \u090f\u0915 \u0921\u093f\u0935\u093e\u0907\u0938 \u0921\u094d\u0930\u093e\u0907\u0935\u0930 \u0906\u092a\u0915\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u094b \u0907\u0938\u0915\u0947 \u0938\u093e\u0925 \"\u092c\u093e\u0924\u091a\u0940\u0924\" \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u093e \u0939\u0948 \u0924\u093e\u0915\u093f \u0906\u092a \u0905\u092a\u0928\u0947 \u0926\u0938\u094d\u0924\u093e\u0935\u0947\u091c\u093c\u094b\u0902 \u0915\u094b \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930 \u0938\u0915\u0947\u0902\u0964</p> <ul> <li>\u0909\u0926\u093e\u0939\u0930\u0923: \u092a\u094d\u0930\u093f\u0902\u091f\u0930 \u0921\u094d\u0930\u093e\u0907\u0935\u0930\u094d\u0938, \u0921\u093f\u0938\u094d\u092a\u094d\u0932\u0947 \u0921\u094d\u0930\u093e\u0907\u0935\u0930\u094d\u0938, \u0911\u0921\u093f\u092f\u094b \u0921\u094d\u0930\u093e\u0907\u0935\u0930\u094d\u0938, \u0906\u0926\u093f\u0964</li> </ul>"},{"location":"hi/chapters/chapter01/#_13","title":"\u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u092d\u093e\u0937\u093e\u0913\u0902 \u0915\u093e \u0935\u0930\u094d\u0917\u0940\u0915\u0930\u0923","text":""},{"location":"hi/chapters/chapter01/#-","title":"\u0939\u093e\u0908-\u0932\u0947\u0935\u0932 \u0932\u0948\u0902\u0917\u094d\u0935\u0947\u091c","text":"<p>\u0939\u093e\u0908-\u0932\u0947\u0935\u0932 \u0932\u0948\u0902\u0917\u094d\u0935\u0947\u091c\u093c\u0947\u0938 \u0915\u094b \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u0947 \u0905\u0928\u0941\u0915\u0942\u0932 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0921\u093f\u091c\u093c\u093e\u0907\u0928 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948, \u091c\u094b \u0910\u0938\u0947 \u0936\u092c\u094d\u0926\u094b\u0902 \u0914\u0930 \u0938\u093f\u0902\u091f\u0948\u0915\u094d\u0938 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0940 \u0939\u0948\u0902 \u091c\u093f\u0928\u094d\u0939\u0947\u0902 \u092a\u0922\u093c\u0928\u093e \u0914\u0930 \u0932\u093f\u0916\u0928\u093e \u0906\u0938\u093e\u0928 \u0939\u094b\u0924\u093e \u0939\u0948\u0964 \u0907\u0928 \u092d\u093e\u0937\u093e\u0913\u0902 \u0915\u094b \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u092e\u091d\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092e\u0936\u0940\u0928 \u0932\u0948\u0902\u0917\u094d\u0935\u0947\u091c (\u092c\u093e\u0907\u0928\u0930\u0940 \u0915\u094b\u0921) \u092e\u0947\u0902 \u0905\u0928\u0941\u0935\u093e\u0926\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e\u0928\u093e \u091a\u093e\u0939\u093f\u090f\u0964</p> <ul> <li>\u0909\u0926\u093e\u0939\u0930\u0923: \u0932\u094b\u0915\u092a\u094d\u0930\u093f\u092f \u0939\u093e\u0908-\u0932\u0947\u0935\u0932 \u092d\u093e\u0937\u093e\u0913\u0902 \u092e\u0947\u0902 Python, Java, \u0914\u0930 C++ \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902\u0964</li> <li>\u092e\u091c\u093c\u0947\u0926\u093e\u0930 \u0909\u0926\u093e\u0939\u0930\u0923: \u0915\u0932\u094d\u092a\u0928\u093e \u0915\u0930\u0947\u0902 \u0915\u093f \u0906\u092a \u0905\u092a\u0928\u0947 \u0926\u094b\u0938\u094d\u0924 \u0915\u094b \u0926\u093f\u0936\u093e-\u0928\u093f\u0930\u094d\u0926\u0947\u0936 \u0926\u0947 \u0930\u0939\u0947 \u0939\u0948\u0902\u0964 \u090f\u0915 \u0939\u093e\u0908-\u0932\u0947\u0935\u0932 \u0932\u0948\u0902\u0917\u094d\u0935\u0947\u091c \u092e\u0947\u0902, \u0906\u092a \u0915\u0939 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \"\u0905\u0917\u0932\u0947 \u091f\u094d\u0930\u0948\u092b\u093f\u0915 \u0932\u093e\u0907\u091f \u092a\u0930 \u092c\u093e\u0908\u0902 \u0913\u0930 \u092e\u0941\u0921\u093c\u0947\u0902, \u092b\u093f\u0930 \u0926\u0942\u0938\u0930\u0940 \u0926\u093e\u0908\u0902 \u0913\u0930 \u092e\u0941\u0921\u093c\u0947\u0902\u0964\" \u092f\u0939 \u092e\u0928\u0941\u0937\u094d\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0938\u092e\u091d\u0928\u0947 \u092e\u0947\u0902 \u0938\u0930\u0932 \u0939\u0948, \u0932\u0947\u0915\u093f\u0928 \u090f\u0915 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u094b \u0905\u0927\u093f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0914\u0930 \u0935\u093f\u0938\u094d\u0924\u0943\u0924 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u094b\u0924\u0940 \u0939\u0948!</li> </ul>"},{"location":"hi/chapters/chapter01/#_14","title":"\u092e\u0936\u0940\u0928 \u0932\u0948\u0902\u0917\u094d\u0935\u0947\u091c","text":"<p>\u092e\u0936\u0940\u0928 \u0932\u0948\u0902\u0917\u094d\u0935\u0947\u091c, \u092f\u093e \u092c\u093e\u0907\u0928\u0930\u0940 \u0915\u094b\u0921, \u0935\u0939 \u0932\u094b-\u0932\u0947\u0935\u0932 \u092d\u093e\u0937\u093e \u0939\u0948 \u091c\u093f\u0938\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u094d\u0935\u093e\u092d\u093e\u0935\u093f\u0915 \u0930\u0942\u092a \u0938\u0947 \u0938\u092e\u091d\u0924\u0947 \u0939\u0948\u0902\u0964 \u0907\u0938\u092e\u0947\u0902 1s \u0914\u0930 0s \u0915\u0940 \u090f\u0915 \u0936\u094d\u0930\u0943\u0902\u0916\u0932\u093e \u0939\u094b\u0924\u0940 \u0939\u0948\u0964 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0911\u092a\u0930\u0947\u0936\u0928, \u091c\u0948\u0938\u0947 \u0915\u093f \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u091c\u094b\u0921\u093c\u0928\u093e \u092f\u093e \u090f\u0915 \u092b\u093c\u093e\u0907\u0932 \u0915\u094b \u0938\u0939\u0947\u091c\u0928\u093e, \u092c\u093e\u0907\u0928\u0930\u0940 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u0947 \u090f\u0915 \u0905\u0926\u094d\u0935\u093f\u0924\u0940\u092f \u092a\u0948\u091f\u0930\u094d\u0928 \u092e\u0947\u0902 \u0905\u0928\u0941\u0935\u093e\u0926\u093f\u0924 \u0939\u094b\u0924\u093e \u0939\u0948 \u091c\u093f\u0938\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> <ul> <li>\u0909\u0926\u093e\u0939\u0930\u0923: \"01010101\" \u0939\u092e\u0947\u0902 \u092d\u0932\u0947 \u0939\u0940 \u0909\u0932\u091d\u0928 \u092d\u0930\u093e \u0932\u0917\u0947, \u0932\u0947\u0915\u093f\u0928 \u092f\u0939 \u0935\u0939\u0940 \u0924\u0930\u0940\u0915\u093e \u0939\u0948 \u091c\u093f\u0938\u0938\u0947 \u090f\u0915 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092f\u0939 \u091c\u093e\u0928\u0924\u093e \u0939\u0948 \u0915\u093f \u0915\u094d\u092f\u093e \u0915\u0930\u0928\u093e \u0939\u0948\u0964 \u092e\u0936\u0940\u0928 \u0932\u0948\u0902\u0917\u094d\u0935\u0947\u091c \u0915\u094b \u0938\u0940\u0927\u0947 \u0932\u093f\u0916\u0928\u093e \u092e\u0928\u0941\u0937\u094d\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0915\u0920\u093f\u0928 \u0939\u094b\u0924\u093e \u0939\u0948, \u0932\u0947\u0915\u093f\u0928 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0907\u0938\u0947 \u092c\u0939\u0941\u0924 \u0924\u0947\u091c\u093c\u0940 \u0938\u0947 \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter01/#os","title":"\u0911\u092a\u0930\u0947\u091f\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e (OS)","text":""},{"location":"hi/chapters/chapter01/#_15","title":"\u0911\u092a\u0930\u0947\u091f\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e","text":"<p>\u0911\u092a\u0930\u0947\u091f\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e (OS) \u0906\u0935\u0936\u094d\u092f\u0915 \u0939\u094b\u0924\u093e \u0939\u0948 \u0915\u094d\u092f\u094b\u0902\u0915\u093f \u092f\u0939 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u094b \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0947 \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0914\u0930 \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0915\u0947 \u0938\u093e\u0925 \u0907\u0902\u091f\u0930\u0948\u0915\u094d\u091f \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948, \u092c\u093f\u0928\u093e \u092f\u0939 \u0938\u092e\u091d\u0928\u0947 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0915\u0947 \u0915\u093f \u0938\u092c \u0915\u0941\u091b \u0915\u0948\u0938\u0947 \u0915\u093e\u092e \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u092f\u0939 \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0914\u0930 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u0947 \u092c\u0940\u091a \u090f\u0915 \u092e\u0927\u094d\u092f\u0938\u094d\u0925 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0915\u093e\u0930\u094d\u092f \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter01/#_16","title":"\u0911\u092a\u0930\u0947\u091f\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u0947 \u0915\u093e\u0930\u094d\u092f","text":"<ol> <li>\u092e\u0947\u092e\u094b\u0930\u0940 \u0914\u0930 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e\u0913\u0902 \u0915\u093e \u092a\u094d\u0930\u092c\u0902\u0927\u0928: OS \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0940 \u092e\u0947\u092e\u094b\u0930\u0940 \u0914\u0930 \u091a\u0932 \u0930\u0939\u0947 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u094b\u0902 \u0915\u094b \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u092f\u0939 \u0924\u092f \u0915\u0930\u0924\u093e \u0939\u0948 \u0915\u093f \u0915\u094c\u0928 \u0938\u0947 \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928\u094b\u0902 \u0915\u094b \u092e\u0947\u092e\u094b\u0930\u0940 \u0914\u0930 CPU \u0938\u092e\u092f \u092e\u093f\u0932\u0947\u0917\u093e\u0964</li> <li>\u0907\u0928\u092a\u0941\u091f \u0914\u0930 \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094b \u0938\u0902\u092d\u093e\u0932\u0924\u093e \u0939\u0948: OS \u0915\u0940\u092c\u094b\u0930\u094d\u0921 \u0914\u0930 \u092e\u093e\u0909\u0938 \u091c\u0948\u0938\u0947 \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u0938\u0947 \u0907\u0928\u092a\u0941\u091f \u0914\u0930 \u092e\u0949\u0928\u093f\u091f\u0930 \u0914\u0930 \u092a\u094d\u0930\u093f\u0902\u091f\u0930 \u091c\u0948\u0938\u0947 \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u0915\u094b \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094b \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li> <p>\u092f\u0942\u091c\u093c\u0930 \u0907\u0902\u091f\u0930\u092b\u093c\u0947\u0938 (UI) \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0924\u093e \u0939\u0948: UI \u0935\u0939 \u0917\u094d\u0930\u093e\u092b\u093f\u0915\u0932 \u0907\u0902\u091f\u0930\u092b\u093c\u0947\u0938 \u0939\u0948 \u091c\u093f\u0938\u0938\u0947 \u0906\u092a \u0907\u0902\u091f\u0930\u0948\u0915\u094d\u091f \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u091c\u0948\u0938\u0947 \u0915\u093f \u0921\u0947\u0938\u094d\u0915\u091f\u0949\u092a, \u0906\u0907\u0915\u0928\u094d\u0938, \u0914\u0930 \u091f\u093e\u0938\u094d\u0915\u092c\u093e\u0930\u0964 \u092f\u0939 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e \u0906\u0938\u093e\u0928 \u092c\u0928\u093e\u0924\u093e \u0939\u0948, \u092c\u093f\u0928\u093e \u092e\u0936\u0940\u0928 \u0932\u0948\u0902\u0917\u094d\u0935\u0947\u091c \u0915\u094b \u091c\u093e\u0928\u0947\u0964</p> </li> <li> <p>\u092e\u091c\u093c\u0947\u0926\u093e\u0930 \u0909\u0926\u093e\u0939\u0930\u0923: OS \u0915\u094b \u090f\u0915 \u0911\u0930\u094d\u0915\u0947\u0938\u094d\u091f\u094d\u0930\u093e \u092e\u0947\u0902 \u0915\u0902\u0921\u0915\u094d\u091f\u0930 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0938\u094b\u091a\u0947\u0902, \u091c\u094b \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0915\u093f \u0938\u092d\u0940 \u0909\u092a\u0915\u0930\u0923 (\u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0914\u0930 \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930) \u092e\u093f\u0932\u0915\u0930 \u0938\u093e\u092e\u0902\u091c\u0938\u094d\u092f \u0938\u0947 \u0915\u093e\u0930\u094d\u092f \u0915\u0930\u0947\u0902\u0964</p> </li> </ol>"},{"location":"hi/chapters/chapter01/#_17","title":"\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940:","text":"<ul> <li>CPU (Central Processing Unit): \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u093e \u092e\u0941\u0916\u094d\u092f \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 \u091c\u094b \u0917\u0923\u0928\u093e\u090f\u0901 \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u094b \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>I/O Devices (Input/Output Devices): \u0935\u0947 \u0921\u093f\u0935\u093e\u0907\u0938 \u091c\u094b \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0947 \u0938\u093e\u0925 \u0907\u0902\u091f\u0930\u0948\u0915\u094d\u0936\u0928 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0947 \u0939\u0948\u0902\u0964</li> <li>Data: \u0915\u091a\u094d\u091a\u0947, \u092c\u093f\u0928\u093e \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0924\u0925\u094d\u092f\u0964</li> <li>Information: \u0921\u0947\u091f\u093e \u091c\u094b \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0914\u0930 \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093f\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u094b \u0924\u093e\u0915\u093f \u0935\u0939 \u0909\u092a\u092f\u094b\u0917\u0940 \u0939\u094b \u0938\u0915\u0947\u0964</li> <li>Memory: \u0938\u094d\u091f\u094b\u0930\u0947\u091c \u091c\u094b \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u094b \u0921\u0947\u091f\u093e \u0914\u0930 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u093e \u091f\u094d\u0930\u0948\u0915 \u0930\u0916\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0940 \u0939\u0948\u0964</li> <li>Microprocessor: CPU \u092e\u0947\u0902 \u092e\u0941\u0916\u094d\u092f \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u093f\u0902\u0917 \u091a\u093f\u092a\u0964</li> <li>Software: \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u091c\u094b \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u094b \u0928\u093f\u0930\u094d\u0926\u0947\u0936 \u0926\u0947\u0924\u0947 \u0939\u0948\u0902\u0964</li> <li>Generic Software: \u0938\u093e\u092e\u093e\u0928\u094d\u092f \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u090f \u091c\u093e\u0928\u0947 \u0935\u093e\u0932\u0947 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e, \u091c\u0948\u0938\u0947 \u0935\u0930\u094d\u0921 \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u093f\u0902\u0917\u0964</li> <li>Specific Purpose Software: \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0921\u093f\u091c\u093c\u093e\u0907\u0928 \u0915\u093f\u090f \u0917\u090f \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e, \u091c\u0948\u0938\u0947 \u0935\u0940\u0921\u093f\u092f\u094b \u0938\u0902\u092a\u093e\u0926\u0928\u0964</li> <li>High-Level Language: \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u092d\u093e\u0937\u093e\u090f\u0901 \u091c\u094b \u092e\u0928\u0941\u0937\u094d\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0938\u092e\u091d\u0928\u0947 \u092e\u0947\u0902 \u0906\u0938\u093e\u0928 \u0939\u094b\u0924\u0940 \u0939\u0948\u0902\u0964</li> <li>Machine Language: \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0940 \u092e\u0942\u0932 \u092d\u093e\u0937\u093e \u091c\u094b \u092c\u093e\u0907\u0928\u0930\u0940 \u0915\u094b\u0921 \u0938\u0947 \u092c\u0928\u0940 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964</li> <li>Operating System (OS): \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u091c\u094b \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0947 \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0914\u0930 \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0938\u0902\u0938\u093e\u0927\u0928\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>Device Drivers: \u0935\u093f\u0936\u0947\u0937 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u091c\u094b \u0911\u092a\u0930\u0947\u091f\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u094b \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0915\u0947 \u0938\u093e\u0925 \u0938\u0902\u091a\u093e\u0930\u093f\u0924 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter01/#_18","title":"\u092e\u091c\u093c\u0947\u0926\u093e\u0930 \u0909\u0926\u093e\u0939\u0930\u0923:","text":"<p>CPU \u0915\u094b \u090f\u0915 \u0930\u0947\u0938\u094d\u0924\u0930\u093e\u0902 \u092e\u0947\u0902 \u0936\u0947\u092b \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0915\u0932\u094d\u092a\u0928\u093e \u0915\u0930\u0947\u0902\u0964 \u0936\u0947\u092b (CPU) \u0917\u094d\u0930\u093e\u0939\u0915\u094b\u0902 (\u0907\u0928\u092a\u0941\u091f) \u0938\u0947 \u0911\u0930\u094d\u0921\u0930 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0924\u093e \u0939\u0948, \u0938\u093e\u092e\u0917\u094d\u0930\u0940 (\u0921\u0947\u091f\u093e) \u0915\u094b \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948, \u0914\u0930 \u0917\u094d\u0930\u093e\u0939\u0915\u094b\u0902 \u0915\u094b \u092d\u094b\u091c\u0928 (\u0906\u0909\u091f\u092a\u0941\u091f) \u0926\u0947\u0924\u093e \u0939\u0948\u0964 \u0915\u093f\u091a\u0928 \u0915\u093e \u0938\u094d\u091f\u094b\u0930\u0947\u091c (\u092e\u0947\u092e\u094b\u0930\u0940) \u0909\u0928 \u0938\u093e\u092e\u0917\u094d\u0930\u093f\u092f\u094b\u0902 (\u0921\u0947\u091f\u093e) \u0915\u094b \u0930\u0916\u0924\u093e \u0939\u0948 \u091c\u093f\u0928\u094d\u0939\u0947\u0902 \u0936\u0947\u092b \u0915\u094b \u0916\u093e\u0928\u093e \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u091a\u093e\u0939\u093f\u090f\u0964 \u0905\u0917\u0930 \u0930\u0947\u0938\u093f\u092a\u0940 (\u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930) \u0915\u0941\u0936\u0932\u0924\u093e \u0938\u0947 \u0924\u0948\u092f\u093e\u0930 \u0915\u0940 \u0917\u0908 \u0939\u094b, \u0924\u094b \u0936\u0947\u092b \u0924\u0947\u091c\u0940 \u0938\u0947 \u0915\u093e\u092e \u0915\u0930\u0924\u093e \u0939\u0948!</p>"},{"location":"hi/chapters/chapter01/#_19","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940:","text":"<ol> <li> <p>\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0947 \u0915\u093f\u0938 \u092d\u093e\u0917 \u0915\u094b \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u093e \u092e\u0938\u094d\u0924\u093f\u0937\u094d\u0915 \u0915\u0939\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) \u0907\u0928\u092a\u0941\u091f \u092f\u0942\u0928\u093f\u091f     b) \u0906\u0909\u091f\u092a\u0941\u091f \u092f\u0942\u0928\u093f\u091f     c) \u0938\u0947\u0902\u091f\u094d\u0930\u0932 \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u093f\u0902\u0917 \u092f\u0942\u0928\u093f\u091f (CPU)     d) \u092e\u0947\u092e\u094b\u0930\u0940  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: ROM \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u0940 \u092e\u0947\u092e\u094b\u0930\u0940 \u0939\u0948 \u091c\u094b \u0905\u0938\u094d\u0925\u093e\u092f\u0940 \u0930\u0942\u092a \u0938\u0947 \u0921\u0947\u091f\u093e \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0924\u0940 \u0939\u0948\u0964 </p> </li> <li> <p>\u0915\u094c\u0928 \u0938\u093e \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0938\u0902\u0938\u093e\u0927\u0928\u094b\u0902 \u0915\u094b \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948?     a) \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928 \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930     b) \u0938\u093f\u0938\u094d\u091f\u092e \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930     c) \u0921\u093f\u0935\u093e\u0907\u0938 \u0921\u094d\u0930\u093e\u0907\u0935\u0930\u094d\u0938     d) \u0932\u0948\u0902\u0917\u094d\u0935\u0947\u091c \u091f\u094d\u0930\u093e\u0902\u0938\u0932\u0947\u091f\u0930\u094d\u0938  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u090f\u0915 \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 ______ \u0915\u093e \u0909\u092a\u092f\u094b\u0917 CPU \u092e\u0947\u0902 \u0938\u0902\u091a\u093e\u0932\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0930\u0924\u093e \u0939\u0948\u0964 </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u0940 \u090f\u0915 \u0939\u093e\u0908-\u0932\u0947\u0935\u0932 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u092d\u093e\u0937\u093e \u0939\u0948?     a) \u092c\u093e\u0907\u0928\u0930\u0940 \u0915\u094b\u0921     b) Python     c) \u092e\u0936\u0940\u0928 \u0915\u094b\u0921     d) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094b\u0908 \u0928\u0939\u0940\u0902  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f \u0935\u093e\u0932\u093e \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0935\u0930\u094d\u0921 \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u093f\u0902\u0917 \u091c\u0948\u0938\u0947 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 </p> </li> <li> <p>\u0915\u094c\u0928 \u0938\u0940 \u092e\u0947\u092e\u094b\u0930\u0940 RAM \u0938\u0947 \u0924\u0947\u091c\u093c \u0932\u0947\u0915\u093f\u0928 \u091b\u094b\u091f\u0940 \u0939\u094b\u0924\u0940 \u0939\u0948?     a) Cache Memory     b) Hard Drive     c) ROM     d) SSD  </p> </li> <li> <p>\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092e\u0947\u0902 \u0921\u093f\u0935\u093e\u0907\u0938 \u0921\u094d\u0930\u093e\u0907\u0935\u0930\u094d\u0938 \u0915\u0940 \u0915\u094d\u092f\u093e \u092d\u0942\u092e\u093f\u0915\u093e \u0939\u094b\u0924\u0940 \u0939\u0948?     a) \u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094b\u0930 \u0915\u0930\u0928\u093e     b) \u0939\u093e\u0908-\u0932\u0947\u0935\u0932 \u0932\u0948\u0902\u0917\u094d\u0935\u0947\u091c\u0947\u0938 \u0915\u093e \u0905\u0928\u0941\u0935\u093e\u0926 \u0915\u0930\u0928\u093e     c) \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e\u0913\u0902 \u0915\u093e \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0915\u0930\u0928\u093e     d) OS \u0915\u094b \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0921\u093f\u0935\u093e\u0907\u0938\u0947\u0938 \u0915\u0947 \u0938\u093e\u0925 \u0938\u0902\u0935\u093e\u0926 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0928\u093e  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: \u0911\u092a\u0930\u0947\u091f\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e CPU \u0914\u0930 \u092e\u0947\u092e\u094b\u0930\u0940 \u0915\u0947 \u092c\u0940\u091a \u0921\u0947\u091f\u093e \u0915\u0947 \u092a\u094d\u0930\u0935\u093e\u0939 \u0915\u094b \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e \u090f\u0915 \u0906\u0909\u091f\u092a\u0941\u091f \u0921\u093f\u0935\u093e\u0907\u0938 \u0939\u0948?     a) \u0915\u0940\u092c\u094b\u0930\u094d\u0921     b) \u092a\u094d\u0930\u093f\u0902\u091f\u0930     c) \u092e\u093e\u0909\u0938     d) \u0938\u094d\u0915\u0948\u0928\u0930  </p> </li> </ol>"},{"location":"hi/chapters/chapter01/#_20","title":"\u0909\u0924\u094d\u0924\u0930:","text":"<ol> <li>c) Central Processing Unit (CPU)  </li> <li>\u0917\u0932\u0924  </li> <li>b) System Software  </li> <li>Microprocessor  </li> <li>b) Python  </li> <li>\u0917\u0932\u0924  </li> <li>a) Cache Memory  </li> <li>d) OS \u0915\u094b \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0921\u093f\u0935\u093e\u0907\u0938\u0947\u0938 \u0915\u0947 \u0938\u093e\u0925 \u0938\u0902\u0935\u093e\u0926 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0928\u093e  </li> <li>\u0938\u0939\u0940  </li> <li>b) \u092a\u094d\u0930\u093f\u0902\u091f\u0930  </li> </ol>"},{"location":"hi/chapters/chapter02/","title":"\u092f\u0942\u0928\u093f\u091f 2: \u090f\u0928\u094d\u0915\u094b\u0921\u093f\u0902\u0917 \u092f\u094b\u091c\u0928\u093e\u090f\u0901 \u0914\u0930 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u093e\u0901","text":""},{"location":"hi/chapters/chapter02/#_1","title":"\u092a\u0930\u093f\u091a\u092f:","text":"<p>\u0907\u0938 \u092f\u0942\u0928\u093f\u091f \u092e\u0947\u0902, \u0939\u092e \u092f\u0939 \u091c\u093e\u0928\u0947\u0902\u0917\u0947 \u0915\u093f \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0921\u0947\u091f\u093e \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0948\u0938\u0947 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u090f\u0928\u094d\u0915\u094b\u0921\u093f\u0902\u0917 \u092f\u094b\u091c\u0928\u093e\u0913\u0902 \u0914\u0930 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947\u0964 \u091c\u092c\u0915\u093f \u092e\u093e\u0928\u0935 \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 \u0926\u0936\u092e\u0932\u0935 \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 (0-9) \u0915\u0947 \u0938\u0902\u0926\u0930\u094d\u092d \u092e\u0947\u0902 \u0938\u094b\u091a\u0924\u0947 \u0939\u0948\u0902, \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0915\u093e \u0938\u0902\u091a\u093e\u0930 \u0914\u0930 \u0938\u0902\u0917\u094d\u0930\u0939\u0923 \u0905\u0928\u094d\u092f \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u091c\u0948\u0938\u0947 \u0915\u093f \u092c\u093e\u0907\u0928\u0930\u0940 (0 \u0914\u0930 1)\u0964 \u0906\u092a \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u094b\u0902 \u0915\u0947 \u092c\u0940\u091a \u0930\u0942\u092a\u093e\u0902\u0924\u0930\u0923 \u0915\u0930\u0928\u093e \u092d\u0940 \u0938\u0940\u0916\u0947\u0902\u0917\u0947, \u091c\u094b \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0935\u093f\u091c\u094d\u091e\u093e\u0928 \u092e\u0947\u0902 \u090f\u0915 \u092e\u094c\u0932\u093f\u0915 \u0915\u094c\u0936\u0932 \u0939\u0948\u0964 \u0906\u0907\u090f \u0907\u0928 \u0905\u0935\u0927\u093e\u0930\u0923\u093e\u0913\u0902 \u0915\u094b \u0938\u092e\u091d\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0909\u0928\u094d\u0939\u0947\u0902 \u092e\u091c\u0947\u0926\u093e\u0930 \u0914\u0930 \u0906\u0938\u093e\u0928 \u092c\u0928\u093e\u0924\u0947 \u0939\u0948\u0902!</p>"},{"location":"hi/chapters/chapter02/#21","title":"2.1 \u090f\u0928\u094d\u0915\u094b\u0921\u093f\u0902\u0917 \u092f\u094b\u091c\u0928\u093e\u090f\u0901:","text":"<p>\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u0947 \u0938\u093e\u0925 \u0915\u093e\u092e \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u0905\u0915\u094d\u0937\u0930\u094b\u0902 \u092f\u093e \u092a\u094d\u0930\u0924\u0940\u0915\u094b\u0902 \u0915\u0947 \u0938\u093e\u0925 \u0928\u0939\u0940\u0902\u0964 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u094b \u0939\u092e\u093e\u0930\u0947 \u0935\u0930\u094d\u0923\u092e\u093e\u0932\u093e, \u0938\u0902\u0916\u094d\u092f\u093e\u090f\u0901 \u0914\u0930 \u092f\u0939\u093e\u0902 \u0924\u0915 \u0915\u093f \u0907\u092e\u094b\u091c\u0940 \u0938\u092e\u091d\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u090f\u0928\u094d\u0915\u094b\u0921\u093f\u0902\u0917 \u092f\u094b\u091c\u0928\u093e\u090f\u0901 \u0909\u092a\u092f\u094b\u0917 \u0915\u0940 \u091c\u093e\u0924\u0940 \u0939\u0948\u0902\u0964 \u090f\u0915 \u090f\u0928\u094d\u0915\u094b\u0921\u093f\u0902\u0917 \u092f\u094b\u091c\u0928\u093e \u0935\u0930\u094d\u0923\u094b\u0902 (\u091c\u0948\u0938\u0947 \u0905\u0915\u094d\u0937\u0930 \u0914\u0930 \u0935\u093f\u0930\u093e\u092e \u091a\u093f\u0939\u094d\u0928) \u0915\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0924\u094d\u092e\u0915 \u0915\u094b\u0921 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0924\u0940 \u0939\u0948 \u0924\u093e\u0915\u093f \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0909\u0928\u094d\u0939\u0947\u0902 \u0938\u0902\u0917\u094d\u0930\u0939\u093f\u0924 \u0914\u0930 \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930 \u0938\u0915\u0947\u0902\u0964</p>"},{"location":"hi/chapters/chapter02/#ascii","title":"ASCII (\u0905\u092e\u0947\u0930\u093f\u0915\u0928 \u0938\u094d\u091f\u0948\u0902\u0921\u0930\u094d\u0921 \u0915\u094b\u0921 \u092b\u0949\u0930 \u0907\u0902\u092b\u0949\u0930\u094d\u092e\u0947\u0936\u0928 \u0907\u0902\u091f\u0930\u091a\u0947\u0902\u091c):","text":"<p>ASCII \u0915\u094b \u092a\u093e\u0920 \u0914\u0930 \u092a\u094d\u0930\u0924\u0940\u0915\u094b\u0902 \u0915\u0947 \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u094b \u092e\u093e\u0928\u0915\u0940\u0915\u0930\u0923 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u092c\u0938\u0947 \u092a\u0939\u0932\u0947 \u090f\u0928\u094d\u0915\u094b\u0921\u093f\u0902\u0917 \u092f\u094b\u091c\u0928\u093e\u0913\u0902 \u092e\u0947\u0902 \u0938\u0947 \u090f\u0915 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0935\u093f\u0915\u0938\u093f\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964 \u092f\u0939 7 \u092c\u093f\u091f\u094d\u0938 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 128 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0935\u0930\u094d\u0923\u094b\u0902 \u0915\u094b \u090f\u0928\u094d\u0915\u094b\u0921 \u0915\u0930\u0924\u093e \u0939\u0948, \u091c\u093f\u0938\u092e\u0947\u0902 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902: - \u092c\u0921\u093c\u0947 \u0914\u0930 \u091b\u094b\u091f\u0947 \u0905\u0915\u094d\u0937\u0930 (A-Z, a-z) - \u0938\u0902\u0916\u094d\u092f\u093e\u090f\u0901 (0-9) - \u0935\u093f\u0936\u0947\u0937 \u092a\u094d\u0930\u0924\u0940\u0915 (\u091c\u0948\u0938\u0947 @, &amp;, #, \u0914\u0930 \u0935\u093f\u0930\u093e\u092e \u091a\u093f\u0939\u094d\u0928) - \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u0923 \u0935\u0930\u094d\u0923 (\u091c\u0948\u0938\u0947 Enter, Tab, \u0914\u0930 Backspace)</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: - \u0905\u0915\u094d\u0937\u0930 A \u0915\u0947 \u0932\u093f\u090f ASCII \u0915\u094b\u0921 65 \u0939\u0948\u0964 - \u092a\u094d\u0930\u0924\u0940\u0915 @ \u0915\u0947 \u0932\u093f\u090f ASCII \u0915\u094b\u0921 64 \u0939\u0948\u0964</p> <p>\u0939\u093e\u0932\u093e\u0902\u0915\u093f, ASCII \u0938\u0940\u092e\u093f\u0924 \u0939\u0948\u0964 \u091a\u0942\u0902\u0915\u093f \u092f\u0939 \u0915\u0947\u0935\u0932 7 \u092c\u093f\u091f\u094d\u0938 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u093e \u0939\u0948, \u092f\u0939 \u0915\u0947\u0935\u0932 128 \u0935\u0930\u094d\u0923\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948, \u091c\u094b \u0905\u0902\u0917\u094d\u0930\u0947\u091c\u0940 \u0915\u0947 \u0905\u0932\u093e\u0935\u093e \u0905\u0928\u094d\u092f \u092d\u093e\u0937\u093e\u0913\u0902 \u092f\u093e \u0928\u090f \u092a\u094d\u0930\u0924\u0940\u0915\u094b\u0902 \u091c\u0948\u0938\u0947 \u0907\u092e\u094b\u091c\u0940 \u0915\u0947 \u0932\u093f\u090f \u092a\u0930\u094d\u092f\u093e\u092a\u094d\u0924 \u0928\u0939\u0940\u0902 \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter02/#unicode","title":"UNICODE:","text":"<p>ASCII \u0915\u0940 \u0938\u0940\u092e\u093e\u0913\u0902 \u0915\u094b \u0926\u0942\u0930 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, UNICODE \u0935\u093f\u0915\u0938\u093f\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e\u0964 \u092f\u0939 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u092d\u093e\u0937\u093e\u0913\u0902 \u0914\u0930 \u092a\u094d\u0930\u0924\u0940\u0915 \u0938\u0947\u091f \u0938\u0947 143,000 \u0938\u0947 \u0905\u0927\u093f\u0915 \u0935\u0930\u094d\u0923\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948, \u091c\u093f\u0938\u0938\u0947 \u092f\u0939 \u090f\u0915 \u0938\u093e\u0930\u094d\u0935\u092d\u094c\u092e\u093f\u0915 \u090f\u0928\u094d\u0915\u094b\u0921\u093f\u0902\u0917 \u092f\u094b\u091c\u0928\u093e \u092c\u0928\u0924\u093e \u0939\u0948\u0964 UNICODE 16 \u092c\u093f\u091f\u094d\u0938 \u092f\u093e \u0905\u0927\u093f\u0915 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0935\u0930\u094d\u0923\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u093e \u0939\u0948, \u091c\u093f\u0938\u0938\u0947 \u092f\u0939 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0932\u0947\u0916\u0928 \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u094b\u0902 \u0915\u094b \u0938\u0902\u092d\u093e\u0932\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948, \u091c\u0948\u0938\u0947: - \u0932\u0948\u091f\u093f\u0928 (\u0905\u0902\u0917\u094d\u0930\u0947\u091c\u0940 \u0914\u0930 \u0905\u0928\u094d\u092f \u092d\u093e\u0937\u093e\u0913\u0902 \u0915\u0947 \u0932\u093f\u090f) - \u0938\u093f\u0930\u093f\u0932\u093f\u0915 (\u0930\u0942\u0938\u0940 \u0914\u0930 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u092d\u093e\u0937\u093e\u0913\u0902 \u0915\u0947 \u0932\u093f\u090f) - \u091a\u0940\u0928\u0940 \u0935\u0930\u094d\u0923 - \u0907\u092e\u094b\u091c\u0940 (\u0939\u093e\u0901, \u0906\u092a\u0915\u0947 \u092a\u0938\u0902\u0926\u0940\u0926\u093e \u0907\u092e\u094b\u091c\u0940 \u091c\u0948\u0938\u0947 \ud83d\ude03 \u0915\u0947 \u092d\u0940 \u0905\u0926\u094d\u0935\u093f\u0924\u0940\u092f UNICODE \u0928\u0902\u092c\u0930 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902!)</p> <p>UNICODE \u0921\u093f\u091c\u093f\u091f\u0932 \u092a\u093e\u0920 \u092e\u0947\u0902 \u0935\u0930\u094d\u0923\u094b\u0902 \u0915\u094b \u090f\u0928\u094d\u0915\u094b\u0921 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0935\u0948\u0936\u094d\u0935\u093f\u0915 \u092e\u093e\u0928\u0915 \u092c\u0928 \u0917\u092f\u093e \u0939\u0948, \u092f\u0939 \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0924\u0947 \u0939\u0941\u090f \u0915\u093f \u0938\u092d\u0940 \u092d\u093e\u0937\u093e\u090f\u0901 \u0914\u0930 \u092a\u094d\u0930\u0924\u0940\u0915 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u092a\u094d\u0932\u0947\u091f\u092b\u093e\u0930\u094d\u092e\u094b\u0902 \u092a\u0930 \u0932\u0917\u093e\u0924\u093e\u0930 \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930 \u0938\u0915\u0947\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: \u0938\u094d\u092e\u093e\u0907\u0932\u0940 \u0907\u092e\u094b\u091c\u0940 \ud83d\ude03 \u0915\u093e UNICODE \u092e\u093e\u0928 U+1F603 \u0939\u0948\u0964</p> <p>UNICODE \u0915\u094d\u092f\u094b\u0902 \u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0939\u0948? \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0926\u0941\u0928\u093f\u092f\u093e \u0915\u0947 \u091c\u0941\u0921\u093c\u0947 \u0930\u0939\u0928\u0947 \u0915\u0947 \u0938\u093e\u0925, \u0939\u092e\u0947\u0902 \u090f\u0915 \u0910\u0938\u093e \u0938\u093f\u0938\u094d\u091f\u092e \u091a\u093e\u0939\u093f\u090f \u091c\u094b \u0939\u0930 \u092d\u093e\u0937\u093e \u0915\u0947 \u0935\u0930\u094d\u0923\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0947\u0964 \u091a\u093e\u0939\u0947 \u0906\u092a \u0905\u0902\u0917\u094d\u0930\u0947\u091c\u0940, \u0930\u0942\u0938\u0940, \u092f\u093e \u091c\u093e\u092a\u093e\u0928\u0940 \u092e\u0947\u0902 \u0932\u093f\u0916 \u0930\u0939\u0947 \u0939\u094b\u0902, \u092f\u093e \u090f\u0915 \u0907\u092e\u094b\u091c\u0940 \u092d\u0947\u091c \u0930\u0939\u0947 \u0939\u094b\u0902, UNICODE \u092f\u0939 \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0915\u093f \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u092e\u091d\u0947 \u0915\u093f \u0906\u092a \u0915\u094d\u092f\u093e \u0915\u0939 \u0930\u0939\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter02/#22","title":"2.2 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u093e\u0901:","text":"<p>\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u092e\u0947\u0902, \u0921\u0947\u091f\u093e \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0914\u0930 \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u091c\u092c\u0915\u093f \u0939\u092e \u092e\u093e\u0928\u0935 \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 \u0926\u0936\u092e\u0932\u0935 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 (\u092c\u0947\u0938 10) \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092c\u093e\u0907\u0928\u0930\u0940 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 (\u092c\u0947\u0938 2) \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u0915\u094d\u092f\u094b\u0902\u0915\u093f \u0935\u0947 \u0915\u0947\u0935\u0932 \u0926\u094b \u0905\u0935\u0938\u094d\u0925\u093e\u0913\u0902 \u0915\u094b \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902: \u091a\u093e\u0932\u0942 (1) \u0914\u0930 \u092c\u0902\u0926 (0)\u0964</p>"},{"location":"hi/chapters/chapter02/#10","title":"\u0926\u0936\u092e\u0932\u0935 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u0940 (\u092c\u0947\u0938 10):","text":"<p>\u0926\u0936\u092e\u0932\u0935 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u0935\u0939 \u0939\u0948 \u091c\u093f\u0938\u0915\u093e \u0939\u092e \u0939\u0930 \u0926\u093f\u0928 \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964 \u0907\u0938\u0947 \u092c\u0947\u0938 10 \u0915\u0939\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u0915\u094d\u092f\u094b\u0902\u0915\u093f \u0907\u0938\u092e\u0947\u0902 \u0926\u0938 \u0905\u0902\u0915 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902: 0, 1, 2, 3, 4, 5, 6, 7, 8, \u0914\u0930 9\u0964 \u0939\u092e \u0907\u0928 \u0905\u0902\u0915\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0915\u093f\u0938\u0940 \u092d\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u0909\u0928\u094d\u0939\u0947\u0902 10 \u0915\u0940 \u0936\u0915\u094d\u0924\u093f\u092f\u094b\u0902 \u092e\u0947\u0902 \u0938\u094d\u0925\u093f\u0924\u093f\u092f\u094b\u0902 \u092e\u0947\u0902 \u0930\u0916\u0915\u0930\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: - \u0938\u0902\u0916\u094d\u092f\u093e 125 \u0915\u094b \u0926\u0936\u092e\u0932\u0935 \u092e\u0947\u0902 \u0907\u0938 \u0924\u0930\u0939 \u092a\u094d\u0930\u0938\u094d\u0924\u0941\u0924 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948:   [   1 \\times 10^2 + 2 \\times 10^1 + 5 \\times 10^0 = 100 + 20 + 5 = 125   ]</p> <p>\u092f\u0939 \u0939\u092e\u093e\u0930\u0940 \u0938\u094d\u0935\u093e\u092d\u093e\u0935\u093f\u0915 \u0917\u0923\u0928\u093e \u0915\u0930\u0928\u0947 \u0915\u093e \u0924\u0930\u0940\u0915\u093e \u0939\u0948, \u0932\u0947\u0915\u093f\u0928 \u092f\u0939 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u0941\u0915\u094d\u0924 \u0928\u0939\u0940\u0902 \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter02/#2_1","title":"\u092c\u093e\u0907\u0928\u0930\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u0940 (\u092c\u0947\u0938 2):","text":"<p>\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092c\u093e\u0907\u0928\u0930\u0940 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u091c\u094b \u0926\u094b \u0905\u0902\u0915\u094b\u0902 \u092a\u0930 \u0906\u0927\u093e\u0930\u093f\u0924 \u0939\u0948: 0 \u0914\u0930 1\u0964 \u0907\u0938 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u0915\u094b \u092c\u0947\u0938 2 \u0915\u0939\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u0915\u094d\u092f\u094b\u0902\u0915\u093f \u0907\u0938\u092e\u0947\u0902 \u0915\u0947\u0935\u0932 \u0926\u094b \u0938\u0902\u092d\u093e\u0935\u093f\u0924 \u092e\u093e\u0928 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964 \u0939\u0930 \u092c\u093e\u0907\u0928\u0930\u0940 \u0905\u0902\u0915 (\u092c\u093f\u091f) 2 \u0915\u0940 \u0936\u0915\u094d\u0924\u093f \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u093e \u0939\u0948, \u091c\u0948\u0938\u0947 \u0939\u0930 \u0926\u0936\u092e\u0932\u0935 \u0905\u0902\u0915 10 \u0915\u0940 \u0936\u0915\u094d\u0924\u093f \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: - \u092c\u093e\u0907\u0928\u0930\u0940 \u0938\u0902\u0916\u094d\u092f\u093e 101 \u0915\u093e \u0905\u0930\u094d\u0925 \u0939\u0948:   [   1 \\times 2^2 + 0 \\times 2^1 + 1 \\times 2^0 = 4 + 0 + 1 = 5   ]</p> <p>\u0939\u093e\u0932\u093e\u0902\u0915\u093f \u092c\u093e\u0907\u0928\u0930\u0940 \u0938\u0902\u0916\u094d\u092f\u093e\u090f\u0901 \u0932\u0902\u092c\u0940 \u0932\u0917 \u0938\u0915\u0924\u0940 \u0939\u0948\u0902, \u0935\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0947 \u0932\u093f\u090f \u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0939\u0948\u0902 \u0915\u094d\u092f\u094b\u0902\u0915\u093f \u0935\u0947 \u0907\u0932\u0947\u0915\u094d\u091f\u094d\u0930\u0949\u0928\u093f\u0915 \u0938\u0930\u094d\u0915\u093f\u091f \u0915\u0940 \u091a\u093e\u0932\u0942/\u092c\u0902\u0926 \u0905\u0935\u0938\u094d\u0925\u093e\u0913\u0902 \u0915\u0947 \u0938\u093e\u0925 \u0938\u0940\u0927\u0947 \u092e\u093e\u0928\u091a\u093f\u0924\u094d\u0930\u093f\u0924 \u0939\u094b\u0924\u0940 \u0939\u0948\u0902\u0964</p> <p>\u0930\u094b\u091a\u0915 \u0924\u0925\u094d\u092f: \u092c\u093e\u0907\u0928\u0930\u0940 \u0915\u094b \u090f\u0915 \u0932\u093e\u0907\u091f \u0938\u094d\u0935\u093f\u091a \u0915\u0940 \u0924\u0930\u0939 \u0938\u094b\u091a\u0947\u0902: 1 \u0915\u093e \u0905\u0930\u094d\u0925 \u0939\u0948 \"\u091a\u093e\u0932\u0942\" \u0914\u0930 0 \u0915\u093e \u0905\u0930\u094d\u0925 \u0939\u0948 \"\u092c\u0902\u0926\u0964\" \u0906\u092a\u0915\u093e \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0939\u0930 \u0938\u0947\u0915\u0902\u0921 \u092e\u0947\u0902 \u0932\u093e\u0916\u094b\u0902 \"\u0938\u094d\u0935\u093f\u091a\" \u092a\u0932\u091f \u0930\u0939\u093e \u0939\u0948 \u0924\u093e\u0915\u093f \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u092a\u0942\u0930\u093e \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0947!</p>"},{"location":"hi/chapters/chapter02/#8","title":"\u0911\u0915\u094d\u091f\u0932 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u0940 (\u092c\u0947\u0938 8):","text":"<p>\u0911\u0915\u094d\u091f\u0932 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u092e\u0947\u0902 \u0906\u0920 \u0905\u0902\u0915 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902: 0, 1, 2, 3, 4, 5, 6, \u0914\u0930 7, \u0914\u0930 \u092f\u0939 \u092c\u0947\u0938 8 \u092a\u0930 \u0906\u0927\u093e\u0930\u093f\u0924 \u0939\u0948\u0964 \u0907\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0936\u0941\u0930\u0941\u0906\u0924\u0940 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u092e\u0947\u0902 \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0925\u093e \u0915\u094d\u092f\u094b\u0902\u0915\u093f \u092c\u093e\u0907\u0928\u0930\u0940 \u0914\u0930 \u0911\u0915\u094d\u091f\u0932 \u0915\u0947 \u092c\u0940\u091a \u0930\u0942\u092a\u093e\u0902\u0924\u0930\u0923 \u0915\u0930\u0928\u093e \u092c\u093e\u0907\u0928\u0930\u0940 \u0914\u0930 \u0926\u0936\u092e\u0932\u0935 \u0915\u0947 \u092c\u0940\u091a \u0930\u0942\u092a\u093e\u0902\u0924\u0930\u0923 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0924\u0941\u0932\u0928\u093e \u092e\u0947\u0902 \u0906\u0938\u093e\u0928 \u0939\u094b\u0924\u093e \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: - \u0911\u0915\u094d\u091f\u0932 \u0938\u0902\u0916\u094d\u092f\u093e 17 \u0915\u093e \u0905\u0930\u094d\u0925 \u0939\u0948:   [   1 \\times 8^1 + 7 \\times 8^0 = 8 + 7 = 15 \\text{ \u0926\u0936\u092e\u0932\u0935 \u092e\u0947\u0902}   ]</p>"},{"location":"hi/chapters/chapter02/#16","title":"\u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u0940 (\u092c\u0947\u0938 16):","text":"<p>\u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u092e\u0947\u0902 16 \u092a\u094d\u0930\u0924\u0940\u0915 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902: \u0905\u0902\u0915 0-9 \u0914\u0930 \u0905\u0915\u094d\u0937\u0930 A-F, \u091c\u0939\u093e\u0901: - A = 10 - B = 11 - C = 12 - D = 13 - E = 14 - F = 15</p> <p>\u092f\u0939 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u092e\u0947\u0902 \u092c\u0939\u0941\u0924 \u0909\u092a\u092f\u094b\u0917\u0940 \u0939\u0948 \u0915\u094d\u092f\u094b\u0902\u0915\u093f \u092f\u0939 \u092c\u0921\u093c\u0947 \u092c\u093e\u0907\u0928\u0930\u0940 \u0928\u0902\u092c\u0930\u094b\u0902 \u0915\u094b \u0905\u0927\u093f\u0915 \u0938\u0902\u0915\u094d\u0937\u093f\u092a\u094d\u0924 \u0930\u0942\u092a \u0938\u0947 \u092a\u094d\u0930\u0938\u094d\u0924\u0941\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0940 \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: - \u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u0938\u0902\u0916\u094d\u092f\u093e 1A \u0915\u093e \u0905\u0930\u094d\u0925 \u0939\u0948:   [   1 \\times 16^1 + A \\times 16^0 = 16 + 10 = 26 \\text{ \u0926\u0936\u092e\u0932\u0935 \u092e\u0947\u0902}   ]</p> <p>\u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u0915\u094d\u092f\u094b\u0902? \u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0905\u0915\u094d\u0938\u0930 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u0914\u0930 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u092e\u0947\u0902 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u0915\u094d\u092f\u094b\u0902\u0915\u093f \u092f\u0939 \u0932\u0902\u092c\u0947 \u092c\u093e\u0907\u0928\u0930\u0940 \u0928\u0902\u092c\u0930\u094b\u0902 \u0915\u0940 \u0924\u0941\u0932\u0928\u093e \u092e\u0947\u0902 \u0915\u093e\u092e \u0915\u0930\u0928\u093e \u0906\u0938\u093e\u0928 \u0939\u0948\u0964 \u0909\u0926\u093e\u0939\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f, \u092c\u093e\u0907\u0928\u0930\u0940 \u0938\u0902\u0916\u094d\u092f\u093e 11111111 \u0915\u094b \u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u092e\u0947\u0902 \u0905\u0927\u093f\u0915 \u0938\u0902\u0915\u094d\u0937\u0947\u092a \u092e\u0947\u0902 FF \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0932\u093f\u0916\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter02/#23","title":"2.3 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u094b\u0902 \u0915\u0947 \u092c\u0940\u091a \u0930\u0942\u092a\u093e\u0902\u0924\u0930\u0923:","text":"<p>\u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u094b\u0902 \u0915\u0947 \u092c\u0940\u091a \u0930\u0942\u092a\u093e\u0902\u0924\u0930\u0923 \u0915\u0948\u0938\u0947 \u0915\u0930\u0947\u0902, \u092f\u0939 \u0938\u092e\u091d\u0928\u093e \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0935\u093f\u091c\u094d\u091e\u093e\u0928 \u092e\u0947\u0902 \u090f\u0915 \u092e\u0941\u0916\u094d\u092f \u0915\u094c\u0936\u0932 \u0939\u0948\u0964 \u0906\u0907\u090f \u0915\u0941\u091b \u0930\u0942\u092a\u093e\u0902\u0924\u0930\u0923 \u0924\u0915\u0928\u0940\u0915\u094b\u0902 \u092a\u0930 \u0928\u091c\u093c\u0930 \u0921\u093e\u0932\u0924\u0947 \u0939\u0948\u0902:</p>"},{"location":"hi/chapters/chapter02/#_2","title":"\u0926\u0936\u092e\u0932\u0935 \u0938\u0947 \u092c\u093e\u0907\u0928\u0930\u0940:","text":"<p>\u090f\u0915 \u0926\u0936\u092e\u0932\u0935 \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u094b \u092c\u093e\u0907\u0928\u0930\u0940 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0906\u092a \u0907\u0938 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0915\u093e \u092a\u093e\u0932\u0928 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902: 1. \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u094b 2 \u0938\u0947 \u0935\u093f\u092d\u093e\u091c\u093f\u0924 \u0915\u0930\u0947\u0902\u0964 2. \u092d\u093e\u0917\u092b\u0932 \u0914\u0930 \u0936\u0947\u0937 \u0915\u094b \u0932\u093f\u0916\u0947\u0902\u0964 3. \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0915\u094b \u0924\u092c \u0924\u0915 \u0926\u094b\u0939\u0930\u093e\u090f\u0901 \u091c\u092c \u0924\u0915 \u092d\u093e\u0917\u092b\u0932 0 \u0928 \u0939\u094b \u091c\u093e\u090f\u0964 4. \u0936\u0947\u0937 \u0915\u094b \u0909\u0932\u094d\u091f\u0947 \u0915\u094d\u0930\u092e \u092e\u0947\u0902 \u0932\u093f\u0916\u0947\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: - \u0926\u0936\u092e\u0932\u0935 \u0938\u0902\u0916\u094d\u092f\u093e 13 \u0915\u094b \u092c\u093e\u0907\u0928\u0930\u0940 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0928\u093e:   1. 13 \u00f7 2 = 6, \u0936\u0947\u0937 = 1   2. 6 \u00f7 2 = 3, \u0936\u0947\u0937 = 0   3. 3 \u00f7 2 = 1, \u0936\u0947\u0937 = 1   4. 1 \u00f7 2 = 0, \u0936\u0947\u0937 = 1   - \u092c\u093e\u0907\u0928\u0930\u0940 \u092e\u0947\u0902: 1101</p>"},{"location":"hi/chapters/chapter02/#_3","title":"\u092c\u093e\u0907\u0928\u0930\u0940 \u0938\u0947 \u0926\u0936\u092e\u0932\u0935:","text":"<p>\u092c\u093e\u0907\u0928\u0930\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u094b \u0926\u0936\u092e\u0932\u0935 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f: 1. \u092c\u093e\u0907\u0928\u0930\u0940 \u0905\u0902\u0915\u094b\u0902 \u0915\u094b 2 \u0915\u0940 \u0936\u0915\u094d\u0924\u093f\u092f\u094b\u0902 \u0915\u0947 \u0938\u093e\u0925 \u0917\u0941\u0923\u093e \u0915\u0930\u0947\u0902\u0964 2. \u0938\u092d\u0940 \u0909\u0924\u094d\u092a\u093e\u0926\u094b\u0902 \u0915\u094b \u091c\u094b\u0921\u093c\u0947\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: - \u092c\u093e\u0907\u0928\u0930\u0940 \u0938\u0902\u0916\u094d\u092f\u093e 1011 \u0915\u094b \u0926\u0936\u092e\u0932\u0935 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0928\u093e:   [   1 \\times 2^3 + 0 \\times 2^2 + 1 \\times 2^1 + 1 \\times 2^0 = 8 + 0 + 2 + 1 = 11   ]</p>"},{"location":"hi/chapters/chapter02/#_4","title":"\u0926\u0936\u092e\u0932\u0935 \u0938\u0947 \u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932:","text":"<p>\u0926\u0936\u092e\u0932\u0935 \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u094b \u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f: 1. \u0926\u0936\u092e\u0932\u0935 \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u094b 16 \u0938\u0947 \u0935\u093f\u092d\u093e\u091c\u093f\u0924 \u0915\u0930\u0947\u0902\u0964 2. \u0936\u0947\u0937 \u0932\u093f\u0916\u0947\u0902 (0-9, A-F)\u0964 3. \u091c\u092c \u0924\u0915 \u092d\u093e\u0917\u092b\u0932 0 \u0928 \u0939\u094b \u091c\u093e\u090f, \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u094b 16 \u0938\u0947 \u0935\u093f\u092d\u093e\u091c\u093f\u0924 \u0915\u0930\u0924\u0947 \u0930\u0939\u0947\u0902\u0964 4. \u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u0938\u0902\u0916\u094d\u092f\u093e \u0936\u0947\u0937\u094b\u0902 \u0915\u0947 \u0909\u0932\u094d\u091f\u0947 \u0915\u094d\u0930\u092e \u092e\u0947\u0902 \u092a\u0922\u093c\u0928\u0947 \u092a\u0930 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: 255 \u0915\u094b \u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0947\u0902\u0964 255 \u00f7 16 = 15 \u0936\u0947\u0937 15 (F) 15 \u00f7 16 = 0 \u0936\u0947\u0937 15 (F) \u0907\u0938\u0932\u093f\u090f, 255 \u0926\u0936\u092e\u0932\u0935 \u092e\u0947\u0902 FF \u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u092e\u0947\u0902 \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter02/#_5","title":"\u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u0938\u0947 \u0926\u0936\u092e\u0932\u0935:","text":"<p>\u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u094b \u0926\u0936\u092e\u0932\u0935 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f: 1. \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0905\u0902\u0915 \u0915\u094b \\(16^n\\) \u0938\u0947 \u0917\u0941\u0923\u093e \u0915\u0930\u0947\u0902, \u091c\u0939\u093e\u0901 n \u0905\u0902\u0915 \u0915\u0940 \u0938\u094d\u0925\u093f\u0924\u093f \u0939\u0948, \u091c\u094b \u0926\u093e\u090f\u0902 \u0938\u0947 0 \u0938\u0947 \u0936\u0941\u0930\u0942 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964 2. \u092a\u0930\u093f\u0923\u093e\u092e\u094b\u0902 \u0915\u094b \u091c\u094b\u0921\u093c\u0947\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: 1A \u0915\u094b \u0926\u0936\u092e\u0932\u0935 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0947\u0902\u0964 \\(1 \\times 16^1 + A \\times 16^0 = 16 + 10 = 26\\)\u0964</p>"},{"location":"hi/chapters/chapter02/#_6","title":"\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940:","text":"<ul> <li>Encoding: \u0935\u0930\u094d\u0923\u094b\u0902 \u0915\u094b \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0947 \u0938\u092e\u091d\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0902\u0916\u094d\u092f\u093e\u0924\u094d\u092e\u0915 \u092a\u094d\u0930\u093e\u0930\u0942\u092a \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e\u0964</li> <li>ASCII: \u090f\u0915 \u090f\u0928\u094d\u0915\u094b\u0921\u093f\u0902\u0917 \u092f\u094b\u091c\u0928\u093e \u091c\u094b \u0905\u0902\u0917\u094d\u0930\u0947\u091c\u0940 \u0935\u0930\u094d\u0923\u094b\u0902 \u0914\u0930 \u092a\u094d\u0930\u0924\u0940\u0915\u094b\u0902 \u0915\u093e 7 \u092c\u093f\u091f\u094d\u0938 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u0940 \u0939\u0948\u0964</li> <li>UNICODE: \u090f\u0915 \u0935\u094d\u092f\u093e\u092a\u0915 \u090f\u0928\u094d\u0915\u094b\u0921\u093f\u0902\u0917 \u092f\u094b\u091c\u0928\u093e \u091c\u094b \u0915\u0908 \u092d\u093e\u0937\u093e\u0913\u0902 \u0914\u0930 \u092a\u094d\u0930\u0924\u0940\u0915\u094b\u0902, \u091c\u093f\u0938\u092e\u0947\u0902 \u0907\u092e\u094b\u091c\u0940 \u092d\u0940 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902, \u0915\u0947 \u0935\u0930\u094d\u0923\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u0940 \u0939\u0948\u0964</li> <li>Decimal: \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u091c\u093f\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u092e\u093e\u0928\u0935 \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 (Base 10)\u0964</li> <li>Binary: \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u091c\u093f\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u091c\u093f\u0938\u092e\u0947\u0902 \u0915\u0947\u0935\u0932 0 \u0914\u0930 1 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 (Base 2)\u0964</li> <li>Octal: \u090f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u091c\u094b \u0906\u0920 \u0905\u0902\u0915\u094b\u0902 (0-7) \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0940 \u0939\u0948 (Base 8)\u0964</li> <li>Hexadecimal: \u090f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u091c\u094b 16 \u092a\u094d\u0930\u0924\u0940\u0915\u094b\u0902 (0-9 \u0914\u0930 A-F) \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0940 \u0939\u0948 (Base 16)\u0964</li> </ul>"},{"location":"hi/chapters/chapter02/#_7","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940:","text":"<ol> <li> <p>\u090f\u0928\u094d\u0915\u094b\u0921\u093f\u0902\u0917 \u092f\u094b\u091c\u0928\u093e \u0915\u093e \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u092a\u093e\u0920 \u0915\u094b \u091a\u093f\u0924\u094d\u0930 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0928\u093e     b) \u0935\u0930\u094d\u0923\u094b\u0902 \u0915\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u092a\u094d\u0930\u0938\u094d\u0924\u0941\u0924 \u0915\u0930\u0928\u093e     c) \u092c\u093e\u0907\u0928\u0930\u0940 \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0930\u0928\u093e     d) \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092e\u0947\u092e\u094b\u0930\u0940 \u0915\u093e \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0915\u0930\u0928\u093e  </p> </li> <li> <p>ASCII \u0915\u093e \u092a\u0942\u0930\u093e \u0928\u093e\u092e \u0915\u094d\u092f\u093e \u0939\u0948?     a) American Standard Code for Information Interconnection     b) American Standard Code for Information Interchange     c) Advanced Symbol Code for International Information     d) Application System Code for Internet  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e UNICODE \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948 \u0932\u0947\u0915\u093f\u0928 ASCII \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0928\u0939\u0940\u0902?     a) \u0905\u0915\u094d\u0937\u0930 \"A\"     b) \u0938\u0902\u0916\u094d\u092f\u093e \"9\"     c) \u0907\u092e\u094b\u091c\u0940 \ud83d\ude03     d) \u092a\u094d\u0930\u0924\u0940\u0915 \"#\"  </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: \u092c\u093e\u0907\u0928\u0930\u0940 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u0915\u0947\u0935\u0932 0 \u0914\u0930 1 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0940 \u0939\u0948\u0964  </p> </li> <li> <p>\u0926\u0936\u092e\u0932\u0935 \u092e\u0947\u0902 1101 \u0915\u094d\u092f\u093e \u0939\u0948?     a) 11     b) 12     c) 13     d) 14  </p> </li> <li> <p>\u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u0915\u093f\u0924\u0928\u0947 \u092a\u094d\u0930\u0924\u0940\u0915\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0940 \u0939\u0948?     a) 2     b) 8     c) 10     d) 16  </p> </li> <li> <p>\u0926\u0936\u092e\u0932\u0935 \u0938\u0902\u0916\u094d\u092f\u093e 255 \u0915\u094b \u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0947\u0902\u0964     a) FF     b) FE     c) F1     d) 1F  </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: UNICODE \u0938\u092d\u0940 \u0932\u0947\u0916\u0928 \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u094b\u0902 \u0915\u0947 \u0935\u0930\u094d\u0923\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948, \u091c\u093f\u0938\u092e\u0947\u0902 \u0907\u092e\u094b\u091c\u0940 \u092d\u0940 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902\u0964  </p> </li> <li> <p>\u0926\u0936\u092e\u0932\u0935 \u0938\u0902\u0916\u094d\u092f\u093e 17 \u0915\u093e \u0911\u0915\u094d\u091f\u0932 \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u094d\u092f\u093e \u0939\u0948?     a) 21     b) 20     c) 17     d) 10  </p> </li> <li> <p>\u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u0938\u0902\u0916\u094d\u092f\u093e A5 \u0915\u094b \u0926\u0936\u092e\u0932\u0935 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0947\u0902\u0964      a) 105      b) 165      c) 175      d) 195  </p> </li> </ol>"},{"location":"hi/chapters/chapter02/#_8","title":"\u0909\u0924\u094d\u0924\u0930:","text":"<ol> <li>b) \u0935\u0930\u094d\u0923\u094b\u0902 \u0915\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u092a\u094d\u0930\u0938\u094d\u0924\u0941\u0924 \u0915\u0930\u0928\u093e</li> <li>b) American Standard Code for Information Interchange</li> <li>c) \u0907\u092e\u094b\u091c\u0940 \ud83d\ude03</li> <li>\u0938\u0924\u094d\u092f</li> <li>c) 13</li> <li>d) 16</li> <li>a) FF</li> <li>\u0938\u0924\u094d\u092f</li> <li>d) 10</li> <li>b) 165</li> </ol>"},{"location":"hi/chapters/chapter03/","title":"\u092f\u0942\u0928\u093f\u091f 2: \u0909\u092d\u0930\u0924\u0947 \u0930\u0941\u091d\u093e\u0928","text":""},{"location":"hi/chapters/chapter03/#_1","title":"\u092a\u0930\u093f\u091a\u092f:","text":"<p>\u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u0924\u0947\u091c\u0940 \u0938\u0947 \u0935\u093f\u0915\u0938\u093f\u0924 \u0939\u094b \u0930\u0939\u0940 \u0939\u0948, \u0914\u0930 \u0907\u0938\u0915\u0947 \u0938\u093e\u0925, \u0928\u090f \u0930\u0941\u091d\u093e\u0928 \u0914\u0930 \u0928\u0935\u093e\u091a\u093e\u0930 \u0939\u0930 \u0926\u093f\u0928 \u0909\u092d\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902\u0964 \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0936\u0939\u0930\u094b\u0902 \u0938\u0947 \u0932\u0947\u0915\u0930 artificial intelligence (AI) \u0924\u0915, \u092f\u0947 \u0909\u0928\u094d\u0928\u0924\u093f\u092f\u093e\u0901 \u0939\u092e\u093e\u0930\u0947 \u091c\u0940\u0928\u0947, \u0915\u093e\u092e \u0915\u0930\u0928\u0947 \u0914\u0930 \u0926\u0941\u0928\u093f\u092f\u093e \u0915\u0947 \u0938\u093e\u0925 \u092c\u093e\u0924\u091a\u0940\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0924\u0930\u0940\u0915\u0947 \u0915\u094b \u092c\u0926\u0932 \u0930\u0939\u0940 \u0939\u0948\u0902\u0964 \u0907\u0938 \u092f\u0942\u0928\u093f\u091f \u092e\u0947\u0902, \u0939\u092e \u0906\u0927\u0941\u0928\u093f\u0915 \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u092e\u0947\u0902 \u0915\u0941\u091b \u0938\u092c\u0938\u0947 \u0930\u094b\u092e\u093e\u0902\u091a\u0915 \u0914\u0930 \u092a\u094d\u0930\u092d\u093e\u0935\u0936\u093e\u0932\u0940 \u0930\u0941\u091d\u093e\u0928\u094b\u0902 \u0915\u093e \u0905\u0928\u094d\u0935\u0947\u0937\u0923 \u0915\u0930\u0947\u0902\u0917\u0947, \u091c\u0948\u0938\u0947 \u0915\u093f AI, Internet of Things (IoT), 5G \u0928\u0947\u091f\u0935\u0930\u094d\u0915, \u0914\u0930 \u092d\u0940 \u092c\u0939\u0941\u0924 \u0915\u0941\u091b\u0964 \u0907\u0938 \u092f\u0942\u0928\u093f\u091f \u0915\u0947 \u0905\u0902\u0924 \u0924\u0915, \u0906\u092a\u0915\u0947 \u092a\u093e\u0938 \u092f\u0939 \u0938\u092e\u091d\u0928\u0947 \u0915\u093e \u090f\u0915 \u0905\u091a\u094d\u091b\u093e \u0906\u0927\u093e\u0930 \u0939\u094b\u0917\u093e \u0915\u093f \u092f\u0947 \u0924\u0915\u0928\u0940\u0915\u0947\u0902 \u0915\u0948\u0938\u0947 \u0915\u093e\u092e \u0915\u0930\u0924\u0940 \u0939\u0948\u0902 \u0914\u0930 \u0915\u094d\u092f\u094b\u0902 \u092f\u0947 \u092d\u0935\u093f\u0937\u094d\u092f \u0915\u093e \u0906\u0915\u093e\u0930 \u0926\u0947 \u0930\u0939\u0940 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter03/#31-artificial-intelligence-ai","title":"3.1 Artificial Intelligence (AI):","text":"<p>Artificial Intelligence (AI) \u0915\u093e \u0924\u093e\u0924\u094d\u092a\u0930\u094d\u092f \u0909\u0928 \u092e\u0936\u0940\u0928\u094b\u0902 \u0915\u0940 \u0915\u094d\u0937\u092e\u0924\u093e \u0938\u0947 \u0939\u0948 \u091c\u094b \u0938\u093e\u092e\u093e\u0928\u094d\u092f\u0924\u0903 \u092e\u093e\u0928\u0935 \u092c\u0941\u0926\u094d\u0927\u093f \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0935\u093e\u0932\u0947 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u0938\u0915\u094d\u0937\u092e \u0939\u094b\u0924\u0940 \u0939\u0948\u0902, \u091c\u0948\u0938\u0947 \u0915\u093f \u092d\u093e\u0937\u0923 \u0915\u094b \u092a\u0939\u091a\u093e\u0928\u0928\u093e, \u092d\u093e\u0937\u093e \u0915\u094b \u0938\u092e\u091d\u0928\u093e, \u0914\u0930 \u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947\u0928\u093e\u0964 AI \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u094b\u0902 \u0915\u094b \u0926\u094b \u092a\u094d\u0930\u0915\u093e\u0930\u094b\u0902 \u092e\u0947\u0902 \u0935\u0930\u094d\u0917\u0940\u0915\u0943\u0924 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948:</p> <ol> <li> <p>Narrow AI: \u0907\u0938 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e AI \u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0915\u093e\u0930\u094d\u092f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0921\u093f\u091c\u093c\u093e\u0907\u0928 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964 \u0909\u0926\u093e\u0939\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f, \u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u0938\u0939\u093e\u092f\u0915 \u091c\u0948\u0938\u0947 Siri \u092f\u093e Google Assistant, \u091c\u094b \u0935\u0949\u092f\u0938 \u0915\u092e\u093e\u0902\u0921 \u0915\u094b \u0938\u092e\u091d\u0928\u0947 \u092e\u0947\u0902 \u0905\u091a\u094d\u091b\u0947 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u0932\u0947\u0915\u093f\u0928 \u0905\u092a\u0928\u0947 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u0938\u0947 \u092c\u093e\u0939\u0930 \u0915\u0947 \u0915\u093e\u0930\u094d\u092f \u0928\u0939\u0940\u0902 \u0915\u0930 \u0938\u0915\u0924\u0947\u0964</p> </li> <li> <p>General AI: \u092f\u0939 \u090f\u0915 \u092e\u0936\u0940\u0928 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0935\u093f\u091a\u093e\u0930 \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u093f\u0938\u092e\u0947\u0902 \u092e\u093e\u0928\u0935 \u091c\u0948\u0938\u0940 \u092c\u0941\u0926\u094d\u0927\u093f \u0939\u094b \u0914\u0930 \u091c\u094b \u0915\u093f\u0938\u0940 \u092d\u0940 \u092c\u094c\u0926\u094d\u0927\u093f\u0915 \u0915\u093e\u0930\u094d\u092f \u0915\u094b \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u0938\u0915\u094d\u0937\u092e \u0939\u094b \u091c\u094b \u090f\u0915 \u092e\u093e\u0928\u0935 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948\u0964 General AI \u0905\u092d\u0940 \u092d\u0940 \u0905\u0928\u0941\u0938\u0902\u0927\u093e\u0928 \u0915\u0947 \u0915\u094d\u0937\u0947\u0924\u094d\u0930 \u092e\u0947\u0902 \u0939\u0948 \u0914\u0930 \u0907\u0938\u0947 \u0905\u092d\u0940 \u0924\u0915 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0928\u0939\u0940\u0902 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964</p> </li> </ol> <p>AI \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0939\u093e\u0901 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948:     - Healthcare: AI \u0921\u0949\u0915\u094d\u091f\u0930\u094b\u0902 \u0915\u094b \u091a\u093f\u0915\u093f\u0924\u094d\u0938\u093e \u0921\u0947\u091f\u093e \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0928\u0947 \u0914\u0930 \u092c\u0940\u092e\u093e\u0930\u093f\u092f\u094b\u0902 \u0915\u093e \u0905\u0927\u093f\u0915 \u0938\u091f\u0940\u0915 \u0928\u093f\u0926\u093e\u0928 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u093e \u0939\u0948\u0964     - Finance: AI \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u093e\u0901 \u0927\u094b\u0916\u093e\u0927\u0921\u093c\u0940 \u0935\u093e\u0932\u0947 \u0932\u0947\u0928-\u0926\u0947\u0928 \u0915\u093e \u092a\u0924\u093e \u0932\u0917\u093e\u0928\u0947 \u0914\u0930 \u0928\u093f\u0935\u0947\u0936 \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u092e\u0947\u0902 \u0909\u092a\u092f\u094b\u0917 \u0915\u0940 \u091c\u093e\u0924\u0940 \u0939\u0948\u0902\u0964     - Entertainment: AI \u0938\u093f\u092b\u093e\u0930\u093f\u0936 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u0915\u094b \u0936\u0915\u094d\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948, \u091c\u0948\u0938\u0947 Netflix, \u091c\u094b \u0906\u092a\u0915\u0940 \u0926\u0947\u0916\u0928\u0947 \u0915\u0940 \u0907\u0924\u093f\u0939\u093e\u0938 \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u092b\u093c\u093f\u0932\u094d\u092e\u0947\u0902 \u0938\u0941\u091d\u093e\u0924\u093e \u0939\u0948\u0964  </p> <p>\u092e\u091c\u093c\u0947\u0926\u093e\u0930 \u0924\u0925\u094d\u092f: AI \u0915\u094b \u090f\u0915 \u092c\u0939\u0941\u0924 \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0915\u0948\u0932\u0915\u0941\u0932\u0947\u091f\u0930 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0915\u0932\u094d\u092a\u0928\u093e \u0915\u0930\u0947\u0902 \u091c\u094b \u0915\u0947\u0935\u0932 \u0917\u0923\u093f\u0924 \u0939\u0940 \u0928\u0939\u0940\u0902 \u0915\u0930 \u0938\u0915\u0924\u093e\u2014\u092f\u0939 \u0938\u094b\u091a \u0938\u0915\u0924\u093e \u0939\u0948, \u0938\u0940\u0916 \u0938\u0915\u0924\u093e \u0939\u0948, \u0914\u0930 \u0906\u092a\u0915\u0947 \u0938\u093e\u0925 \u092c\u093e\u0924\u091a\u0940\u0924 \u092d\u0940 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948!</p>"},{"location":"hi/chapters/chapter03/#32-machine-learning","title":"3.2 Machine Learning:","text":"<p>Machine Learning (ML) AI \u0915\u093e \u090f\u0915 \u0909\u092a\u0938\u092e\u0941\u091a\u094d\u091a\u092f \u0939\u0948 \u091c\u0939\u093e\u0901 \u092e\u0936\u0940\u0928\u0947\u0902 \u0921\u0947\u091f\u093e \u0938\u0947 \u0938\u0940\u0916\u0924\u0940 \u0939\u0948\u0902 \u0924\u093e\u0915\u093f \u0935\u0947 \u0938\u092e\u092f \u0915\u0947 \u0938\u093e\u0925 \u0905\u092a\u0928\u0940 \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u0928 \u0915\u094b \u092c\u0947\u0939\u0924\u0930 \u092c\u0928\u093e \u0938\u0915\u0947\u0902\u0964 \u0938\u094d\u092a\u0937\u094d\u091f \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u093e \u092a\u093e\u0932\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u092c\u091c\u093e\u092f, ML \u090f\u0932\u094d\u0917\u094b\u0930\u093f\u0926\u092e \u0921\u0947\u091f\u093e \u092e\u0947\u0902 \u092a\u0948\u091f\u0930\u094d\u0928 \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u091c\u094b \u0935\u0947 \u0938\u0940\u0916\u0924\u0947 \u0939\u0948\u0902, \u0909\u0938\u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u092d\u0935\u093f\u0937\u094d\u092f\u0935\u093e\u0923\u093f\u092f\u093e\u0901 \u092f\u093e \u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0926\u0948\u0928\u093f\u0915 \u091c\u0940\u0935\u0928 \u092e\u0947\u0902 ML \u0915\u0947 \u0909\u0926\u093e\u0939\u0930\u0923:     - Recommendation Systems: YouTube, Netflix, \u0914\u0930 Amazon \u091c\u0948\u0938\u0940 \u0935\u0947\u092c\u0938\u093e\u0907\u091f\u0947\u0902 \u0906\u092a\u0915\u0947 \u092a\u093f\u091b\u0932\u0947 \u0935\u094d\u092f\u0935\u0939\u093e\u0930 \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0935\u0940\u0921\u093f\u092f\u094b \u092f\u093e \u0909\u0924\u094d\u092a\u093e\u0926\u094b\u0902 \u0915\u0940 \u0938\u093f\u092b\u093e\u0930\u093f\u0936 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f ML \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0940 \u0939\u0948\u0902\u0964     - Spam Detection: ML \u0908\u092e\u0947\u0932 \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u094b\u0902 \u0915\u094b \u0905\u0935\u093e\u0902\u091b\u093f\u0924 \u0938\u094d\u092a\u0948\u092e \u0908\u092e\u0947\u0932 \u0915\u094b \u092b\u093c\u093f\u0932\u094d\u091f\u0930 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u093e \u0939\u0948\u0964     - Self-Driving Cars: ML \u0906\u0924\u094d\u092e-\u0921\u094d\u0930\u093e\u0907\u0935\u093f\u0902\u0917 \u0915\u093e\u0930\u094b\u0902 \u0915\u094b \u0935\u0938\u094d\u0924\u0941\u0913\u0902 \u0915\u094b \u092a\u0939\u091a\u093e\u0928\u0928\u0947 \u0914\u0930 \u0938\u0921\u093c\u0915 \u092a\u0930 \u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964  </p> <p>\u092f\u0939 \u0915\u0948\u0938\u0947 \u0915\u093e\u092e \u0915\u0930\u0924\u093e \u0939\u0948: ML \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u093e\u0901 \u092c\u0921\u093c\u0940 \u092e\u093e\u0924\u094d\u0930\u093e \u092e\u0947\u0902 \u0921\u0947\u091f\u093e \u0915\u094b \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930\u0928\u0947, \u092a\u0948\u091f\u0930\u094d\u0928 \u092a\u0939\u091a\u093e\u0928\u0928\u0947, \u0914\u0930 \u092d\u0935\u093f\u0937\u094d\u092f\u0935\u093e\u0923\u093f\u092f\u093e\u0901 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0932\u094d\u0917\u094b\u0930\u093f\u0926\u092e \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0940 \u0939\u0948\u0902\u0964 \u0909\u0926\u093e\u0939\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f, \u092f\u0926\u093f \u090f\u0915 ML \u090f\u0932\u094d\u0917\u094b\u0930\u093f\u0926\u092e \u0915\u094b \u0917\u094d\u0930\u093e\u0939\u0915 \u0915\u0940 \u0916\u0930\u0940\u0926\u093e\u0930\u0940 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0921\u0947\u091f\u093e \u0926\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u0924\u094b \u092f\u0939 \u092f\u0939 \u092d\u0935\u093f\u0937\u094d\u092f\u0935\u093e\u0923\u0940 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u0938\u0915\u094d\u0937\u092e \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948 \u0915\u093f \u090f\u0915 \u0917\u094d\u0930\u093e\u0939\u0915 \u0905\u0917\u0932\u0947 \u0915\u094c\u0928 \u0938\u0947 \u0909\u0924\u094d\u092a\u093e\u0926 \u0915\u094b \u0916\u0930\u0940\u0926\u0928\u0947 \u0915\u0940 \u0938\u0902\u092d\u093e\u0935\u0928\u093e \u0930\u0916\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter03/#33-natural-language-processing-nlp","title":"3.3 Natural Language Processing (NLP):","text":"<p>Natural Language Processing (NLP) AI \u0915\u0940 \u090f\u0915 \u0936\u093e\u0916\u093e \u0939\u0948 \u091c\u094b \u092e\u0936\u0940\u0928\u094b\u0902 \u0915\u094b \u092e\u093e\u0928\u0935 \u092d\u093e\u0937\u093e \u0915\u094b \u0938\u092e\u091d\u0928\u0947, \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e \u0915\u0930\u0928\u0947, \u0914\u0930 \u092a\u094d\u0930\u0924\u093f\u0915\u094d\u0930\u093f\u092f\u093e \u0926\u0947\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0928\u0947 \u092a\u0930 \u0927\u094d\u092f\u093e\u0928 \u0915\u0947\u0902\u0926\u094d\u0930\u093f\u0924 \u0915\u0930\u0924\u0940 \u0939\u0948\u0964 NLP \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0915\u094b \u092e\u093e\u0928\u0935 \u0915\u0940 \u0924\u0930\u0939 \u092c\u094b\u0932\u0947 \u0917\u090f \u092f\u093e \u0932\u093f\u0916\u0947 \u0917\u090f \u092d\u093e\u0937\u093e \u0915\u094b \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u0938\u0915\u094d\u0937\u092e \u092c\u0928\u093e\u0924\u093e \u0939\u0948\u0964</p> <p>NLP \u0915\u0947 \u092e\u0941\u0916\u094d\u092f \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917:     - Voice Assistants: Alexa, Siri, \u0914\u0930 Google Assistant \u0906\u092a\u0915\u0947 \u0906\u0926\u0947\u0936\u094b\u0902 \u0915\u094b \u0938\u092e\u091d\u0928\u0947 \u0914\u0930 \u0909\u092a\u092f\u0941\u0915\u094d\u0924 \u0930\u0942\u092a \u0938\u0947 \u092a\u094d\u0930\u0924\u093f\u0915\u094d\u0930\u093f\u092f\u093e \u0926\u0947\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f NLP \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964     - Chatbots: \u0915\u0908 \u0915\u0902\u092a\u0928\u093f\u092f\u093e\u0901 \u0917\u094d\u0930\u093e\u0939\u0915 \u0915\u0947 \u092a\u094d\u0930\u0936\u094d\u0928\u094b\u0902 \u0915\u093e \u0909\u0924\u094d\u0924\u0930 \u0926\u0947\u0928\u0947 \u092f\u093e \u0911\u0928\u0932\u093e\u0907\u0928 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u092e\u0947\u0902 \u0938\u0939\u093e\u092f\u0924\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f NLP-\u0938\u0902\u091a\u093e\u0932\u093f\u0924 \u091a\u0948\u091f\u092c\u0949\u091f\u094d\u0938 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0940 \u0939\u0948\u0902\u0964     - Translation Tools: Google Translate \u092a\u093e\u0920 \u0915\u094b \u090f\u0915 \u092d\u093e\u0937\u093e \u0938\u0947 \u0926\u0942\u0938\u0930\u0940 \u092d\u093e\u0937\u093e \u092e\u0947\u0902 \u0905\u0928\u0941\u0935\u093e\u0926 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f NLP \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u093e \u0939\u0948\u0964  </p> <p>NLP \u092e\u0947\u0902 \u091a\u0941\u0928\u094c\u0924\u093f\u092f\u093e\u0901: \u092e\u093e\u0928\u0935 \u092d\u093e\u0937\u093e \u091c\u091f\u093f\u0932 \u0939\u0948, \u091c\u093f\u0938\u092e\u0947\u0902 \u0938\u094d\u0932\u0948\u0902\u0917, \u092e\u0941\u0939\u093e\u0935\u0930\u0947, \u0914\u0930 \u0938\u0902\u0926\u0930\u094d\u092d \u0936\u093e\u092e\u093f\u0932 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u092e\u0936\u0940\u0928\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938\u0947 \u092a\u0942\u0930\u0940 \u0924\u0930\u0939 \u0938\u0947 \u0938\u092e\u091d\u0928\u093e \u0915\u0920\u093f\u0928 \u092c\u0928\u093e \u0926\u0947\u0924\u0947 \u0939\u0948\u0902\u0964 \u0939\u093e\u0932\u093e\u0902\u0915\u093f, NLP \u092e\u0947\u0902 \u092a\u094d\u0930\u0917\u0924\u093f \u0928\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0915\u094b \u092c\u093e\u0924\u091a\u0940\u0924 \u0915\u0930\u0928\u0947 \u0914\u0930 \u092a\u093e\u0920 \u0915\u094b \u092a\u0939\u0932\u0947 \u0938\u0947 \u092c\u0947\u0939\u0924\u0930 \u0938\u092e\u091d\u0928\u0947 \u092e\u0947\u0902 \u0938\u0915\u094d\u0937\u092e \u092c\u0928\u093e \u0926\u093f\u092f\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter03/#34-robotics","title":"3.4 Robotics:","text":"<p>Robotics \u0935\u0939 \u0924\u0915\u0928\u0940\u0915\u0940 \u0915\u094d\u0937\u0947\u0924\u094d\u0930 \u0939\u0948 \u091c\u094b \u0930\u094b\u092c\u094b\u091f\u094b\u0902 \u0915\u0947 \u0921\u093f\u091c\u093c\u093e\u0907\u0928 \u0914\u0930 \u0928\u093f\u0930\u094d\u092e\u093e\u0923 \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u0948\u0964 \u0930\u094b\u092c\u094b\u091f \u0935\u0947 \u092e\u0936\u0940\u0928\u0947\u0902 \u0939\u0948\u0902 \u091c\u094b \u091c\u091f\u093f\u0932 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u092f\u093e \u092e\u093e\u0928\u0935 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u0928 \u0915\u0947 \u0924\u0939\u0924 \u0915\u0930 \u0938\u0915\u0924\u0940 \u0939\u0948\u0902\u0964</p> <p>\u0930\u094b\u092c\u094b\u091f\u094b\u0902 \u0915\u0947 \u0938\u093e\u092e\u093e\u0928\u094d\u092f \u0909\u092a\u092f\u094b\u0917:     - Manufacturing: \u0930\u094b\u092c\u094b\u091f\u094b\u0902 \u0915\u093e \u0935\u094d\u092f\u093e\u092a\u0915 \u0909\u092a\u092f\u094b\u0917 \u0915\u093e\u0930\u094b\u0902 \u0915\u094b \u0905\u0938\u0947\u0902\u092c\u0932 \u0915\u0930\u0928\u0947, \u0938\u093e\u092e\u093e\u0928 \u0915\u094b \u092a\u0948\u0915 \u0915\u0930\u0928\u0947, \u0914\u0930 \u0938\u091f\u0940\u0915\u0924\u093e \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0935\u093e\u0932\u0947 \u0926\u094b\u0939\u0930\u093e\u0928\u0947 \u0935\u093e\u0932\u0947 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0938\u0902\u092d\u093e\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093e\u0930\u0916\u093e\u0928\u094b\u0902 \u092e\u0947\u0902 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     - Healthcare: \u0938\u0930\u094d\u091c\u093f\u0915\u0932 \u0930\u094b\u092c\u094b\u091f \u0921\u0949\u0915\u094d\u091f\u0930\u094b\u0902 \u0915\u094b \u0905\u0927\u093f\u0915 \u0938\u091f\u0940\u0915\u0924\u093e \u0915\u0947 \u0938\u093e\u0925 \u0928\u093e\u091c\u0941\u0915 \u0911\u092a\u0930\u0947\u0936\u0928 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u0938\u0939\u093e\u092f\u0924\u093e \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964     - Exploration: Mars Rover \u091c\u0948\u0938\u0947 \u0930\u094b\u092c\u094b\u091f \u0909\u0928 \u0915\u094d\u0937\u0947\u0924\u094d\u0930\u094b\u0902 \u0915\u093e \u0905\u0928\u094d\u0935\u0947\u0937\u0923 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u092e\u0928\u0941\u0937\u094d\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u092c\u0939\u0941\u0924 \u0916\u0924\u0930\u0928\u093e\u0915 \u092f\u093e \u0926\u0942\u0930 \u0939\u0948\u0902\u0964  </p> <p>\u0930\u094b\u092c\u094b\u091f\u093f\u0915\u094d\u0938 \u0915\u093e \u092d\u0935\u093f\u0937\u094d\u092f: \u091c\u0948\u0938\u0947-\u091c\u0948\u0938\u0947 \u0924\u0915\u0928\u0940\u0915 \u092e\u0947\u0902 \u092a\u094d\u0930\u0917\u0924\u093f \u0939\u094b\u0924\u0940 \u0939\u0948, \u0930\u094b\u092c\u094b\u091f \u0905\u0927\u093f\u0915 \u091c\u091f\u093f\u0932 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0935\u093f\u0915\u0938\u093f\u0924 \u0915\u093f\u090f \u091c\u093e \u0930\u0939\u0947 \u0939\u0948\u0902, \u091c\u093f\u0938\u092e\u0947\u0902 \u0926\u0948\u0928\u093f\u0915 \u091c\u0940\u0935\u0928 \u092e\u0947\u0902 \u092e\u0928\u0941\u0937\u094d\u092f\u094b\u0902 \u0915\u0947 \u0938\u093e\u0925 \u092c\u093e\u0924\u091a\u0940\u0924 \u0915\u0930\u0928\u093e \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0964 \u0909\u0926\u093e\u0939\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f, \u0918\u0930\u0947\u0932\u0942 \u0930\u094b\u092c\u094b\u091f \u091c\u0932\u094d\u0926 \u0939\u0940 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u092e\u0947\u0902 \u0938\u0939\u093e\u092f\u0924\u093e \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u092f\u093e \u092f\u0939\u093e\u0902 \u0924\u0915 \u0915\u093f \u092c\u0941\u091c\u0941\u0930\u094d\u0917\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0938\u0902\u0917\u0924\u093f \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter03/#35-big-data","title":"3.5 Big Data:","text":"<p>Big Data \u0909\u0938 \u0935\u093f\u0936\u093e\u0932 \u092e\u093e\u0924\u094d\u0930\u093e \u0915\u0947 \u0921\u0947\u091f\u093e \u0915\u094b \u0938\u0902\u0926\u0930\u094d\u092d\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u094b \u0939\u0930 \u0926\u093f\u0928 \u0938\u094d\u092e\u093e\u0930\u094d\u091f\u092b\u094b\u0928, \u0938\u0947\u0902\u0938\u0930, \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e, \u0914\u0930 \u0911\u0928\u0932\u093e\u0907\u0928 \u0932\u0947\u0928\u0926\u0947\u0928 \u091c\u0948\u0938\u0947 \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u0926\u094d\u0935\u093e\u0930\u093e \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0939\u094b\u0924\u093e \u0939\u0948\u0964 \u092f\u0939 \u0921\u0947\u091f\u093e \u0907\u0924\u0928\u093e \u092c\u0921\u093c\u093e \u0914\u0930 \u091c\u091f\u093f\u0932 \u0939\u0948 \u0915\u093f \u092a\u093e\u0930\u0902\u092a\u0930\u093f\u0915 \u0921\u0947\u091f\u093e-\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u093f\u0902\u0917 \u0909\u092a\u0915\u0930\u0923 \u0907\u0938\u0947 \u0938\u0902\u092d\u093e\u0932 \u0928\u0939\u0940\u0902 \u0938\u0915\u0924\u0947\u0964</p> <p>Big Data \u0915\u094b Vs \u0926\u094d\u0935\u093e\u0930\u093e \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e </p> <p>Big Data \u0915\u094b \u0905\u0915\u094d\u0938\u0930 \"Vs\" \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u091c\u093e\u0928\u0947 \u091c\u093e\u0928\u0947 \u0935\u093e\u0932\u0947 \u0906\u092f\u093e\u092e\u094b\u0902 \u0915\u0947 \u090f\u0915 \u0938\u0947\u091f \u0926\u094d\u0935\u093e\u0930\u093e \u0935\u0930\u094d\u0923\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u092f\u0947 \u0935\u093f\u0936\u0947\u0937\u0924\u093e\u090f\u0901 Big Data \u0915\u0947 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u092a\u0939\u0932\u0941\u0913\u0902 \u0914\u0930 \u091c\u091f\u093f\u0932\u0924\u093e\u0913\u0902 \u0915\u093e \u0935\u0930\u094d\u0923\u0928 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u0940 \u0939\u0948\u0902\u0964 \u092f\u0939\u093e\u0901 Big Data \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u092e\u0941\u0916\u094d\u092f Vs \u0939\u0948\u0902:</p> <ul> <li> <p>1. Volume </p> <ul> <li>Definition: \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0914\u0930 \u090f\u0915\u0924\u094d\u0930\u093f\u0924 \u0921\u0947\u091f\u093e \u0915\u0940 \u092e\u093e\u0924\u094d\u0930\u093e \u0915\u094b \u0938\u0902\u0926\u0930\u094d\u092d\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 Big Data \u092e\u0947\u0902 \u0910\u0938\u0940 \u0935\u093f\u0936\u093e\u0932 \u092e\u093e\u0924\u094d\u0930\u093e \u0915\u093e \u0921\u0947\u091f\u093e \u0939\u094b\u0924\u093e \u0939\u0948 \u091c\u093f\u0938\u0947 \u092a\u093e\u0930\u0902\u092a\u0930\u093f\u0915 \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u093f\u0902\u0917 \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0915\u0941\u0936\u0932\u0924\u093e \u0938\u0947 \u0938\u0902\u092d\u093e\u0932 \u0928\u0939\u0940\u0902 \u0938\u0915\u0924\u093e\u0964  </li> <li>Example: Google \u0914\u0930 Facebook \u091c\u0948\u0938\u0940 \u0915\u0902\u092a\u0928\u093f\u092f\u093e\u0901 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0907\u0902\u091f\u0930\u090f\u0915\u094d\u0936\u0928, \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e \u092a\u094b\u0938\u094d\u091f, \u0914\u0930 \u0916\u094b\u091c \u0915\u094d\u0935\u0947\u0930\u0940 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0939\u0930 \u0926\u093f\u0928 \u092a\u0947\u091f\u093e\u092c\u093e\u0907\u091f\u094d\u0938 (1 \u092a\u0947\u091f\u093e\u092c\u093e\u0907\u091f = 1,024 \u091f\u0947\u0930\u093e\u092c\u093e\u0907\u091f\u094d\u0938) \u0921\u0947\u091f\u093e \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0915\u0930\u0924\u0940 \u0939\u0948\u0902\u0964  </li> </ul> </li> <li> <p>2. Velocity </p> <ul> <li>Definition: \u0909\u0938 \u0917\u0924\u093f \u0915\u093e \u0935\u0930\u094d\u0923\u0928 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u093f\u0938 \u092a\u0930 \u0921\u0947\u091f\u093e \u0909\u0924\u094d\u092a\u0928\u094d\u0928, \u092a\u094d\u0930\u094b\u0938\u0947\u0938, \u0914\u0930 \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u0906\u091c \u0915\u0940 \u0921\u093f\u091c\u093f\u091f\u0932 \u0926\u0941\u0928\u093f\u092f\u093e \u092e\u0947\u0902, \u0921\u0947\u091f\u093e \u0915\u094b \u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u0938\u092e\u092f \u092f\u093e \u0909\u0938\u0915\u0947 \u0915\u0930\u0940\u092c \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u094b\u0924\u0940 \u0939\u0948\u0964  </li> <li>Example: \u0935\u093f\u0924\u094d\u0924\u0940\u092f \u091f\u094d\u0930\u0947\u0921\u093f\u0902\u0917 \u092a\u094d\u0932\u0947\u091f\u092b\u093c\u0949\u0930\u094d\u092e \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092c\u093e\u091c\u093e\u0930 \u0915\u0940 \u0938\u094d\u0925\u093f\u0924\u093f \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u091f\u094d\u0930\u0947\u0921\u093f\u0902\u0917 \u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092e\u093f\u0932\u093f\u0938\u0947\u0915\u0902\u0921 \u092e\u0947\u0902 \u0938\u094d\u091f\u0949\u0915 \u092e\u093e\u0930\u094d\u0915\u0947\u091f \u0921\u0947\u091f\u093e \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964  </li> </ul> </li> <li> <p>3. Variety </p> <ul> <li>Definition: \u0909\u0938 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u092a\u094d\u0930\u0915\u093e\u0930 \u0914\u0930 \u092a\u094d\u0930\u093e\u0930\u0942\u092a \u0915\u0947 \u0921\u0947\u091f\u093e \u0915\u094b \u0938\u0902\u0926\u0930\u094d\u092d\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u094b \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964 Big Data \u092e\u0947\u0902 \u0938\u0902\u0930\u091a\u093f\u0924 \u0921\u0947\u091f\u093e (\u091c\u0948\u0938\u0947 \u0921\u0947\u091f\u093e\u092c\u0947\u0938), \u0905\u0930\u094d\u0927-\u0938\u0902\u0930\u091a\u093f\u0924 \u0921\u0947\u091f\u093e (\u091c\u0948\u0938\u0947 XML \u092f\u093e JSON), \u0914\u0930 \u0905\u0938\u0902\u0930\u091a\u093f\u0924 \u0921\u0947\u091f\u093e (\u091c\u0948\u0938\u0947 \u092a\u093e\u0920, \u091b\u0935\u093f\u092f\u093e\u0901, \u0914\u0930 \u0935\u0940\u0921\u093f\u092f\u094b) \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902\u0964  </li> <li>Example: \u090f\u0915 \u0938\u0902\u0917\u0920\u0928 \u090f\u0915\u0924\u094d\u0930\u093f\u0924 \u0917\u094d\u0930\u093e\u0939\u0915 \u0921\u0947\u091f\u093e \u0938\u0930\u094d\u0935\u0947\u0915\u094d\u0937\u0923\u094b\u0902 (\u0938\u0902\u0930\u091a\u093f\u0924), \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e \u0907\u0902\u091f\u0930\u090f\u0915\u094d\u0936\u0928 (\u0905\u0938\u0902\u0930\u091a\u093f\u0924), \u0914\u0930 \u0932\u0947\u0928-\u0926\u0947\u0928 \u0932\u0949\u0917 (\u0905\u0930\u094d\u0927-\u0938\u0902\u0930\u091a\u093f\u0924) \u0938\u0947 \u090f\u0915\u0924\u094d\u0930\u093f\u0924 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948, \u0938\u092d\u0940 \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915\u0940\u0915\u0943\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u094b\u0924\u0940 \u0939\u0948\u0964  </li> </ul> </li> <li> <p>4. Veracity </p> <ul> <li>Definition: \u0921\u0947\u091f\u093e \u0915\u0940 \u0917\u0941\u0923\u0935\u0924\u094d\u0924\u093e \u0914\u0930 \u0938\u091f\u0940\u0915\u0924\u093e \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u0948\u0964 \u0938\u092d\u0940 \u0921\u0947\u091f\u093e \u0935\u093f\u0936\u094d\u0935\u0938\u0928\u0940\u092f \u0928\u0939\u0940\u0902 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 \u092f\u0939 \u0906\u0935\u0936\u094d\u092f\u0915 \u0939\u0948 \u0915\u093f \u0921\u0947\u091f\u093e \u0938\u094d\u0930\u094b\u0924\u094b\u0902 \u0915\u0940 \u0935\u093f\u0936\u094d\u0935\u0938\u0928\u0940\u092f\u0924\u093e \u0914\u0930 \u0935\u0948\u0927\u0924\u093e \u0915\u093e \u092e\u0942\u0932\u094d\u092f\u093e\u0902\u0915\u0928 \u0915\u093f\u092f\u093e \u091c\u093e\u090f\u0964  </li> <li>Example: IoT \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u092e\u0947\u0902 \u0938\u0947\u0902\u0938\u0930 \u0938\u0947 \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0921\u0947\u091f\u093e \u092e\u0947\u0902 \u0924\u094d\u0930\u0941\u091f\u093f\u092f\u093e\u0901 \u092f\u093e \u0936\u094b\u0930 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948, \u0907\u0938\u0932\u093f\u090f \u0921\u0947\u091f\u093e \u0915\u0940 \u0938\u092b\u093e\u0908 \u0914\u0930 \u092a\u0942\u0930\u094d\u0935-\u092a\u094d\u0930\u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u094b\u0924\u0940 \u0939\u0948\u0964  </li> </ul> </li> <li> <p>5. Value </p> <ul> <li>Definition: Big Data \u0915\u093e \u0938\u092c\u0938\u0947 \u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u092a\u0939\u0932\u0942 \u092f\u0939 \u0939\u0948 \u0915\u093f \u0921\u0947\u091f\u093e \u092e\u0947\u0902 \u0905\u0902\u0924\u0930\u094d\u0928\u093f\u0939\u093f\u0924 \u092e\u0942\u0932\u094d\u092f \u0915\u094b \u0928\u093f\u0915\u093e\u0932\u0928\u093e \u0915\u093f\u0924\u0928\u093e \u0909\u092a\u092f\u094b\u0917\u0940 \u0939\u0948\u0964 \u0938\u0902\u0917\u0920\u0928\u094b\u0902 \u0915\u094b \u0921\u0947\u091f\u093e \u0938\u0947 \u0915\u093e\u0930\u094d\u0930\u0935\u093e\u0908 \u092f\u094b\u0917\u094d\u092f \u0905\u0902\u0924\u0930\u094d\u0926\u0943\u0937\u094d\u091f\u093f \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u094b\u0924\u0940 \u0939\u0948\u0964  </li> <li>Example: \u0916\u0941\u0926\u0930\u093e \u0935\u093f\u0915\u094d\u0930\u0947\u0924\u093e Big Data \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0915\u0947 \u0917\u094d\u0930\u093e\u0939\u0915 \u0915\u0947 \u0916\u0930\u0940\u0926\u093e\u0930\u0940 \u0915\u0947 \u092a\u0948\u091f\u0930\u094d\u0928 \u0915\u094b \u0938\u092e\u091d \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0907\u0938 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u092c\u093f\u0915\u094d\u0930\u0940 \u092c\u0922\u093c\u093e\u0928\u0947 \u0914\u0930 \u092c\u0947\u0939\u0924\u0930 \u0935\u093f\u092a\u0923\u0928 \u0930\u0923\u0928\u0940\u0924\u093f\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964  </li> </ul> </li> </ul> <p>\u092c\u093f\u0917 \u0921\u0947\u091f\u093e \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0939\u093e\u0902 \u0939\u094b\u0924\u093e \u0939\u0948:     - \u092e\u093e\u0930\u094d\u0915\u0947\u091f\u093f\u0902\u0917: \u0915\u0902\u092a\u0928\u093f\u092f\u093e\u0901 \u0917\u094d\u0930\u093e\u0939\u0915 \u0935\u094d\u092f\u0935\u0939\u093e\u0930 \u0914\u0930 \u092a\u094d\u0930\u093e\u0925\u092e\u093f\u0915\u0924\u093e\u0913\u0902 \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0924\u0940 \u0939\u0948\u0902 \u0924\u093e\u0915\u093f \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u0935\u093f\u091c\u094d\u091e\u093e\u092a\u0928 \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930 \u0938\u0915\u0947\u0902\u0964     - \u0938\u094d\u0935\u093e\u0938\u094d\u0925\u094d\u092f \u0938\u0947\u0935\u093e: \u0905\u0938\u094d\u092a\u0924\u093e\u0932 \u092c\u093f\u0917 \u0921\u0947\u091f\u093e \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u092e\u0930\u0940\u091c \u0921\u0947\u091f\u093e \u0915\u094b \u091f\u094d\u0930\u0948\u0915 \u0915\u0930\u0928\u0947 \u0914\u0930 \u0930\u094b\u0917 \u092b\u0948\u0932\u0928\u0947 \u0915\u0940 \u092d\u0935\u093f\u0937\u094d\u092f\u0935\u093e\u0923\u0940 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964     - \u0935\u093f\u0924\u094d\u0924: \u092c\u093f\u0917 \u0921\u0947\u091f\u093e \u092c\u0948\u0902\u0915\u094b\u0902 \u0915\u094b \u0927\u094b\u0916\u093e\u0927\u0921\u093c\u0940 \u0932\u0947\u0928\u0926\u0947\u0928 \u0915\u093e \u092a\u0924\u093e \u0932\u0917\u093e\u0928\u0947 \u0914\u0930 \u092c\u093e\u091c\u093e\u0930 \u0915\u0947 \u0930\u0941\u091d\u093e\u0928\u094b\u0902 \u0915\u0940 \u092d\u0935\u093f\u0937\u094d\u092f\u0935\u093e\u0923\u0940 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u093e \u0939\u0948\u0964  </p> <p>\u0930\u094b\u091a\u0915 \u0924\u0925\u094d\u092f: \u0939\u0930 \u092e\u093f\u0928\u091f, \u092e\u093e\u0928\u0935 2.5 \u0915\u094d\u0935\u093f\u0902\u091f\u093f\u0932\u093f\u092f\u0928 \u092c\u093e\u0907\u091f\u094d\u0938 \u0921\u0947\u091f\u093e \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902! \u092f\u0939 \u0921\u0947\u091f\u093e \u0907\u0924\u0928\u0940 \u092e\u093e\u0924\u094d\u0930\u093e \u092e\u0947\u0902 \u0939\u0948 \u0915\u093f \u0906\u092a \u0907\u0938\u0915\u0940 \u0915\u0932\u094d\u092a\u0928\u093e \u092d\u0940 \u0928\u0939\u0940\u0902 \u0915\u0930 \u0938\u0915\u0924\u0947\u0964</p>"},{"location":"hi/chapters/chapter03/#36-iot","title":"3.6 \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0911\u092b \u0925\u093f\u0902\u0917\u094d\u0938 (IoT):","text":"<p>\u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0911\u092b \u0925\u093f\u0902\u0917\u094d\u0938 (IoT) \u090f\u0915 \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u0939\u0948 \u091c\u093f\u0938\u092e\u0947\u0902 \u092d\u094c\u0924\u093f\u0915 \u0909\u092a\u0915\u0930\u0923 \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0938\u0947 \u091c\u0941\u0921\u093c\u0947 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902, \u091c\u093f\u0938\u0938\u0947 \u0909\u0928\u094d\u0939\u0947\u0902 \u0921\u0947\u091f\u093e \u0907\u0915\u091f\u094d\u0920\u093e \u0915\u0930\u0928\u0947, \u0938\u093e\u091d\u093e \u0915\u0930\u0928\u0947 \u0914\u0930 \u0906\u0926\u093e\u0928-\u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u092e\u093f\u0932\u0924\u0940 \u0939\u0948\u0964 \u092f\u0947 \u0909\u092a\u0915\u0930\u0923 \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0939\u094b\u092e \u090f\u092a\u094d\u0932\u093e\u092f\u0902\u0938\u0947\u091c \u0938\u0947 \u0932\u0947\u0915\u0930 \u0914\u0926\u094d\u092f\u094b\u0917\u093f\u0915 \u0938\u0947\u0902\u0938\u0930 \u0924\u0915 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>IoT \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u0915\u0947 \u0909\u0926\u093e\u0939\u0930\u0923:     - \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0939\u094b\u092e\u094d\u0938: \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0938\u094d\u092a\u0940\u0915\u0930, \u0925\u0930\u094d\u092e\u094b\u0938\u094d\u091f\u0948\u091f\u094d\u0938, \u0914\u0930 \u0938\u0941\u0930\u0915\u094d\u0937\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u093e\u0901 \u091c\u0948\u0938\u0947 \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u0915\u094b \u0910\u092a\u094d\u0938 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0926\u0942\u0930 \u0938\u0947 \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964     - \u0938\u094d\u0935\u093e\u0938\u094d\u0925\u094d\u092f \u0938\u0947\u0935\u093e: \u092a\u0939\u0928\u0928\u0947 \u092f\u094b\u0917\u094d\u092f \u0909\u092a\u0915\u0930\u0923 \u091c\u0948\u0938\u0947 \u092b\u093f\u091f\u0928\u0947\u0938 \u091f\u094d\u0930\u0948\u0915\u0930 \u0906\u092a\u0915\u0947 \u0938\u094d\u0935\u093e\u0938\u094d\u0925\u094d\u092f \u0921\u0947\u091f\u093e \u0915\u0940 \u0928\u093f\u0917\u0930\u093e\u0928\u0940 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u091c\u0948\u0938\u0947 \u0939\u0943\u0926\u092f \u0917\u0924\u093f \u0914\u0930 \u0928\u0940\u0902\u0926 \u0915\u0947 \u092a\u0948\u091f\u0930\u094d\u0928\u0964     - \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0936\u0939\u0930: IoT \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u092f\u093e\u0924\u093e\u092f\u093e\u0924 \u0915\u0940 \u0928\u093f\u0917\u0930\u093e\u0928\u0940 \u0915\u0930\u0928\u0947, \u092a\u094d\u0930\u0926\u0942\u0937\u0923 \u0915\u094b \u0915\u092e \u0915\u0930\u0928\u0947, \u0914\u0930 \u0936\u0939\u0930\u0940 \u0915\u094d\u0937\u0947\u0924\u094d\u0930\u094b\u0902 \u092e\u0947\u0902 \u090a\u0930\u094d\u091c\u093e \u0916\u092a\u0924 \u0915\u094b \u0905\u0928\u0941\u0915\u0942\u0932\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964  </p> <p>IoT \u0915\u093e \u092a\u094d\u0930\u092d\u093e\u0935: IoT \u0930\u094b\u091c\u093c\u092e\u0930\u094d\u0930\u093e \u0915\u0940 \u091c\u093f\u0902\u0926\u0917\u0940 \u0915\u094b \u0905\u0927\u093f\u0915 \u0938\u0941\u0935\u093f\u0927\u093e\u091c\u0928\u0915 \u0914\u0930 \u0915\u0941\u0936\u0932 \u092c\u0928\u093e \u0930\u0939\u093e \u0939\u0948\u0964 \u092d\u0935\u093f\u0937\u094d\u092f \u092e\u0947\u0902, \u0930\u0947\u092b\u094d\u0930\u093f\u091c\u0930\u0947\u091f\u0930 \u0938\u0947 \u0932\u0947\u0915\u0930 \u0938\u094d\u091f\u094d\u0930\u0940\u091f \u0932\u093e\u0907\u091f\u094d\u0938 \u0924\u0915, \u0914\u0930 \u092d\u0940 \u0905\u0927\u093f\u0915 \u0909\u092a\u0915\u0930\u0923 \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0938\u0947 \u091c\u0941\u0921\u093c\u0947 \u0939\u094b\u0902\u0917\u0947, \u091c\u093f\u0938\u0938\u0947 \u090f\u0915 \u0905\u0927\u093f\u0915 \u0906\u092a\u0938 \u092e\u0947\u0902 \u091c\u0941\u0921\u093c\u0947 \u0939\u0941\u090f \u0935\u093f\u0936\u094d\u0935 \u0915\u093e \u0928\u093f\u0930\u094d\u092e\u093e\u0923 \u0939\u094b\u0917\u093e\u0964</p>"},{"location":"hi/chapters/chapter03/#37","title":"3.7 \u0938\u0947\u0902\u0938\u0930:","text":"<p>\u0938\u0947\u0902\u0938\u0930 \u0935\u0947 \u0909\u092a\u0915\u0930\u0923 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u0935\u093e\u0924\u093e\u0935\u0930\u0923 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928 \u0915\u093e \u092a\u0924\u093e \u0932\u0917\u093e\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0915\u094b \u0905\u0928\u094d\u092f \u0907\u0932\u0947\u0915\u094d\u091f\u094d\u0930\u0949\u0928\u093f\u0915 \u0938\u093f\u0938\u094d\u091f\u092e\u094b\u0902 \u0915\u094b \u092d\u0947\u091c\u0924\u0947 \u0939\u0948\u0902\u0964 \u0938\u0947\u0902\u0938\u0930 IoT \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u0914\u0930 \u0906\u0927\u0941\u0928\u093f\u0915 \u0924\u0915\u0928\u0940\u0915 \u0915\u0947 \u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0918\u091f\u0915 \u0939\u0948\u0902\u0964</p> <p>\u0938\u0947\u0902\u0938\u0930 \u0915\u0947 \u092a\u094d\u0930\u0915\u093e\u0930:     - \u0924\u093e\u092a\u092e\u093e\u0928 \u0938\u0947\u0902\u0938\u0930: \u092f\u0947 \u0924\u093e\u092a\u092e\u093e\u0928 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928 \u0915\u094b \u092e\u093e\u092a\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0925\u0930\u094d\u092e\u094b\u0938\u094d\u091f\u0948\u091f\u094d\u0938 \u092e\u0947\u0902 \u0924\u093e\u092a\u092e\u093e\u0928 \u0915\u094b \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u090f \u091c\u093e\u0924\u0947 \u0939\u0948\u0902\u0964     - \u092e\u094b\u0936\u0928 \u0938\u0947\u0902\u0938\u0930: \u0938\u0941\u0930\u0915\u094d\u0937\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u094b\u0902 \u092e\u0947\u0902 \u0938\u093e\u092e\u093e\u0928\u094d\u092f\u0924\u0903 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u090f \u091c\u093e\u0924\u0947 \u0939\u0948\u0902 \u0924\u093e\u0915\u093f \u0917\u0924\u093f \u0915\u093e \u092a\u0924\u093e \u0932\u0917\u093e\u092f\u093e \u091c\u093e \u0938\u0915\u0947\u0964     - \u092c\u093e\u092f\u094b\u092e\u0947\u091f\u094d\u0930\u093f\u0915 \u0938\u0947\u0902\u0938\u0930: \u092f\u0947 \u0936\u093e\u0930\u0940\u0930\u093f\u0915 \u0935\u093f\u0936\u0947\u0937\u0924\u093e\u0913\u0902 \u091c\u0948\u0938\u0947 \u0939\u0943\u0926\u092f \u0917\u0924\u093f \u0915\u094b \u092e\u093e\u092a\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 \u0905\u0915\u094d\u0938\u0930 \u092b\u093f\u091f\u0928\u0947\u0938 \u091f\u094d\u0930\u0948\u0915\u0930 \u092f\u093e \u0938\u094d\u092e\u093e\u0930\u094d\u091f\u0935\u0949\u091a \u092e\u0947\u0902 \u092a\u093e\u090f \u091c\u093e\u0924\u0947 \u0939\u0948\u0902\u0964  </p> <p>\u0930\u094b\u091a\u0915 \u0924\u0925\u094d\u092f: \u0906\u092a\u0915\u093e \u0938\u094d\u092e\u093e\u0930\u094d\u091f\u092b\u094b\u0928 \u0938\u0947\u0902\u0938\u0930 \u0938\u0947 \u092d\u0930\u093e \u0939\u0941\u0906 \u0939\u0948! \u0907\u0938\u092e\u0947\u0902 \u090f\u0915 \u090f\u0915\u094d\u0938\u0940\u0932\u0930\u094b\u092e\u0940\u091f\u0930 (\u091c\u094b \u0917\u0924\u093f \u0915\u093e \u092a\u0924\u093e \u0932\u0917\u093e\u0924\u093e \u0939\u0948), \u090f\u0915 \u092a\u094d\u0930\u0949\u0915\u094d\u0938\u093f\u092e\u093f\u091f\u0940 \u0938\u0947\u0902\u0938\u0930 (\u091c\u094b \u091c\u092c \u0906\u092a \u0907\u0938\u0947 \u0905\u092a\u0928\u0947 \u0915\u093e\u0928 \u0915\u0947 \u092a\u093e\u0938 \u0930\u0916\u0924\u0947 \u0939\u0948\u0902 \u0924\u094b \u0938\u094d\u0915\u094d\u0930\u0940\u0928 \u092c\u0902\u0926 \u0915\u0930 \u0926\u0947\u0924\u093e \u0939\u0948), \u0914\u0930 \u0915\u0908 \u0905\u0928\u094d\u092f \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter03/#38","title":"3.8 \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0936\u0939\u0930:","text":"<p>\u090f\u0915 \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0938\u093f\u091f\u0940 \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940, \u0935\u093f\u0936\u0947\u0937 \u0930\u0942\u092a \u0938\u0947 IoT \u0914\u0930 \u0938\u0947\u0902\u0938\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u0902\u0938\u093e\u0927\u0928\u094b\u0902 \u0915\u093e \u0915\u0941\u0936\u0932\u0924\u093e\u092a\u0942\u0930\u094d\u0935\u0915 \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0915\u0930\u0924\u0940 \u0939\u0948 \u0914\u0930 \u0905\u092a\u0928\u0947 \u0928\u093e\u0917\u0930\u093f\u0915\u094b\u0902 \u0915\u0947 \u091c\u0940\u0935\u0928 \u0915\u0940 \u0917\u0941\u0923\u0935\u0924\u094d\u0924\u093e \u0915\u094b \u0938\u0941\u0927\u093e\u0930\u0924\u0940 \u0939\u0948\u0964 \u0938\u0947\u0902\u0938\u0930 \u0914\u0930 \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u0938\u0947 \u0921\u0947\u091f\u093e \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u092f\u093e\u0924\u093e\u092f\u093e\u0924 \u092a\u094d\u0930\u092c\u0902\u0927\u0928, \u0935\u093e\u092f\u0941 \u0917\u0941\u0923\u0935\u0924\u094d\u0924\u093e \u0915\u0940 \u0928\u093f\u0917\u0930\u093e\u0928\u0940, \u0914\u0930 \u0938\u093e\u0930\u094d\u0935\u091c\u0928\u093f\u0915 \u0938\u0941\u0930\u0915\u094d\u0937\u093e \u0915\u094b \u092c\u0922\u093c\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> <p>\u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0938\u093f\u091f\u0940 \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u0915\u0947 \u0909\u0926\u093e\u0939\u0930\u0923:     - \u092f\u093e\u0924\u093e\u092f\u093e\u0924 \u092a\u094d\u0930\u092c\u0902\u0927\u0928: \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u091f\u094d\u0930\u0948\u092b\u093f\u0915 \u0932\u093e\u0907\u091f\u094d\u0938 \u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u0938\u092e\u092f \u092e\u0947\u0902 \u0938\u092e\u093e\u092f\u094b\u091c\u093f\u0924 \u0939\u094b\u0924\u0940 \u0939\u0948\u0902 \u0924\u093e\u0915\u093f \u091c\u093e\u092e \u0915\u094b \u0915\u092e \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0947\u0964     - \u090a\u0930\u094d\u091c\u093e \u0926\u0915\u094d\u0937\u0924\u093e: \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u092e\u0940\u091f\u0930 \u090a\u0930\u094d\u091c\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0940 \u0928\u093f\u0917\u0930\u093e\u0928\u0940 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u091c\u093f\u0938\u0938\u0947 \u0918\u0930\u094b\u0902 \u0914\u0930 \u0935\u094d\u092f\u0935\u0938\u093e\u092f\u094b\u0902 \u0915\u094b \u092c\u093f\u091c\u0932\u0940 \u0915\u0940 \u0916\u092a\u0924 \u0915\u094b \u0915\u092e \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u092e\u093f\u0932\u0924\u0940 \u0939\u0948\u0964     - \u0915\u091a\u0930\u093e \u092a\u094d\u0930\u092c\u0902\u0927\u0928: \u0915\u091a\u0930\u0947 \u0915\u0947 \u0921\u093f\u092c\u094d\u092c\u094b\u0902 \u092e\u0947\u0902 \u0938\u0947\u0902\u0938\u0930 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u092c\u0924\u093e\u0924\u0947 \u0939\u0948\u0902 \u0915\u093f \u0915\u092c \u0935\u0947 \u092d\u0930\u0947 \u0939\u0941\u090f \u0939\u0948\u0902, \u091c\u093f\u0938\u0938\u0947 \u0915\u091a\u0930\u093e \u0938\u0902\u0917\u094d\u0930\u0939\u0923 \u092e\u093e\u0930\u094d\u0917\u094b\u0902 \u0915\u094b \u0905\u0928\u0941\u0915\u0942\u0932\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0947\u0964  </p> <p>\u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0936\u0939\u0930\u094b\u0902 \u0915\u093e \u092d\u0935\u093f\u0937\u094d\u092f: \u091c\u0948\u0938\u0947-\u091c\u0948\u0938\u0947 \u0936\u0939\u0930 \u0935\u093f\u0915\u0938\u093f\u0924 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902, \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0938\u093f\u091f\u0940 \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u092a\u094d\u0930\u0926\u0942\u0937\u0923 \u0915\u094b \u0915\u092e \u0915\u0930\u0928\u0947, \u092f\u093e\u0924\u093e\u092f\u093e\u0924 \u0915\u0947 \u092a\u094d\u0930\u0935\u093e\u0939 \u0915\u094b \u0938\u0941\u0927\u093e\u0930\u0928\u0947, \u0914\u0930 \u0928\u093f\u0935\u093e\u0938\u093f\u092f\u094b\u0902 \u0915\u0940 \u0938\u0941\u0930\u0915\u094d\u0937\u093e \u0915\u094b \u092c\u0922\u093c\u093e\u0928\u0947 \u092e\u0947\u0902 \u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u092d\u0942\u092e\u093f\u0915\u093e \u0928\u093f\u092d\u093e\u090f\u0917\u0940\u0964</p>"},{"location":"hi/chapters/chapter03/#39","title":"3.9 \u0915\u094d\u0932\u093e\u0909\u0921 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917:","text":"<p>\u0915\u094d\u0932\u093e\u0909\u0921 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u094b \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0921\u0947\u091f\u093e \u0914\u0930 \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928 \u0915\u094b \u0938\u094d\u091f\u094b\u0930 \u0914\u0930 \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0940 \u0939\u0948, \u092c\u091c\u093e\u092f \u0907\u0938\u0915\u0947 \u0915\u093f \u0935\u0947 \u0905\u092a\u0928\u0947 \u0938\u094d\u0925\u093e\u0928\u0940\u092f \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u092a\u0930 \u0939\u094b\u0902\u0964 \u0907\u0938\u0938\u0947 \u092f\u0939 \u0938\u0902\u092d\u0935 \u0939\u094b\u0924\u093e \u0939\u0948 \u0915\u093f \u0906\u092a \u0915\u0939\u0940\u0902 \u0938\u0947 \u092d\u0940 \u0905\u092a\u0928\u0940 \u092b\u093c\u093e\u0907\u0932\u094b\u0902 \u0924\u0915 \u092a\u0939\u0941\u0901\u091a \u0938\u0915\u0947\u0902 \u0914\u0930 \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u091a\u0932\u093e \u0938\u0915\u0947\u0902, \u091c\u092c \u0924\u0915 \u0906\u092a\u0915\u0947 \u092a\u093e\u0938 \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u0928\u0947\u0915\u094d\u0936\u0928 \u0939\u094b\u0964</p> <p>\u0915\u094d\u0932\u093e\u0909\u0921 \u0938\u0947\u0935\u093e\u0913\u0902 \u0915\u0947 \u092a\u094d\u0930\u0915\u093e\u0930:     - \u0907\u0928\u094d\u092b\u094d\u0930\u093e\u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930 \u090f\u091c\u093c \u090f \u0938\u0930\u094d\u0935\u093f\u0938 (IaaS): \u0915\u094d\u0932\u093e\u0909\u0921 \u092a\u094d\u0930\u0926\u093e\u0924\u093e\u0913\u0902 \u0938\u0947 \u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u0938\u0930\u094d\u0935\u0930\u094d\u0938 \u0914\u0930 \u0938\u094d\u091f\u094b\u0930\u0947\u091c \u0915\u093f\u0930\u093e\u090f \u092a\u0930 \u0932\u0947\u0928\u093e\u0964     - \u092a\u094d\u0932\u0947\u091f\u092b\u093c\u0949\u0930\u094d\u092e \u090f\u091c\u093c \u090f \u0938\u0930\u094d\u0935\u093f\u0938 (PaaS): \u0921\u0947\u0935\u0932\u092a\u0930\u094d\u0938 \u0915\u0947 \u0932\u093f\u090f \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928 \u092c\u0928\u093e\u0928\u0947 \u0914\u0930 \u0924\u0948\u0928\u093e\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u092a\u094d\u0932\u0947\u091f\u092b\u093c\u0949\u0930\u094d\u092e\u0964     - \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u090f\u091c\u093c \u090f \u0938\u0930\u094d\u0935\u093f\u0938 (SaaS): \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0909\u092a\u0932\u092c\u094d\u0927 \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928, \u091c\u0948\u0938\u0947 Google Docs \u092f\u093e Dropbox\u0964  </p> <p>\u0915\u094d\u0932\u093e\u0909\u0921 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u0915\u093e \u092e\u0939\u0924\u094d\u0935: \u0915\u094d\u0932\u093e\u0909\u0921 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u0928\u0947 \u0938\u0939\u092f\u094b\u0917, \u0921\u0947\u091f\u093e \u0938\u0902\u0917\u094d\u0930\u0939\u0923, \u0914\u0930 \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u094b \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u092f\u094b\u0902 \u0914\u0930 \u0935\u094d\u092f\u0935\u0938\u093e\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0906\u0938\u093e\u0928 \u0914\u0930 \u0905\u0927\u093f\u0915 \u0938\u0938\u094d\u0924\u0940 \u092c\u0928\u093e \u0926\u093f\u092f\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter03/#310","title":"3.10 \u0917\u094d\u0930\u093f\u0921 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917:","text":"<p>\u0917\u094d\u0930\u093f\u0921 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u090f\u0915 \u092a\u094d\u0930\u0925\u093e \u0939\u0948 \u091c\u093f\u0938\u092e\u0947\u0902 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0938\u094d\u0925\u093e\u0928\u094b\u0902 \u092a\u0930 \u0915\u0908 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0915\u094b \u090f\u0915 \u0939\u0940 \u0915\u093e\u0930\u094d\u092f \u092a\u0930 \u0915\u093e\u092e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u091c\u094b\u0921\u093c\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u091c\u0948\u0938\u0947 \u0915\u093f \u0935\u0947 \u090f\u0915 \u0939\u0940 \u0938\u0941\u092a\u0930\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0939\u094b\u0902\u0964 \u0907\u0938 \u0926\u0943\u0937\u094d\u091f\u093f\u0915\u094b\u0923 \u0938\u0947 \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u0915\u0947 \u092d\u0940\u0924\u0930 \u0938\u0902\u0938\u093e\u0927\u0928\u094b\u0902 \u091c\u0948\u0938\u0947 \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u093f\u0902\u0917 \u092a\u093e\u0935\u0930 \u0914\u0930 \u0938\u094d\u091f\u094b\u0930\u0947\u091c \u0915\u094b \u0938\u093e\u091d\u093e \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u092e\u093f\u0932\u0924\u0940 \u0939\u0948\u0964</p> <p>\u0917\u094d\u0930\u093f\u0921 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0939\u093e\u0902 \u0939\u094b\u0924\u093e \u0939\u0948:     - \u0935\u0948\u091c\u094d\u091e\u093e\u0928\u093f\u0915 \u0905\u0928\u0941\u0938\u0902\u0927\u093e\u0928: \u0917\u094d\u0930\u093f\u0921 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u092e\u094c\u0938\u092e \u0915\u0947 \u092a\u0948\u091f\u0930\u094d\u0928 \u0915\u093e \u0905\u0928\u0941\u0915\u0930\u0923 \u0915\u0930\u0928\u0947, \u0935\u093f\u0936\u093e\u0932 \u0921\u0947\u091f\u093e \u0938\u0947\u091f \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0928\u0947, \u0914\u0930 \u091c\u091f\u093f\u0932 \u0917\u0923\u0928\u093e\u090f\u0901 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u091c\u094b \u090f\u0915\u0932 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0928\u0939\u0940\u0902 \u0915\u0930 \u0938\u0915\u0924\u093e\u0964     - \u091a\u093f\u0915\u093f\u0924\u094d\u0938\u093e: \u0917\u094d\u0930\u093f\u0921 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u0936\u094b\u0927\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u094b \u091c\u0948\u0935\u093f\u0915 \u0921\u0947\u091f\u093e \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u093e \u0939\u0948 \u0924\u093e\u0915\u093f \u0928\u090f \u0926\u0935\u093e\u0913\u0902 \u0915\u0940 \u0916\u094b\u091c \u0915\u0940 \u091c\u093e \u0938\u0915\u0947 \u092f\u093e \u092c\u0940\u092e\u093e\u0930\u093f\u092f\u094b\u0902 \u0915\u094b \u0938\u092e\u091d\u093e \u091c\u093e \u0938\u0915\u0947\u0964  </p>"},{"location":"hi/chapters/chapter03/#311","title":"3.11 \u092c\u094d\u0932\u0949\u0915\u091a\u0947\u0928 \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940:","text":"<p>\u092c\u094d\u0932\u0949\u0915\u091a\u0947\u0928 \u090f\u0915 \u0935\u093f\u0915\u0947\u0928\u094d\u0926\u094d\u0930\u0940\u0915\u0943\u0924 \u0914\u0930 \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u0939\u0948 \u091c\u093f\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0908 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u092e\u0947\u0902 \u0932\u0947\u0928\u0926\u0947\u0928 \u0915\u094b \u0930\u093f\u0915\u0949\u0930\u094d\u0921 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u092f\u0939 \u0938\u092c\u0938\u0947 \u0905\u091a\u094d\u091b\u0947 \u0938\u0947 \u0915\u094d\u0930\u093f\u092a\u094d\u091f\u094b\u0915\u094d\u092f\u0942\u0930\u0947\u0902\u0938\u0940 \u091c\u0948\u0938\u0947 Bitcoin \u0915\u0947 \u092a\u0940\u091b\u0947 \u0915\u0940 \u0924\u0915\u0928\u0940\u0915 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u091c\u093e\u0928\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u0932\u0947\u0915\u093f\u0928 \u0907\u0938\u0915\u0947 \u0915\u0908 \u0905\u0928\u094d\u092f \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u092d\u0940 \u0939\u0948\u0902\u0964</p> <p>\u092c\u094d\u0932\u0949\u0915\u091a\u0947\u0928 \u0915\u0948\u0938\u0947 \u0915\u093e\u092e \u0915\u0930\u0924\u093e \u0939\u0948:     - \u090f\u0915 \u092c\u094d\u0932\u0949\u0915\u091a\u0947\u0928 \u092e\u0947\u0902, \u0932\u0947\u0928\u0926\u0947\u0928 \u0915\u094b \u092c\u094d\u0932\u0949\u0915\u094b\u0902 \u092e\u0947\u0902 \u0938\u092e\u0942\u0939\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     - \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u092c\u094d\u0932\u0949\u0915 \u092a\u093f\u091b\u0932\u0947 \u090f\u0915 \u0938\u0947 \u0915\u094d\u0930\u093f\u092a\u094d\u091f\u094b\u0917\u094d\u0930\u093e\u092b\u0940 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u091c\u0941\u0921\u093c\u093e \u0939\u094b\u0924\u093e \u0939\u0948, \u091c\u093f\u0938\u0938\u0947 \u090f\u0915 \u0936\u094d\u0930\u0943\u0902\u0916\u0932\u093e \u092c\u0928\u0924\u0940 \u0939\u0948 \u091c\u094b \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0914\u0930 \u091b\u0947\u0921\u093c\u091b\u093e\u0921\u093c \u0915\u0930\u0928\u093e \u0915\u0920\u093f\u0928 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964  </p> <p>\u0915\u094d\u0930\u093f\u092a\u094d\u091f\u094b\u0915\u094d\u092f\u0942\u0930\u0947\u0902\u0938\u0940 \u0915\u0947 \u0905\u0932\u093e\u0935\u093e \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917:     - \u0938\u092a\u094d\u0932\u093e\u0908 \u091a\u0947\u0928 \u092a\u094d\u0930\u092c\u0902\u0927\u0928: \u092c\u094d\u0932\u0949\u0915\u091a\u0947\u0928 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u092e\u093e\u0932 \u0915\u0940 \u092f\u093e\u0924\u094d\u0930\u093e \u0915\u094b \u0909\u0924\u094d\u092a\u093e\u0926\u0928 \u0938\u0947 \u0921\u093f\u0932\u0940\u0935\u0930\u0940 \u0924\u0915 \u091f\u094d\u0930\u0948\u0915 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964     - \u092e\u0924\u0926\u093e\u0928 \u092a\u094d\u0930\u0923\u093e\u0932\u0940: \u092f\u0939 \u0938\u093e\u0930\u094d\u0935\u091c\u0928\u093f\u0915 \u0932\u0947\u091c\u0930 \u092a\u0930 \u0935\u094b\u091f \u0930\u093f\u0915\u0949\u0930\u094d\u0921 \u0915\u0930\u0915\u0947 \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0914\u0930 \u092a\u093e\u0930\u0926\u0930\u094d\u0936\u0940 \u091a\u0941\u0928\u093e\u0935 \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948\u0964     - \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0915\u0949\u0928\u094d\u091f\u094d\u0930\u0948\u0915\u094d\u091f\u094d\u0938: \u0905\u0928\u0941\u092c\u0902\u0927 \u091c\u094b \u0935\u093f\u0936\u0947\u0937 \u0936\u0930\u094d\u0924\u0947\u0902 \u092a\u0942\u0930\u0940 \u0939\u094b\u0928\u0947 \u092a\u0930 \u0938\u094d\u0935\u0924\u0903 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902, \u091c\u093f\u0938\u0938\u0947 \u092c\u093f\u091a\u094c\u0932\u093f\u092f\u094b\u0902 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0915\u092e \u0939\u094b \u091c\u093e\u0924\u0940 \u0939\u0948\u0964  </p>"},{"location":"hi/chapters/chapter03/#312-5g","title":"3.12 5G \u0928\u0947\u091f\u0935\u0930\u094d\u0915:","text":"<p>5G \u092e\u094b\u092c\u093e\u0907\u0932 \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u0915\u0940 \u0928\u0935\u0940\u0928\u0924\u092e \u092a\u0940\u0922\u093c\u0940 \u0939\u0948, \u091c\u094b \u0924\u0947\u091c \u0917\u0924\u093f, \u0915\u092e \u0932\u0947\u091f\u0947\u0902\u0938\u0940 (\u0921\u0947\u091f\u093e \u0915\u0947 \u092f\u093e\u0924\u094d\u0930\u093e \u0915\u0930\u0928\u0947 \u0915\u093e \u0938\u092e\u092f), \u0914\u0930 \u092a\u093f\u091b\u0932\u0947 \u092a\u0940\u0922\u093c\u093f\u092f\u094b\u0902 (\u091c\u0948\u0938\u0947 4G) \u0915\u0940 \u0924\u0941\u0932\u0928\u093e \u092e\u0947\u0902 \u090f\u0915 \u0938\u093e\u0925 \u0905\u0927\u093f\u0915 \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u0915\u094b \u0915\u0928\u0947\u0915\u094d\u091f \u0915\u0930\u0928\u0947 \u0915\u0940 \u0915\u094d\u0937\u092e\u0924\u093e \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0924\u0940 \u0939\u0948\u0964</p> <p>5G \u0915\u0947 \u0932\u093e\u092d:     - \u0924\u0947\u091c \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0938\u094d\u092a\u0940\u0921: \u090f\u0915 \u092a\u0942\u0930\u094d\u0923 \u092b\u093c\u093f\u0932\u094d\u092e \u0921\u093e\u0909\u0928\u0932\u094b\u0921 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u0905\u092c \u0938\u0947\u0915\u0902\u0921 \u0932\u0917\u0947\u0902\u0917\u0947, \u092e\u093f\u0928\u091f\u094b\u0902 \u0915\u0940 \u092c\u091c\u093e\u092f\u0964     - IoT \u0935\u093f\u0938\u094d\u0924\u093e\u0930: \u090f\u0915 \u0938\u093e\u0925 \u0905\u0927\u093f\u0915 \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u0915\u094b \u0915\u0928\u0947\u0915\u094d\u091f \u0915\u0930\u0928\u0947 \u0915\u0940 \u0915\u094d\u0937\u092e\u0924\u093e \u0915\u0947 \u0938\u093e\u0925, 5G \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0936\u0939\u0930\u094b\u0902, \u0938\u094d\u0935\u093e\u092f\u0924\u094d\u0924 \u0935\u093e\u0939\u0928\u094b\u0902, \u0914\u0930 \u0905\u0928\u094d\u092f \u0915\u0947 \u0932\u093f\u090f \u0938\u0915\u094d\u0937\u092e \u0915\u0930\u0947\u0917\u093e\u0964     - \u092c\u0922\u093c\u0940 \u0939\u0941\u0908 \u092e\u094b\u092c\u093e\u0907\u0932 \u0905\u0928\u0941\u092d\u0935: 5G \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928 \u091c\u0948\u0938\u0947 \u0911\u0917\u094d\u092e\u0947\u0902\u091f\u0947\u0921 \u0930\u093f\u092f\u0932\u093f\u091f\u0940 (AR) \u0914\u0930 \u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u0930\u093f\u092f\u0932\u093f\u091f\u0940 (VR) \u0915\u094b \u0905\u0927\u093f\u0915 \u0938\u0941\u0932\u092d \u092c\u0928\u093e\u090f\u0917\u093e\u0964  </p> <p>\u0930\u094b\u091a\u0915 \u0924\u0925\u094d\u092f: 5G 4G \u0915\u0940 \u0924\u0941\u0932\u0928\u093e \u092e\u0947\u0902 100 \u0917\u0941\u0928\u093e \u0924\u0947\u091c\u093c \u0921\u0947\u091f\u093e \u092a\u0939\u0941\u0902\u091a\u093e \u0938\u0915\u0924\u093e \u0939\u0948, \u0928\u090f \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u093f\u092f\u094b\u0902 \u0914\u0930 \u0924\u0947\u091c\u093c \u0938\u0902\u091a\u093e\u0930 \u0915\u0940 \u0938\u0902\u092d\u093e\u0935\u0928\u093e\u0913\u0902 \u0915\u094b \u0916\u094b\u0932\u0924\u0947 \u0939\u0941\u090f\u0964</p>"},{"location":"hi/chapters/chapter03/#313-","title":"3.13 \u0908-\u0915\u0949\u092e\u0930\u094d\u0938:","text":"<p>\u0908-\u0915\u0949\u092e\u0930\u094d\u0938 \u0915\u093e \u0905\u0930\u094d\u0925 \u0939\u0948 \u0911\u0928\u0932\u093e\u0907\u0928 \u0938\u093e\u092e\u093e\u0928 \u0914\u0930 \u0938\u0947\u0935\u093e\u0913\u0902 \u0915\u0940 \u0916\u0930\u0940\u0926 \u0914\u0930 \u092c\u093f\u0915\u094d\u0930\u0940\u0964 \u0907\u0938\u092e\u0947\u0902 \u0911\u0928\u0932\u093e\u0907\u0928 \u0936\u0949\u092a\u093f\u0902\u0917, \u0938\u0947\u0935\u093e\u090f\u0901 \u092c\u0941\u0915 \u0915\u0930\u0928\u093e, \u0914\u0930 \u092f\u0939\u093e\u0902 \u0924\u0915 \u0915\u093f \u0911\u0928\u0932\u093e\u0907\u0928 \u0928\u0940\u0932\u093e\u092e\u0940 \u092d\u0940 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902\u0964</p> <p>\u0908-\u0915\u0949\u092e\u0930\u094d\u0938 \u0915\u0947 \u092a\u094d\u0930\u0915\u093e\u0930:     - B2C (\u092c\u093f\u091c\u0928\u0947\u0938-\u091f\u0942-\u0915\u0902\u091c\u094d\u092f\u0942\u092e\u0930): \u0911\u0928\u0932\u093e\u0907\u0928 \u0930\u093f\u091f\u0947\u0932 \u0938\u094d\u091f\u094b\u0930\u094d\u0938 \u091c\u0948\u0938\u0947 Amazon \u0914\u0930 eBay\u0964     - B2B (\u092c\u093f\u091c\u0928\u0947\u0938-\u091f\u0942-\u092c\u093f\u091c\u0928\u0947\u0938): \u0915\u0902\u092a\u0928\u093f\u092f\u093e\u0901 \u091c\u094b \u0905\u0928\u094d\u092f \u0935\u094d\u092f\u0935\u0938\u093e\u092f\u094b\u0902 \u0915\u094b \u0909\u0924\u094d\u092a\u093e\u0926 \u0914\u0930 \u0938\u0947\u0935\u093e\u090f\u0901 \u092c\u0947\u091a\u0924\u0940 \u0939\u0948\u0902\u0964     - C2C (\u0915\u0902\u091c\u094d\u092f\u0942\u092e\u0930-\u091f\u0942-\u0915\u0902\u091c\u094d\u092f\u0942\u092e\u0930): \u092a\u094d\u0932\u0947\u091f\u092b\u093e\u0930\u094d\u092e \u091c\u0948\u0938\u0947 eBay, \u091c\u0939\u093e\u0901 \u0909\u092a\u092d\u094b\u0915\u094d\u0924\u093e \u0905\u0928\u094d\u092f \u0909\u092a\u092d\u094b\u0915\u094d\u0924\u093e\u0913\u0902 \u0915\u094b \u0909\u0924\u094d\u092a\u093e\u0926 \u092c\u0947\u091a\u0924\u0947 \u0939\u0948\u0902\u0964  </p> <p>\u0908-\u0915\u0949\u092e\u0930\u094d\u0938 \u0915\u093e \u092a\u094d\u0930\u092d\u093e\u0935: \u0908-\u0915\u0949\u092e\u0930\u094d\u0938 \u0928\u0947 \u092a\u093e\u0930\u0902\u092a\u0930\u093f\u0915 \u0935\u094d\u092f\u093e\u092a\u093e\u0930 \u0915\u094b \u092c\u0926\u0932 \u0926\u093f\u092f\u093e \u0939\u0948, \u091c\u093f\u0938\u0938\u0947 \u0917\u094d\u0930\u093e\u0939\u0915\u094b\u0902 \u0915\u094b \u0915\u0939\u0940\u0902 \u0938\u0947 \u092d\u0940 \u0914\u0930 \u0915\u093f\u0938\u0940 \u092d\u0940 \u0938\u092e\u092f \u0916\u0930\u0940\u0926\u093e\u0930\u0940 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u092e\u093f\u0932\u0940 \u0939\u0948\u0964 \u092f\u0939 \u091b\u094b\u091f\u0947 \u0935\u094d\u092f\u0935\u0938\u093e\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u092d\u0940 \u090f\u0915 \u0935\u0948\u0936\u094d\u0935\u093f\u0915 \u0926\u0930\u094d\u0936\u0915\u094b\u0902 \u0924\u0915 \u092a\u0939\u0941\u0901\u091a \u092c\u0928\u093e\u0928\u093e \u0906\u0938\u093e\u0928 \u092c\u0928\u093e\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter03/#_2","title":"\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940:","text":"<ul> <li>Artificial Intelligence (AI): \u092e\u0936\u0940\u0928\u094b\u0902 \u0926\u094d\u0935\u093e\u0930\u093e \u092e\u093e\u0928\u0935 \u092c\u0941\u0926\u094d\u0927\u093f\u092e\u0924\u094d\u0924\u093e \u0915\u093e \u0905\u0928\u0941\u0915\u0930\u0923\u0964</li> <li>Machine Learning (ML): AI \u0915\u093e \u090f\u0915 \u0909\u092a-\u0938\u0947\u091f \u091c\u0939\u093e\u0901 \u092e\u0936\u0940\u0928\u0947\u0902 \u0921\u0947\u091f\u093e \u0938\u0947 \u0938\u0940\u0916\u0924\u0940 \u0939\u0948\u0902 \u0924\u093e\u0915\u093f \u092d\u0935\u093f\u0937\u094d\u092f\u0935\u093e\u0923\u093f\u092f\u093e\u0901 \u092f\u093e \u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947\u0902\u0964</li> <li>Natural Language Processing (NLP): AI \u0915\u0940 \u090f\u0915 \u0936\u093e\u0916\u093e \u091c\u094b \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0915\u094b \u092e\u093e\u0928\u0935 \u092d\u093e\u0937\u093e \u0915\u094b \u0938\u092e\u091d\u0928\u0947 \u0914\u0930 \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u0938\u0915\u094d\u0937\u092e \u092c\u0928\u093e\u0924\u0940 \u0939\u0948\u0964</li> <li>Robotics: \u0938\u094d\u0935\u093e\u092f\u0924\u094d\u0924 \u0930\u0942\u092a \u0938\u0947 \u0915\u093e\u0930\u094d\u092f \u0915\u0930\u0928\u0947 \u0935\u093e\u0932\u0947 \u0930\u094b\u092c\u094b\u091f \u092c\u0928\u093e\u0928\u0947 \u0915\u093e \u0915\u094d\u0937\u0947\u0924\u094d\u0930\u0964</li> <li>Big Data: \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0938\u094d\u0930\u094b\u0924\u094b\u0902 \u0938\u0947 \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0935\u093f\u0936\u093e\u0932 \u092e\u093e\u0924\u094d\u0930\u093e \u092e\u0947\u0902 \u0921\u0947\u091f\u093e, \u091c\u093f\u0938\u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u092a\u094d\u0930\u0935\u0943\u0924\u094d\u0924\u093f\u092f\u094b\u0902 \u0914\u0930 \u092a\u0948\u091f\u0930\u094d\u0928\u094b\u0902 \u0915\u0940 \u0916\u094b\u091c \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</li> <li>Internet of Things (IoT): \u091c\u0941\u0921\u093c\u0947 \u0939\u0941\u090f \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u0915\u093e \u090f\u0915 \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u091c\u094b \u0921\u0947\u091f\u093e \u0907\u0915\u091f\u094d\u0920\u093e \u0914\u0930 \u0906\u0926\u093e\u0928-\u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>Sensors: \u0935\u0947 \u0909\u092a\u0915\u0930\u0923 \u091c\u094b \u0935\u093e\u0924\u093e\u0935\u0930\u0923 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u094b\u0902 \u0915\u093e \u092a\u0924\u093e \u0932\u0917\u093e\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u092e\u093e\u092a\u0924\u0947 \u0939\u0948\u0902\u0964</li> <li>Blockchain: \u090f\u0915 \u0935\u093f\u0915\u0947\u0928\u094d\u0926\u094d\u0930\u0940\u0915\u0943\u0924, \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u091c\u093f\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0932\u0947\u0928\u0926\u0947\u0928 \u0915\u094b \u0930\u093f\u0915\u0949\u0930\u094d\u0921 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</li> <li>5G: \u092e\u094b\u092c\u093e\u0907\u0932 \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u0915\u0940 \u092a\u093e\u0902\u091a\u0935\u0940\u0902 \u092a\u0940\u0922\u093c\u0940, \u091c\u094b \u0924\u0947\u091c \u0917\u0924\u093f \u0914\u0930 \u0915\u092e \u0932\u0947\u091f\u0947\u0902\u0938\u0940 \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0924\u0940 \u0939\u0948\u0964</li> <li>E-Commerce: \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0938\u093e\u092e\u093e\u0928 \u0914\u0930 \u0938\u0947\u0935\u093e\u0913\u0902 \u0915\u0940 \u0916\u0930\u0940\u0926 \u0914\u0930 \u092c\u093f\u0915\u094d\u0930\u0940\u0964</li> </ul>"},{"location":"hi/chapters/chapter03/#_3","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940:","text":"<ol> <li> <p>Artificial Intelligence \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930     b) \u092e\u0936\u0940\u0928\u094b\u0902 \u0926\u094d\u0935\u093e\u0930\u093e \u092e\u093e\u0928\u0935 \u092c\u0941\u0926\u094d\u0927\u093f\u092e\u0924\u094d\u0924\u093e \u0915\u093e \u0905\u0928\u0941\u0915\u0930\u0923     c) \u090f\u0915 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u092d\u093e\u0937\u093e     d) \u090f\u0915 \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u092a\u094d\u0930\u094b\u091f\u094b\u0915\u0949\u0932  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: Machine Learning \u0938\u092e\u092f \u0915\u0947 \u0938\u093e\u0925 \u0921\u0947\u091f\u093e \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0915\u0947 \u0938\u0941\u0927\u093e\u0930 \u0915\u0930\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e IoT \u0915\u093e \u0909\u0926\u093e\u0939\u0930\u0923 \u0928\u0939\u0940\u0902 \u0939\u0948?     a) \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0925\u0930\u094d\u092e\u094b\u0938\u094d\u091f\u0948\u091f     b) \u0938\u094d\u092e\u093e\u0930\u094d\u091f\u092b\u094b\u0928     c) \u092b\u093f\u091f\u0928\u0947\u0938 \u091f\u094d\u0930\u0948\u0915\u0930     d) \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u0935\u0947\u0935 \u0913\u0935\u0928  </p> </li> <li> <p>NLP \u0915\u093e \u092a\u0942\u0930\u093e \u0928\u093e\u092e \u0915\u094d\u092f\u093e \u0939\u0948?     a) Natural Light Processing     b) Network Latency Protocol     c) Natural Language Processing     d) Neural Logic Protocol  </p> </li> <li> <p>Blockchain \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u0915\u093e \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u0930\u093f\u092f\u0932\u093f\u091f\u0940 \u0935\u093e\u0924\u093e\u0935\u0930\u0923 \u092c\u0928\u093e\u0928\u093e     b) \u0932\u0947\u0928\u0926\u0947\u0928 \u0915\u094b \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u0930\u093f\u0915\u0949\u0930\u094d\u0921 \u0915\u0930\u0928\u093e     c) \u0935\u093f\u0936\u093e\u0932 \u0921\u0947\u091f\u093e \u0938\u0947\u091f \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0928\u093e     d) \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0921\u0947\u091f\u093e \u0915\u093e \u0938\u0902\u091a\u093e\u0930 \u0915\u0930\u0928\u093e  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: 5G \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u0915\u0940 \u0917\u0924\u093f 4G \u0915\u0940 \u0924\u0941\u0932\u0928\u093e \u092e\u0947\u0902 \u0905\u0927\u093f\u0915 \u0939\u094b\u0924\u0940 \u0939\u0948 \u0914\u0930 \u0932\u0947\u091f\u0947\u0902\u0938\u0940 \u0915\u092e \u0939\u094b\u0924\u0940 \u0939\u0948\u0964  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e \u0915\u094d\u0932\u093e\u0909\u0921 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u0915\u093e \u0938\u093e\u092e\u093e\u0928\u094d\u092f \u0909\u092a\u092f\u094b\u0917 \u0939\u0948?     a) \u092d\u094c\u0924\u093f\u0915 \u0921\u0947\u091f\u093e \u0938\u0902\u0917\u094d\u0930\u0939\u0923     b) \u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u0938\u0930\u094d\u0935\u0930 \u0915\u093f\u0930\u093e\u090f \u092a\u0930 \u0932\u0947\u0928\u093e     c) \u0930\u094b\u092c\u094b\u091f \u0921\u093f\u091c\u093e\u0907\u0928 \u0915\u0930\u0928\u093e     d) \u0935\u093f\u0924\u094d\u0924\u0940\u092f \u0932\u0947\u0928\u0926\u0947\u0928 \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u093e  </p> </li> <li> <p>\u090f\u0915 \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0936\u0939\u0930 \u092e\u0947\u0902, \u0938\u0947\u0902\u0938\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948:     a) \u0939\u0943\u0926\u092f \u0917\u0924\u093f \u092e\u093e\u092a\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f     b) \u0935\u093e\u092f\u0941 \u0917\u0941\u0923\u0935\u0924\u094d\u0924\u093e \u0915\u0940 \u0928\u093f\u0917\u0930\u093e\u0928\u0940 \u0915\u0947 \u0932\u093f\u090f     c) \u0938\u0930\u094d\u091c\u0930\u0940 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f     d) \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e \u0916\u093e\u0924\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f  </p> </li> <li> <p>\u0908-\u0915\u0949\u092e\u0930\u094d\u0938 \u0915\u093e \u090f\u0915 \u0909\u0926\u093e\u0939\u0930\u0923 \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0935\u0940\u0921\u093f\u092f\u094b \u0938\u094d\u091f\u094d\u0930\u0940\u092e\u093f\u0902\u0917     b) Amazon \u092a\u0930 \u0916\u0930\u0940\u0926\u093e\u0930\u0940     c) \u0911\u0928\u0932\u093e\u0907\u0928 \u0917\u0947\u092e \u0916\u0947\u0932\u0928\u093e     d) \u0908\u092e\u0947\u0932 \u092d\u0947\u091c\u0928\u093e  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u0940 \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u0915\u094d\u0930\u093f\u092a\u094d\u091f\u094b\u0915\u094d\u092f\u0942\u0930\u0947\u0902\u0938\u0940 \u091c\u0948\u0938\u0947 Bitcoin \u0915\u094b \u0938\u0902\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0924\u0940 \u0939\u0948?      a) Big Data      b) Blockchain      c) Cloud Computing      d) 5G  </p> </li> </ol>"},{"location":"hi/chapters/chapter03/#_4","title":"\u0909\u0924\u094d\u0924\u0930:","text":"<ol> <li>b) \u092e\u0936\u0940\u0928\u094b\u0902 \u0926\u094d\u0935\u093e\u0930\u093e \u092e\u093e\u0928\u0935 \u092c\u0941\u0926\u094d\u0927\u093f\u092e\u0924\u094d\u0924\u093e \u0915\u093e \u0905\u0928\u0941\u0915\u0930\u0923</li> <li>\u0938\u0939\u0940</li> <li>d) \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u0935\u0947\u0935 \u0913\u0935\u0928</li> <li>c) Natural Language Processing</li> <li>b) \u0932\u0947\u0928\u0926\u0947\u0928 \u0915\u094b \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u0930\u093f\u0915\u0949\u0930\u094d\u0921 \u0915\u0930\u0928\u093e</li> <li>\u0938\u0939\u0940</li> <li>b) \u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u0938\u0930\u094d\u0935\u0930 \u0915\u093f\u0930\u093e\u090f \u092a\u0930 \u0932\u0947\u0928\u093e</li> <li>b) \u0935\u093e\u092f\u0941 \u0917\u0941\u0923\u0935\u0924\u094d\u0924\u093e \u0915\u0940 \u0928\u093f\u0917\u0930\u093e\u0928\u0940 \u0915\u0947 \u0932\u093f\u090f</li> <li>b) Amazon \u092a\u0930 \u0916\u0930\u0940\u0926\u093e\u0930\u0940</li> <li>b) Blockchain</li> </ol>"},{"location":"hi/chapters/chapter04/","title":"\u092f\u0942\u0928\u093f\u091f 4: \u0938\u092e\u0938\u094d\u092f \u0939\u0932 (Problem Solving)","text":""},{"location":"hi/chapters/chapter04/#_1","title":"\u092a\u0930\u093f\u091a\u092f:","text":"<p>Problem-solving \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u093e\u0907\u0902\u0938 \u092e\u0947\u0902 \u0938\u092c\u0938\u0947 \u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0915\u094c\u0936\u0932 \u092e\u0947\u0902 \u0938\u0947 \u090f\u0915 \u0939\u0948\u0964 \u092f\u0939 \u091a\u0941\u0928\u094c\u0924\u0940 \u0915\u094b \u0939\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0924\u093e\u0930\u094d\u0915\u093f\u0915 \u0915\u0926\u092e \u0914\u0930 \u0938\u0902\u0930\u091a\u093f\u0924 \u0938\u094b\u091a \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u092a\u094d\u0930\u092d\u093e\u0935\u0940 \u0924\u0930\u0940\u0915\u094b\u0902 \u0915\u094b \u0916\u094b\u091c\u0928\u0947 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0939\u0948\u0964 \u0907\u0938 \u092f\u0942\u0928\u093f\u091f \u092e\u0947\u0902, \u0939\u092e \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u0939\u0932 \u0915\u0930\u0928\u0947 \u0915\u0940 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0915\u094b \u091a\u0930\u0923 \u0926\u0930 \u091a\u0930\u0923 \u0938\u092e\u091d\u0947\u0902\u0917\u0947\u0964 \u0939\u092e algorithms \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u091c\u093e\u0928\u0947\u0902\u0917\u0947, \u0909\u0928\u094d\u0939\u0947\u0902 flowcharts \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0915\u0948\u0938\u0947 \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u093f\u0924 \u0915\u0930\u0947\u0902, \u0914\u0930 \u0909\u0928 \u0935\u093f\u091a\u093e\u0930\u094b\u0902 \u0915\u094b \u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 programs \u092e\u0947\u0902 \u0915\u0948\u0938\u0947 \u092c\u0926\u0932\u0947\u0902\u0964 \u0907\u0938 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u092e\u0947\u0902 \u092e\u0939\u093e\u0930\u0924 \u0939\u093e\u0938\u093f\u0932 \u0915\u0930\u0915\u0947, \u0906\u092a \u0915\u093f\u0938\u0940 \u092d\u0940 coding \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u0906\u0924\u094d\u092e\u0935\u093f\u0936\u094d\u0935\u093e\u0938 \u0915\u0947 \u0938\u093e\u0925 \u0939\u0932 \u0915\u0930 \u0938\u0915\u0947\u0902\u0917\u0947!</p>"},{"location":"hi/chapters/chapter04/#41-problem-solving","title":"4.1 Problem Solving \u0915\u093e \u092a\u0930\u093f\u091a\u092f","text":"<p>Problem-solving \u0915\u0940 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u092e\u0947\u0902 \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u0940 \u092a\u0939\u091a\u093e\u0928 \u0915\u0930\u0928\u093e, \u090f\u0915 \u0938\u092e\u093e\u0927\u093e\u0928 \u0924\u0948\u092f\u093e\u0930 \u0915\u0930\u0928\u093e, \u0914\u0930 \u0909\u0938 \u0938\u092e\u093e\u0927\u093e\u0928 \u0915\u094b \u092a\u094d\u0930\u092d\u093e\u0935\u0940 \u0922\u0902\u0917 \u0938\u0947 \u0932\u093e\u0917\u0942 \u0915\u0930\u0928\u093e \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0964 \u091a\u0932\u093f\u090f \u0907\u0938\u0947 \u092a\u094d\u0930\u092c\u0902\u0927\u0928\u0940\u092f \u091a\u0930\u0923\u094b\u0902 \u092e\u0947\u0902 \u0935\u093f\u092d\u093e\u091c\u093f\u0924 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902:</p>"},{"location":"hi/chapters/chapter04/#problem-solving-cycle","title":"Problem Solving Cycle:","text":"<ol> <li> <p>\u0938\u092e\u0938\u094d\u092f\u093e \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0928\u093e:     \u092f\u0939 \u092a\u0939\u0932\u093e \u0915\u0926\u092e \u0939\u0948 \u091c\u0939\u093e\u0901 \u0906\u092a \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u092a\u0942\u0930\u0940 \u0924\u0930\u0939 \u0938\u092e\u091d\u0924\u0947 \u0939\u0948\u0902\u0964 \u0907\u0938\u092e\u0947\u0902 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u091b\u094b\u091f\u0947, \u0905\u0927\u093f\u0915 \u092a\u094d\u0930\u092c\u0902\u0927\u0928\u0940\u092f \u0939\u093f\u0938\u094d\u0938\u094b\u0902 \u092e\u0947\u0902 \u0924\u094b\u0921\u093c\u0928\u093e \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0964 \u092f\u0939 \u091a\u0930\u0923 input (\u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0921\u0947\u091f\u093e), processing (\u0906\u0935\u0936\u094d\u092f\u0915 \u0915\u0926\u092e), \u0914\u0930 output (\u0907\u091a\u094d\u091b\u093f\u0924 \u092a\u0930\u093f\u0923\u093e\u092e) \u0915\u0940 \u092a\u0939\u091a\u093e\u0928 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: \u092e\u093e\u0928 \u0932\u0940\u091c\u093f\u090f \u0906\u092a\u0915\u094b \u090f\u0915 \u0915\u0915\u094d\u0937\u093e \u0915\u0947 \u0914\u0938\u0924 \u0905\u0902\u0915 \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0930\u0928\u0940 \u0939\u0948\u0964 \u0906\u092a \u092a\u0939\u0932\u0947 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u0924\u093e\u0915\u093f inputs (\u0905\u0902\u0915), \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e (\u0905\u0902\u0915 \u091c\u094b\u0921\u093c\u0928\u093e \u0914\u0930 \u0915\u0941\u0932 \u0905\u0902\u0915\u094b\u0902 \u0938\u0947 \u0935\u093f\u092d\u093e\u091c\u093f\u0924 \u0915\u0930\u0928\u093e), \u0914\u0930 output (\u0914\u0938\u0924) \u0915\u094b \u0938\u092e\u091d \u0938\u0915\u0947\u0902\u0964</p> </li> <li> <p>Algorithm \u0915\u093e \u0921\u093f\u091c\u093e\u0907\u0928 \u0915\u0930\u0928\u093e:     \u091c\u092c \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u0938\u092e\u091d \u0932\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u0924\u094b \u0905\u0917\u0932\u093e \u0915\u0926\u092e \u090f\u0915 algorithm \u092c\u0928\u093e\u0928\u093e \u0939\u0948 - \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u0939\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0915\u0926\u092e-\u0926\u0930-\u0915\u0926\u092e \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e\u0964 \u092f\u0939 \u0906\u092a\u0915\u094b \u0915\u094b\u0921 \u0932\u093f\u0916\u0928\u0947 \u0938\u0947 \u092a\u0939\u0932\u0947 \u0938\u092e\u093e\u0927\u093e\u0928 \u0915\u0940 \u092f\u094b\u091c\u0928\u093e \u092c\u0928\u093e\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>Coding \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0915\u093e\u0930\u094d\u092f\u093e\u0928\u094d\u0935\u092f\u0928:     Algorithm \u0915\u094b \u0921\u093f\u091c\u093e\u0907\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u092c\u093e\u0926, \u0905\u0917\u0932\u093e \u0915\u0926\u092e \u090f\u0915 programming language \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u0915\u094b\u0921 \u0932\u093f\u0916\u0928\u093e \u0939\u0948\u0964 \u092f\u0939 \u0906\u092a\u0915\u0947 \u0924\u093e\u0930\u094d\u0915\u093f\u0915 \u0938\u092e\u093e\u0927\u093e\u0928 \u0915\u094b \u090f\u0915 \u0915\u093e\u0930\u094d\u092f\u093e\u0924\u094d\u092e\u0915 program \u092e\u0947\u0902 \u092c\u0926\u0932 \u0926\u0947\u0924\u093e \u0939\u0948 \u091c\u093f\u0938\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>\u0938\u092e\u093e\u0927\u093e\u0928 \u0915\u093e \u092a\u0930\u0940\u0915\u094d\u0937\u0923:     \u090f\u0915 \u092c\u093e\u0930 \u091c\u092c program \u0932\u093f\u0916\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u0924\u094b \u0906\u092a\u0915\u094b \u0907\u0938\u0947 \u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u0915\u0930\u0928\u093e \u0939\u094b\u0917\u093e\u0964 \u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u092f\u0939 \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0915\u093f program \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u0907\u091a\u094d\u091b\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u0939\u0932 \u0915\u0930 \u0930\u0939\u093e \u0939\u0948\u0964 \u092f\u0939 \u091a\u0930\u0923 \u0905\u0915\u094d\u0938\u0930 debugging \u0915\u094b \u0936\u093e\u092e\u093f\u0932 \u0915\u0930\u0924\u093e \u0939\u0948, \u091c\u0939\u093e\u0901 \u0906\u092a \u0915\u094b\u0921 \u092e\u0947\u0902 \u0915\u093f\u0938\u0940 \u092d\u0940 \u092e\u0941\u0926\u094d\u0926\u0947 \u092f\u093e \u0917\u0932\u0924\u0940 \u0915\u094b \u0920\u0940\u0915 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> </ol> <p>\u092f\u0939 \u091a\u0915\u094d\u0930 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924 \u0939\u0948 \u0915\u094d\u092f\u094b\u0902\u0915\u093f \u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u0915\u0947 \u092c\u093e\u0926, \u0906\u092a \u092f\u0939 \u092a\u0939\u091a\u093e\u0928 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u0915\u093f \u0938\u092e\u093e\u0927\u093e\u0928 \u0915\u094b \u0938\u0941\u0927\u093e\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0939\u093e\u0901 \u0938\u0902\u092d\u093e\u0935\u0928\u093e\u090f\u0901 \u0939\u0948\u0902, \u091c\u094b \u0906\u092a\u0915\u094b \u092a\u0939\u0932\u0947 \u0915\u0947 \u091a\u0930\u0923\u094b\u0902 \u092a\u0930 \u0935\u093e\u092a\u0938 \u0932\u0947 \u091c\u093e \u0938\u0915\u0924\u0940 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter04/#42-algorithm","title":"4.2 Algorithm","text":"<p>Algorithm \u090f\u0915 \u0938\u0941\u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093f\u0924, \u091a\u0930\u0923-\u0926\u0930-\u091a\u0930\u0923 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u092f\u093e \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u093e \u0938\u0947\u091f \u0939\u0948 \u091c\u093f\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u0938\u0940 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u0939\u0932 \u0915\u0930\u0928\u0947 \u092f\u093e \u0915\u093e\u0930\u094d\u092f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 Algorithms \u0939\u092e\u093e\u0930\u0947 \u0932\u093f\u090f \u0938\u092e\u0938\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u0939\u0932 \u0915\u0930\u0928\u0947 \u0915\u0940 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u0928 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter04/#algorithms","title":"\u0939\u092e\u0947\u0902 Algorithms \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0915\u094d\u092f\u094b\u0902 \u0939\u0948?","text":"<p>Algorithms \u0938\u092e\u0938\u094d\u092f\u093e\u0913\u0902 \u0915\u0947 \u092a\u094d\u0930\u0924\u093f \u090f\u0915 \u0938\u0902\u0930\u091a\u093f\u0924 \u0924\u0930\u0940\u0915\u0947 \u0938\u0947 \u0926\u0943\u0937\u094d\u091f\u093f\u0915\u094b\u0923 \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964 \u0935\u0947 \u091c\u091f\u093f\u0932 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0938\u0930\u0932 \u0915\u0926\u092e\u094b\u0902 \u092e\u0947\u0902 \u0924\u094b\u0921\u093c\u0924\u0947 \u0939\u0948\u0902, \u091c\u093f\u0938\u0938\u0947 \u0939\u092e \u0938\u092e\u093e\u0927\u093e\u0928 \u0915\u0947 \u0932\u093f\u090f \u0924\u093e\u0930\u094d\u0915\u093f\u0915 \u0930\u093e\u0938\u094d\u0924\u093e \u0916\u094b\u091c \u092a\u093e\u0924\u0947 \u0939\u0948\u0902\u0964 \u092c\u093f\u0928\u093e \u0938\u094d\u092a\u0937\u094d\u091f algorithm \u0915\u0947, \u0915\u094b\u0921 \u0932\u093f\u0916\u0928\u0947 \u0915\u0940 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u092d\u094d\u0930\u092e\u093f\u0924 \u0915\u0930\u0928\u0947 \u0935\u093e\u0932\u0940 \u0914\u0930 \u0924\u094d\u0930\u0941\u091f\u093f-\u092a\u094d\u0930\u0935\u0923 \u0939\u094b \u0938\u0915\u0924\u0940 \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter04/#flowcharts-algorithms","title":"Flowcharts \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 Algorithms \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0928\u093e:","text":"<p>Flowcharts \u0926\u0943\u0936\u094d\u092f \u0921\u093e\u092f\u0917\u094d\u0930\u093e\u092e \u0939\u0948\u0902 \u091c\u094b algorithm \u092e\u0947\u0902 \u0915\u0926\u092e\u094b\u0902 \u0915\u0947 \u092a\u094d\u0930\u0935\u093e\u0939 \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964 \u090f\u0915 flowchart \u092e\u0947\u0902 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0915\u0926\u092e \u0915\u094b \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u092a\u094d\u0930\u0924\u0940\u0915\u094b\u0902 \u0926\u094d\u0935\u093e\u0930\u093e \u0926\u0930\u094d\u0936\u093e\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u091c\u094b \u0926\u093f\u0916\u093e\u0924\u0947 \u0939\u0948\u0902 \u0915\u093f \u0921\u0947\u091f\u093e algorithm \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0915\u0948\u0938\u0947 \u092a\u094d\u0930\u0935\u093e\u0939\u093f\u0924 \u0939\u094b\u0924\u093e \u0939\u0948\u0964</p> <ul> <li>\u0905\u0902\u0921\u093e\u0915\u093e\u0930 (Start/End): Algorithm \u0915\u0940 \u0936\u0941\u0930\u0941\u0906\u0924 \u092f\u093e \u0905\u0902\u0924 \u0915\u094b \u091a\u093f\u0939\u094d\u0928\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>\u0906\u092f\u0924 (Process): \u090f\u0915 \u0910\u0938\u093e \u0915\u0926\u092e \u0926\u0930\u094d\u0936\u093e\u0924\u093e \u0939\u0948 \u091c\u0939\u093e\u0901 \u0915\u094b\u0908 \u0915\u094d\u0930\u093f\u092f\u093e \u092f\u093e \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0939\u094b\u0924\u0940 \u0939\u0948 (\u091c\u0948\u0938\u0947, \u090f\u0915 \u0917\u0923\u0928\u093e)\u0964</li> <li>\u0939\u0940\u0930\u093e (Decision): \u090f\u0915 \u0928\u093f\u0930\u094d\u0923\u092f \u092c\u093f\u0902\u0926\u0941 \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u093e \u0939\u0948, \u091c\u0948\u0938\u0947 \"Yes/No\" \u092f\u093e \"True/False\" \u0928\u093f\u0930\u094d\u0923\u092f\u0964</li> <li>\u0924\u0940\u0930: \u090f\u0915 \u0915\u0926\u092e \u0938\u0947 \u0926\u0942\u0938\u0930\u0947 \u0915\u0926\u092e \u0915\u0940 \u0913\u0930 \u092a\u094d\u0930\u0935\u093e\u0939 \u0915\u0940 \u0926\u093f\u0936\u093e \u0915\u094b \u0907\u0902\u0917\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> </ul> <p>\u091a\u093e\u092f \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f Flowchart \u0915\u093e \u0909\u0926\u093e\u0939\u0930\u0923: 1. \u092a\u094d\u0930\u093e\u0930\u0902\u092d 2. \u092a\u093e\u0928\u0940 \u0909\u092c\u093e\u0932\u0947\u0902 3. \u091a\u093e\u092f \u0915\u0940 \u092a\u0924\u094d\u0924\u093f\u092f\u093e\u0901 \u0921\u093e\u0932\u0947\u0902 4. \u091a\u0940\u0928\u0940 \u0921\u093e\u0932\u0947\u0902 (\u0928\u093f\u0930\u094d\u0923\u092f \u092c\u093f\u0902\u0926\u0941: \u0939\u093e\u0901/\u0928\u0939\u0940\u0902) 5. \u091a\u0932\u093e\u090f\u0901 \u0914\u0930 \u092a\u094d\u0930\u0924\u0940\u0915\u094d\u0937\u093e \u0915\u0930\u0947\u0902 6. \u0915\u092a \u092e\u0947\u0902 \u0921\u093e\u0932\u0947\u0902 7. \u0930\u094b\u0915\u0947\u0902</p> <p>Flowcharts \u0906\u092a\u0915\u094b \u091a\u0930\u0923\u094b\u0902 \u0915\u0947 \u0905\u0928\u0941\u0915\u094d\u0930\u092e \u0915\u094b \u0926\u0943\u0936\u094d\u092f \u0930\u0942\u092a \u092e\u0947\u0902 \u0926\u0947\u0916\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u091c\u093f\u0938\u0938\u0947 \u0915\u094b\u0921 \u0932\u093f\u0916\u0928\u0947 \u0938\u0947 \u092a\u0939\u0932\u0947 algorithm \u0915\u094b \u0938\u092e\u091d\u0928\u093e \u0914\u0930 \u0921\u093f\u092c\u0917 \u0915\u0930\u0928\u093e \u0906\u0938\u093e\u0928 \u0939\u094b \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter04/#43-programming","title":"4.3 Programming","text":"<p>\u090f\u0915 Program \u090f\u0915 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u093e \u0938\u0947\u091f \u0939\u0948 \u091c\u093f\u0938\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u093f\u0938\u0940 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0915\u093e\u0930\u094d\u092f \u0915\u094b \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u093e\u0932\u0928 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u091c\u092c \u0906\u092a\u0915\u0947 \u092a\u093e\u0938 \u090f\u0915 algorithm \u0939\u094b\u0924\u093e \u0939\u0948, \u0924\u094b \u0905\u0917\u0932\u093e \u0915\u0926\u092e \u0909\u0938 algorithm \u0915\u093e \u092a\u093e\u0932\u0928 \u0915\u0930\u0928\u0947 \u0935\u093e\u0932\u093e program \u0932\u093f\u0916\u0928\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter04/#programs","title":"\u0939\u092e\u0947\u0902 Programs \u0915\u094d\u092f\u094b\u0902 \u0932\u093f\u0916\u0928\u0947 \u091a\u093e\u0939\u093f\u090f?","text":"<p>Programs \u0939\u092e\u0947\u0902 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0928\u0947, \u0917\u0923\u0928\u093e\u090f\u0901 \u0915\u0930\u0928\u0947, \u0914\u0930 \u0938\u092e\u0938\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u092a\u094d\u0930\u092d\u093e\u0935\u0940 \u0922\u0902\u0917 \u0938\u0947 \u0939\u0932 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0947 \u0939\u0948\u0902\u0964 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0907\u0928 programs \u0915\u094b \u092e\u0928\u0941\u0937\u094d\u092f\u094b\u0902 \u0915\u0940 \u0924\u0941\u0932\u0928\u093e \u092e\u0947\u0902 \u092c\u0939\u0941\u0924 \u0924\u0947\u091c\u0940 \u0938\u0947 \u0914\u0930 \u0905\u0927\u093f\u0915 \u0938\u091f\u0940\u0915\u0924\u093e \u0938\u0947 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 programs \u0915\u094b \u0915\u0908 \u092c\u093e\u0930 \u092a\u0941\u0928: \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter04/#program","title":"Program \u0932\u093f\u0916\u0928\u0947 \u0915\u0947 \u091a\u0930\u0923:","text":"<ol> <li> <p>Algorithm \u0915\u093e \u0905\u0928\u0941\u0935\u093e\u0926 \u0915\u0930\u0928\u093e:     \u091c\u092c \u090f\u0915 algorithm \u0924\u0948\u092f\u093e\u0930 \u0939\u094b \u091c\u093e\u0924\u093e \u0939\u0948, \u0924\u094b \u0906\u092a \u0907\u0938\u0947 \u090f\u0915 programming language \u091c\u0948\u0938\u0947 Python, C++, \u092f\u093e Java \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0915\u094b\u0921 \u092e\u0947\u0902 \u0905\u0928\u0941\u0935\u093e\u0926 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964 \u092f\u0939\u093e\u0901 algorithm \u0915\u0947 \u0924\u093e\u0930\u094d\u0915\u093f\u0915 \u0915\u0926\u092e \u0915\u094b \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0947 \u0932\u093f\u090f \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u092e\u0947\u0902 \u092c\u0926\u0932\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>\u0938\u0939\u0940 Programming Constructs \u0915\u093e \u091a\u092f\u0928 \u0915\u0930\u0928\u093e:     \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0938\u092e\u0938\u094d\u092f\u093e\u0913\u0902 \u0915\u0947 \u0932\u093f\u090f \u0935\u093f\u092d\u093f\u0928\u094d\u0928 programming \u0924\u0915\u0928\u0940\u0915\u094b\u0902 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u094b\u0924\u0940 \u0939\u0948, \u091c\u0948\u0938\u0947 loops, conditionals, \u0914\u0930 functions\u0964 \u0938\u0939\u0940 constructs \u0915\u093e \u091a\u092f\u0928 \u092f\u0939 \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0915\u093f \u0906\u092a\u0915\u093e program \u0915\u0941\u0936\u0932\u0924\u093e\u092a\u0942\u0930\u094d\u0935\u0915 \u091a\u0932\u0947\u0964</p> </li> <li> <p>\u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u0914\u0930 Debugging:     Program \u0932\u093f\u0916\u0928\u0947 \u0915\u0947 \u092c\u093e\u0926, \u0906\u092a\u0915\u094b \u0907\u0938\u0947 \u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u0915\u0930\u0928\u093e \u0939\u094b\u0917\u093e \u092f\u0939 \u0926\u0947\u0916\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f \u0915\u094d\u092f\u093e \u092f\u0939 \u0905\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u0915\u093e\u092e \u0915\u0930\u0924\u093e \u0939\u0948\u0964 Debugging \u0915\u093f\u0938\u0940 \u092d\u0940 \u0924\u094d\u0930\u0941\u091f\u093f\u092f\u094b\u0902 \u092f\u093e \"bugs\" \u0915\u094b \u0920\u0940\u0915 \u0915\u0930\u0928\u0947 \u0915\u094b \u0938\u0902\u0926\u0930\u094d\u092d\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u094b \u0915\u094b\u0921 \u092e\u0947\u0902 \u0926\u093f\u0916\u093e\u0908 \u0926\u0947 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> </ol>"},{"location":"hi/chapters/chapter04/#44-programming-constructs","title":"4.4 Programming Constructs","text":"<p>Programming Constructs \u0935\u0947 \u0906\u0935\u0936\u094d\u092f\u0915 \u0928\u093f\u0930\u094d\u092e\u093e\u0923 \u0916\u0902\u0921 \u0939\u0948\u0902 \u091c\u094b programs \u0932\u093f\u0916\u0928\u0947 \u092e\u0947\u0902 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u090f \u091c\u093e\u0924\u0947 \u0939\u0948\u0902\u0964 \u0924\u0940\u0928 \u092e\u0941\u0916\u094d\u092f \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u0947 constructs \u0939\u094b\u0924\u0947 \u0939\u0948\u0902:</p> <ol> <li> <p>Sequence:     \u090f\u0915 sequence \u090f\u0915 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u093e \u0938\u0947\u091f \u0939\u0948 \u091c\u093f\u0938\u0947 \u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0915\u094d\u0930\u092e \u092e\u0947\u0902 \u090f\u0915 \u0915\u0947 \u092c\u093e\u0926 \u090f\u0915 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964  </p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>print(\"Step 1: Boil water\")  \nprint(\"Step 2: Add tea leaves\")  \nprint(\"Step 3: Stir\")  \n</code></pre> \u0907\u0938 \u0909\u0926\u093e\u0939\u0930\u0923 \u092e\u0947\u0902, \u0915\u094b\u0921 \u0915\u0940 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u092a\u0902\u0915\u094d\u0924\u093f \u0915\u094b \u091c\u093f\u0938 \u0915\u094d\u0930\u092e \u092e\u0947\u0902 \u0932\u093f\u0916\u093e \u0917\u092f\u093e \u0939\u0948 \u0909\u0938\u0940 \u092e\u0947\u0902 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>Selection (\u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947\u0928\u093e):     Selection \u0915\u093e\u0930\u094d\u092f\u0915\u094d\u0930\u092e \u0915\u094b \u0936\u0930\u094d\u0924\u094b\u0902 \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964 \u092f\u0939 if-else statements \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u091c\u0939\u093e\u0901 program \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u0947 \u092c\u0940\u091a \u091a\u092f\u0928 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>if temperature &gt; 100:  \n  print(\"Boil the water\")  \nelse:  \n  print(\"Heat the water more\")  \n</code></pre> \u092f\u0939\u093e\u0901, program \u0936\u0930\u094d\u0924 (temperature &gt; 100) \u0915\u0940 \u091c\u093e\u0901\u091a \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u0909\u0938\u0915\u0947 \u0905\u0928\u0941\u0938\u093e\u0930 \u0915\u093e\u0930\u094d\u092f \u0915\u094b \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>Iteration (Loops):     Iteration \u0924\u092c \u0939\u094b\u0924\u0940 \u0939\u0948 \u091c\u092c \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u093e \u090f\u0915 \u0938\u0947\u091f \u0915\u0908 \u092c\u093e\u0930 \u0926\u094b\u0939\u0930\u093e\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 \u0924\u092c \u0924\u0915 \u091c\u092c \u0924\u0915 \u0915\u094b\u0908 \u0936\u0930\u094d\u0924 \u092a\u0942\u0930\u0940 \u0928\u0939\u0940\u0902 \u0939\u094b\u0924\u0940\u0964 for \u0914\u0930 while \u091c\u0948\u0938\u0947 loops \u0939\u092e\u0947\u0902 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0926\u094b\u0939\u0930\u093e\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>for i in range(5):  \n  print(\"Stir the tea\")  \n</code></pre> \u0907\u0938 \u092e\u093e\u092e\u0932\u0947 \u092e\u0947\u0902, \u0915\u093e\u0930\u094d\u092f (\u091a\u093e\u092f \u0915\u094b \u091a\u0932\u093e\u0928\u093e) \u092a\u093e\u0901\u091a \u092c\u093e\u0930 \u0926\u094b\u0939\u0930\u093e\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964  </p> </li> </ol> <p>\u0907\u0928 constructs \u0915\u094b \u092e\u093f\u0932\u093e\u0915\u0930, \u0906\u092a \u0915\u093f\u0938\u0940 \u092d\u0940 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u0939\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u091c\u091f\u093f\u0932 programs \u092c\u0928\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter04/#_2","title":"\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940:","text":"<ul> <li>Problem Solving: \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u0940 \u092a\u0939\u091a\u093e\u0928, \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923, \u0914\u0930 \u0909\u0938\u0947 \u091a\u0930\u0923-\u0926\u0930-\u091a\u0930\u0923 \u0939\u0932 \u0915\u0930\u0928\u0947 \u0915\u0940 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e\u0964</li> <li>Algorithm: \u0915\u093f\u0938\u0940 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u0939\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u091a\u0930\u0923-\u0926\u0930-\u091a\u0930\u0923 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e\u0964</li> <li>Coding: \u090f\u0915 programming language \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 algorithm \u0915\u094b \u0932\u093e\u0917\u0942 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f program \u0932\u093f\u0916\u0928\u093e\u0964</li> <li>Flowchart: \u090f\u0915 diagram \u091c\u094b algorithm \u0915\u094b \u091a\u0930\u0923\u094b\u0902 \u0915\u0947 \u092a\u094d\u0930\u0935\u093e\u0939 \u0915\u094b \u0926\u093f\u0916\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u094d\u0930\u0924\u0940\u0915\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0926\u0943\u0936\u094d\u092f \u0930\u0942\u092a \u0938\u0947 \u092a\u094d\u0930\u0938\u094d\u0924\u0941\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>Sequence: \u090f\u0915 \u0915\u0947 \u092c\u093e\u0926 \u090f\u0915 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u093e \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928\u0964</li> <li>Selection: \u0936\u0930\u094d\u0924\u094b\u0902 \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u0947 \u092c\u0940\u091a \u091a\u092f\u0928 \u0915\u0930\u0928\u093e (\u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947\u0928\u093e)\u0964</li> <li>Iteration: \u090f\u0915 \u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0936\u0930\u094d\u0924 \u092a\u0942\u0930\u0940 \u0939\u094b\u0928\u0947 \u0924\u0915 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u0947 \u090f\u0915 \u0938\u0947\u091f \u0915\u094b \u0926\u094b\u0939\u0930\u093e\u0928\u093e (looping)\u0964</li> </ul>"},{"location":"hi/chapters/chapter04/#_3","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940:","text":"<ol> <li> <p>Problem-solving cycle \u092e\u0947\u0902 \u092a\u0939\u0932\u093e \u0915\u0926\u092e \u0915\u094d\u092f\u093e \u0939\u0948?     a) Testing     b) Designing an algorithm     c) Analyzing the problem     d) Writing code  </p> </li> <li> <p>Algorithm \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u090f\u0915 diagram  </p> </li> </ol> <p>b) \u0915\u093f\u0938\u0940 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u0939\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u091a\u0930\u0923-\u0926\u0930-\u091a\u0930\u0923 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e     c) \u090f\u0915 programming language     d) \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e loop  </p> <ol> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: \u090f\u0915 algorithm \u0915\u094b \u0939\u092e\u0947\u0936\u093e \u0915\u094b\u0921 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0932\u093e\u0917\u0942 \u0915\u093f\u092f\u093e \u091c\u093e\u0928\u093e \u091a\u093e\u0939\u093f\u090f\u0964  </p> </li> <li> <p>Flowchart \u092e\u0947\u0902 \u0928\u093f\u0930\u094d\u0923\u092f \u092c\u093f\u0902\u0926\u0941 \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0928\u0947 \u0935\u093e\u0932\u093e \u092a\u094d\u0930\u0924\u0940\u0915 \u0915\u094c\u0928 \u0938\u093e \u0939\u0948?     a) \u0906\u092f\u0924     b) \u0905\u0902\u0921\u093e\u0915\u093e\u0930     c) \u0939\u0940\u0930\u093e     d) \u0935\u0943\u0924\u094d\u0924  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e programming construct \u0928\u0939\u0940\u0902 \u0939\u0948?     a) Sequence     b) Selection     c) Debugging     d) Iteration  </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: \u090f\u0915 program \u090f\u0915 \u0938\u0947\u091f \u0939\u0948 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u093e \u091c\u094b \u0915\u093f\u0938\u0940 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u094b \u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0915\u093e\u0930\u094d\u092f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0932\u093f\u0916\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>Programming \u092e\u0947\u0902 if-else statement \u0915\u093e \u0915\u094d\u092f\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u093e \u0939\u0948?     a) Iteration     b) Sequence     c) Selection     d) Debugging  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e programming \u092e\u0947\u0902 iteration \u0915\u093e \u090f\u0915 \u0909\u0926\u093e\u0939\u0930\u0923 \u0939\u0948?     a) if temperature &gt; 100: print(\"Boil\")     b) print(\"Hello\")     c) for i in range(5): print(\"Loop\")     d) input(\"Enter your name\")  </p> </li> <li> <p>Flowchart \u0915\u093e \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u090f\u0915 program \u0915\u094b \u0921\u093f\u092c\u0917 \u0915\u0930\u0928\u093e     b) \u090f\u0915 algorithm \u0915\u093e \u0926\u0943\u0936\u094d\u092f \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0928\u093e     c) \u0921\u0947\u091f\u093e \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0928\u093e     d) \u090f\u0915 program \u0915\u094b \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u093e  </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: \u090f\u0915 program \u0915\u093e \u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u0915\u0930\u0928\u093e \u0938\u092e\u0938\u094d\u092f\u093e-\u0939\u0932 \u091a\u0915\u094d\u0930 \u0915\u093e \u0939\u093f\u0938\u094d\u0938\u093e \u0928\u0939\u0940\u0902 \u0939\u0948\u0964  </p> </li> </ol>"},{"location":"hi/chapters/chapter04/#_4","title":"\u0909\u0924\u094d\u0924\u0930:","text":"<ol> <li>c) Analyzing the problem  </li> <li>b) \u0915\u093f\u0938\u0940 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u0939\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u091a\u0930\u0923-\u0926\u0930-\u091a\u0930\u0923 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e  </li> <li>\u0905\u0938\u0924\u094d\u092f  </li> <li>c) \u0939\u0940\u0930\u093e  </li> <li>c) Debugging  </li> <li>\u0938\u0924\u094d\u092f  </li> <li>c) Selection  </li> <li>c) for i in range(5): print(\"Loop\")  </li> <li>b) \u090f\u0915 algorithm \u0915\u093e \u0926\u0943\u0936\u094d\u092f \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0928\u093e  </li> <li>\u0905\u0938\u0924\u094d\u092f  </li> </ol>"},{"location":"hi/chapters/chapter05/","title":"\u092f\u0942\u0928\u093f\u091f 5: Python \u0938\u0947 \u0936\u0941\u0930\u0941\u0906\u0924 \u0915\u0930\u0928\u093e","text":""},{"location":"hi/chapters/chapter05/#_1","title":"\u092a\u0930\u093f\u091a\u092f:","text":"<p>Python \u090f\u0915 \u0932\u094b\u0915\u092a\u094d\u0930\u093f\u092f, \u0938\u0940\u0916\u0928\u0947 \u092e\u0947\u0902 \u0906\u0938\u093e\u0928 programming language \u0939\u0948 \u091c\u094b web development, data science, artificial intelligence, \u0914\u0930 \u0905\u0927\u093f\u0915 \u092e\u0947\u0902 \u0935\u094d\u092f\u093e\u092a\u0915 \u0930\u0942\u092a \u0938\u0947 \u0909\u092a\u092f\u094b\u0917 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964 \u0907\u0938 \u092f\u0942\u0928\u093f\u091f \u092e\u0947\u0902, \u0939\u092e Python programming \u0915\u0947 \u092e\u0942\u0932 \u092c\u093e\u0924\u0947\u0902 \u0938\u092e\u091d\u0947\u0902\u0917\u0947, \u091c\u093f\u0938\u092e\u0947\u0902 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u0940 \u0938\u0902\u0930\u091a\u0928\u093e \u0915\u094b \u0938\u092e\u091d\u0928\u093e, variables, operators, \u0914\u0930 data types \u0915\u0947 \u0938\u093e\u0925 \u0915\u093e\u092e \u0915\u0930\u0928\u093e \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0964 \u0907\u0938 \u092f\u0942\u0928\u093f\u091f \u0915\u0947 \u0905\u0902\u0924 \u0924\u0915, \u0906\u092a\u0915\u0947 \u092a\u093e\u0938 \u0905\u092a\u0928\u0947 \u0938\u094d\u0935\u092f\u0902 \u0915\u0947 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0906\u0927\u093e\u0930\u092d\u0942\u0924 \u0915\u094c\u0936\u0932 \u0939\u094b\u0902\u0917\u0947!</p>"},{"location":"hi/chapters/chapter05/#51-python","title":"5.1 Python \u0915\u093e \u092a\u0930\u093f\u091a\u092f","text":"<p>Python \u0915\u094d\u092f\u093e \u0939\u0948? Python \u090f\u0915 \u0909\u091a\u094d\u091a-\u0938\u094d\u0924\u0930\u0940\u092f, interpreted programming language \u0939\u0948 \u091c\u094b \u0905\u092a\u0928\u0940 \u0938\u0930\u0932\u0924\u093e \u0914\u0930 \u092a\u0920\u0928\u0940\u092f\u0924\u093e \u0915\u0947 \u0932\u093f\u090f \u091c\u093e\u0928\u0940 \u091c\u093e\u0924\u0940 \u0939\u0948\u0964 \u092f\u0939 developers \u0915\u094b \u0905\u0928\u094d\u092f programming languages \u091c\u0948\u0938\u0947 C++ \u092f\u093e Java \u0915\u0940 \u0924\u0941\u0932\u0928\u093e \u092e\u0947\u0902 \u0915\u092e \u0932\u093e\u0907\u0928\u094b\u0902 \u092e\u0947\u0902 \u0915\u094b\u0921 \u0932\u093f\u0916\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0940 \u0939\u0948\u0964</p> <p>Python \u0915\u0940 \u0935\u093f\u0936\u0947\u0937\u0924\u093e\u090f\u0901: - \u0938\u0940\u0916\u0928\u0947 \u0914\u0930 \u0909\u092a\u092f\u094b\u0917 \u092e\u0947\u0902 \u0906\u0938\u093e\u0928: Python \u0915\u0940 syntax \u0938\u0930\u0932 \u0914\u0930 \u0938\u094d\u092a\u0937\u094d\u091f \u0939\u0948, \u091c\u094b \u0907\u0938\u0947 \u0936\u0941\u0930\u0941\u0906\u0924\u0940 \u0932\u094b\u0917\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0906\u0926\u0930\u094d\u0936 \u092c\u0928\u093e\u0924\u0940 \u0939\u0948\u0964 - Interpreted: Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u094b \u0932\u093e\u0907\u0928 \u0926\u0930 \u0932\u093e\u0907\u0928 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u091c\u093f\u0938\u0938\u0947 \u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u0914\u0930 debugging \u0906\u0938\u093e\u0928 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964 - Cross-Platform: Python \u0935\u093f\u092d\u093f\u0928\u094d\u0928 operating systems \u091c\u0948\u0938\u0947 Windows, macOS, \u0914\u0930 Linux \u092a\u0930 \u0915\u093e\u092e \u0915\u0930\u0924\u093e \u0939\u0948\u0964 - \u0935\u094d\u092f\u093e\u092a\u0915 Libraries: Python \u092e\u0947\u0902 libraries \u0915\u093e \u090f\u0915 \u0938\u092e\u0943\u0926\u094d\u0927 \u0938\u0902\u0917\u094d\u0930\u0939 \u0939\u0948 \u091c\u094b data manipulation, web development, \u0914\u0930 machine learning \u091c\u0948\u0938\u0947 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u092c\u0939\u0941\u0924 \u0906\u0938\u093e\u0928 \u092c\u0928\u093e\u0924\u093e \u0939\u0948\u0964</p> <p>Interactive Mode \u092c\u0928\u093e\u092e Script Mode: - Interactive Mode: \u0906\u092a Python \u0915\u094b\u0921 \u0915\u094b \u0938\u0940\u0927\u0947 Python interpreter \u092e\u0947\u0902 \u091f\u093e\u0907\u092a \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0924\u093e\u0924\u094d\u0915\u093e\u0932\u093f\u0915 \u092a\u0930\u093f\u0923\u093e\u092e \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 \u092f\u0939 \u091b\u094b\u091f\u0947 \u0915\u094b\u0921 \u0938\u094d\u0928\u093f\u092a\u0947\u091f\u094d\u0938 \u0915\u093e \u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u0924\u094d\u0915\u0943\u0937\u094d\u091f \u0939\u0948\u0964 - Script Mode: \u0906\u092a \u0905\u092a\u0928\u0947 \u0915\u094b\u0921 \u0915\u094b \u090f\u0915 \u092b\u093c\u093e\u0907\u0932 (\u091c\u093f\u0938\u0947 script \u0915\u0939\u093e \u091c\u093e\u0924\u093e \u0939\u0948) \u092e\u0947\u0902 \u0932\u093f\u0916 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u092a\u0942\u0930\u0947 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u094b \u090f\u0915 \u0938\u093e\u0925 \u091a\u0932\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 \u092f\u0939 \u092c\u0921\u093c\u0947 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917\u0940 \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter05/#52-python","title":"5.2 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u0940 \u0938\u0902\u0930\u091a\u0928\u093e","text":"<p>\u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 \u090f\u0915 \u0938\u0930\u0932 \u0938\u0902\u0930\u091a\u0928\u093e \u0915\u093e \u092a\u093e\u0932\u0928 \u0915\u0930\u0924\u093e \u0939\u0948:</p> <ol> <li>Comments: \u092f\u0947 non-executable \u092a\u0902\u0915\u094d\u0924\u093f\u092f\u093e\u0901 \u0939\u0948\u0902 \u091c\u094b \u092c\u0924\u093e\u0924\u0947 \u0939\u0948\u0902 \u0915\u093f \u0915\u094b\u0921 \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948\u0964 Python \u092e\u0947\u0902, comments <code>#</code> \u0938\u0947 \u0936\u0941\u0930\u0942 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964     <pre><code># \u092f\u0939 \u090f\u0915 \u091f\u093f\u092a\u094d\u092a\u0923\u0940 \u0939\u0948  \n</code></pre></li> <li>Statements: \u0915\u094b\u0921 \u0915\u0940 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u092a\u0902\u0915\u094d\u0924\u093f \u090f\u0915 statement \u0939\u094b\u0924\u0940 \u0939\u0948\u0964 \u090f\u0915 statement \u090f\u0915 \u0928\u093f\u0930\u094d\u0926\u0947\u0936 \u0939\u0948 \u091c\u093f\u0938\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964     <pre><code>print(\"Hello, World!\")  \n</code></pre></li> <li>Indentation: Python indentation (spaces \u092f\u093e tabs) \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u094b\u0921 \u0915\u0947 \u092c\u094d\u0932\u0949\u0915\u094b\u0902 \u0915\u094b \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0930\u0924\u093e \u0939\u0948, \u091c\u0948\u0938\u0947 \u0932\u0942\u092a \u092f\u093e \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u0947 \u0936\u0930\u0940\u0930\u0964 \u0905\u0928\u094d\u092f \u092d\u093e\u0937\u093e\u0913\u0902 \u0915\u0947 \u0935\u093f\u092a\u0930\u0940\u0924, Python \u0915\u094b\u0937\u094d\u0920\u0915\u094b\u0902 (<code>{}</code>) \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0928\u0939\u0940\u0902 \u0915\u0930\u0924\u093e \u0939\u0948\u0964     <pre><code>if age &gt;= 18:  \n    print(\"\u0906\u092a \u0935\u092f\u0938\u094d\u0915 \u0939\u0948\u0902\")  \n</code></pre></li> </ol>"},{"location":"hi/chapters/chapter05/#53-identifiers-keywords-constants-variables","title":"5.3 Identifiers, Keywords, Constants, \u0914\u0930 Variables","text":""},{"location":"hi/chapters/chapter05/#identifiers","title":"Identifiers:","text":"<p>Identifiers \u0935\u0947 \u0928\u093e\u092e \u0939\u0948\u0902 \u091c\u094b variables, functions, \u092f\u093e \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u092e\u0947\u0902 \u0905\u0928\u094d\u092f \u0938\u0902\u0938\u094d\u0925\u093e\u0913\u0902 \u0915\u094b \u0926\u093f\u090f \u091c\u093e\u0924\u0947 \u0939\u0948\u0902\u0964 \u0907\u0928\u094d\u0939\u0947\u0902 \u090f\u0915 \u0905\u0915\u094d\u0937\u0930 (A-Z \u092f\u093e a-z) \u092f\u093e \u090f\u0915 underscore (<code>_</code>) \u0938\u0947 \u0936\u0941\u0930\u0942 \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f \u0914\u0930 \u0907\u0938\u0915\u0947 \u092c\u093e\u0926 \u0905\u0915\u094d\u0937\u0930, \u0905\u0902\u0915\u094b\u0902 (0-9), \u092f\u093e underscores \u0915\u093e \u092a\u093e\u0932\u0928 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964 Identifiers case-sensitive \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>my_variable = 10\nAge = 25\n</code></pre></p>"},{"location":"hi/chapters/chapter05/#keywords","title":"Keywords:","text":"<p>Keywords Python \u092e\u0947\u0902 \u0906\u0930\u0915\u094d\u0937\u093f\u0924 \u0936\u092c\u094d\u0926 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u093f\u0928\u0915\u093e \u0935\u093f\u0936\u0947\u0937 \u0905\u0930\u094d\u0925 \u0939\u094b\u0924\u093e \u0939\u0948 \u0914\u0930 \u0907\u0928\u094d\u0939\u0947\u0902 identifiers \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0909\u092a\u092f\u094b\u0917 \u0928\u0939\u0940\u0902 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e\u0964 Python keywords \u0915\u0947 \u0915\u0941\u091b \u0909\u0926\u093e\u0939\u0930\u0923 \u0939\u0948\u0902 <code>if</code>, <code>else</code>, <code>while</code>, <code>for</code>, <code>def</code>, <code>return</code>\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>if age &gt; 18:\n    print(\"\u092f\u094b\u0917\u094d\u092f\")  \n</code></pre></p>"},{"location":"hi/chapters/chapter05/#constants","title":"Constants:","text":"<p>Constants \u0935\u0947 \u092e\u093e\u0928 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u0947 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u0915\u0947 \u0926\u094c\u0930\u093e\u0928 \u0928\u0939\u0940\u0902 \u092c\u0926\u0932\u0924\u0947\u0964 Python \u092e\u0947\u0902 \u090f\u0915 \u0938\u0916\u094d\u0924 constant \u0918\u094b\u0937\u0923\u093e \u0928\u0939\u0940\u0902 \u0939\u0948, \u0932\u0947\u0915\u093f\u0928 \u092a\u0930\u0902\u092a\u0930\u093e \u0915\u0947 \u0905\u0928\u0941\u0938\u093e\u0930, \u091c\u094b variables \u0928\u0939\u0940\u0902 \u092c\u0926\u0932\u0947 \u091c\u093e\u0928\u0947 \u091a\u093e\u0939\u093f\u090f, \u0909\u0928\u094d\u0939\u0947\u0902 \u0938\u092d\u0940 \u092c\u0921\u093c\u0947 \u0905\u0915\u094d\u0937\u0930\u094b\u0902 \u092e\u0947\u0902 \u0932\u093f\u0916\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>PI = 3.14\nMAX_SIZE = 100\n</code></pre></p>"},{"location":"hi/chapters/chapter05/#variables","title":"Variables:","text":"<p>\u090f\u0915 variable \u090f\u0915 \u0928\u093e\u092e\u093f\u0924 \u0938\u094d\u091f\u094b\u0930\u0947\u091c \u0938\u094d\u0925\u093e\u0928 \u0939\u0948 \u091c\u094b \u090f\u0915 \u092e\u093e\u0928 \u0930\u0916\u0924\u093e \u0939\u0948, \u091c\u094b \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u0947 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u0915\u0947 \u0926\u094c\u0930\u093e\u0928 \u092c\u0926\u0932 \u0938\u0915\u0924\u093e \u0939\u0948\u0964 Variables \u0915\u094b <code>=</code> operator \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u094c\u0902\u092a\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>name = \"Alice\"\nage = 20\n</code></pre></p>"},{"location":"hi/chapters/chapter05/#54-operators","title":"5.4 Operators \u0915\u0947 \u092a\u094d\u0930\u0915\u093e\u0930","text":"<p>Python \u092e\u0947\u0902 \u0915\u0908 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u0947 operators \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b variables \u0914\u0930 \u092e\u093e\u0928\u094b\u0902 \u092a\u0930 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 operations \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</p> <ol> <li> <p>Arithmetic Operators:     \u092c\u0941\u0928\u093f\u092f\u093e\u0926\u0940 \u0917\u0923\u093f\u0924\u0940\u092f \u0938\u0902\u091a\u093e\u0932\u0928 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964  </p> <ul> <li><code>+</code> (\u091c\u094b\u0921\u093c), <code>-</code> (\u0918\u091f\u093e\u0928\u093e), <code>*</code> (\u0917\u0941\u0923\u093e), <code>/</code> (\u092d\u093e\u0917), <code>//</code> (Floor Division), <code>%</code> (Modulus), <code>**</code> (Exponentiation)  </li> </ul> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>result = 10 + 5  # 10 \u0914\u0930 5 \u0915\u094b \u091c\u094b\u0921\u093c\u0924\u093e \u0939\u0948  \n</code></pre></p> </li> <li> <p>Comparison Operators:     \u0926\u094b \u092e\u093e\u0928\u094b\u0902 \u0915\u0940 \u0924\u0941\u0932\u0928\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964  </p> <ul> <li><code>==</code> (\u0938\u092e\u093e\u0928), <code>!=</code> (\u0905\u0938\u092e\u093e\u0928), <code>&gt;</code> (\u092c\u0921\u093c\u093e), <code>&lt;</code> (\u091b\u094b\u091f\u093e), <code>&gt;=</code> (\u092c\u0921\u093c\u093e \u092f\u093e \u0938\u092e\u093e\u0928), <code>&lt;=</code> (\u091b\u094b\u091f\u093e \u092f\u093e \u0938\u092e\u093e\u0928)  </li> </ul> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>if 10 &gt; 5:  \n    print(\"\u0938\u0924\u094d\u092f\")  \n</code></pre></p> </li> <li> <p>Logical Operators:     \u0938\u094d\u0925\u093f\u0924\u093f\u092f\u094b\u0902 \u0915\u0947 \u092c\u092f\u093e\u0928\u094b\u0902 \u0915\u094b \u0938\u0902\u092f\u094b\u091c\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964  </p> <ul> <li><code>and</code>, <code>or</code>, <code>not</code> </li> </ul> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>if age &gt; 18 and age &lt; 60:  \n    print(\"\u092f\u094b\u0917\u094d\u092f\")  \n</code></pre></p> </li> <li> <p>Assignment Operators:     \u092e\u093e\u0928\u094b\u0902 \u0915\u094b variables \u092e\u0947\u0902 \u0905\u0938\u093e\u0907\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964  </p> <ul> <li><code>=</code>, <code>+=</code>, <code>-=</code>, <code>*=</code>, <code>/=</code>, \u0906\u0926\u093f\u0964  </li> </ul> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>x = 10  \nx += 5  # x = x + 5 \u0915\u0947 \u092c\u0930\u093e\u092c\u0930  \n</code></pre></p> </li> </ol>"},{"location":"hi/chapters/chapter05/#55-operators","title":"5.5 Operators \u0915\u0940 \u092a\u094d\u0930\u093e\u0925\u092e\u093f\u0915\u0924\u093e","text":"<p>Operator precedence \u092f\u0939 \u0928\u093f\u0930\u094d\u0927\u093e\u0930\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0915\u093f \u0915\u093f\u0938\u0940 \u0905\u092d\u093f\u0935\u094d\u092f\u0915\u094d\u0924\u093f \u092e\u0947\u0902 operations \u0915\u094b \u0915\u093f\u0938 \u0915\u094d\u0930\u092e \u092e\u0947\u0902 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u0909\u0926\u093e\u0939\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f, \u0917\u0941\u0923\u0928 \u0914\u0930 \u092d\u093e\u0917 \u091c\u094b\u0921\u093c\u0928\u0947 \u0914\u0930 \u0918\u091f\u093e\u0928\u0947 \u0915\u0940 \u0924\u0941\u0932\u0928\u093e \u092e\u0947\u0902 \u0909\u091a\u094d\u091a \u092a\u094d\u0930\u093e\u0925\u092e\u093f\u0915\u0924\u093e \u0930\u0916\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>result = 2 + 3 * 4  # \u092a\u0939\u0932\u0947 \u0917\u0941\u0923\u093e \u0939\u094b\u0924\u093e \u0939\u0948, \u0907\u0938\u0932\u093f\u090f \u092a\u0930\u093f\u0923\u093e\u092e 14 \u0939\u0948\n</code></pre></p> <p>Operations \u0915\u0947 \u0915\u094d\u0930\u092e \u0915\u094b \u092c\u0926\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0906\u092a parentheses \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902: <pre><code>result = (2 + 3) * 4  # \u0905\u092c \u092a\u0939\u0932\u0947 \u091c\u094b\u0921\u093c \u0939\u094b\u0924\u093e \u0939\u0948, \u0907\u0938\u0932\u093f\u090f \u092a\u0930\u093f\u0923\u093e\u092e 20 \u0939\u0948\n</code></pre></p>"},{"location":"hi/chapters/chapter05/#56-data-types","title":"5.6 Data Types","text":"<p>Python \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0905\u0902\u0924\u0930\u094d\u0928\u093f\u0930\u094d\u092e\u093f\u0924 data types \u0915\u093e \u0938\u092e\u0930\u094d\u0925\u0928 \u0915\u0930\u0924\u093e \u0939\u0948:</p> <ol> <li>int: \u092a\u0942\u0930\u094d\u0923\u093e\u0902\u0915 (\u091c\u0948\u0938\u0947, 10, -5)\u0964</li> <li>float: \u0926\u0936\u092e\u0932\u0935 \u0935\u093e\u0932\u0947 \u0938\u0902\u0916\u094d\u092f\u093e (\u091c\u0948\u0938\u0947, 3.14, -2.5)\u0964</li> <li>str: Strings (\u0915\u094b\u091f\u094b\u0902 \u092e\u0947\u0902 \u0938\u0902\u0932\u0917\u094d\u0928 \u092a\u093e\u0920) (\u091c\u0948\u0938\u0947, \"Hello\")\u0964</li> <li>bool: Boolean \u092e\u093e\u0928 (<code>True</code> \u092f\u093e <code>False</code>)\u0964</li> <li>list: \u092e\u093e\u0928\u094b\u0902 \u0915\u093e \u090f\u0915 \u0915\u094d\u0930\u092e\u092c\u0926\u094d\u0927 \u0938\u0902\u0917\u094d\u0930\u0939 (\u091c\u0948\u0938\u0947, <code>[1, 2, 3]</code>)\u0964</li> <li>tuple: \u090f\u0915 list \u0915\u0947 \u0938\u092e\u093e\u0928, \u0932\u0947\u0915\u093f\u0928 \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f (\u091c\u0948\u0938\u0947, <code>(1, 2, 3)</code>)\u0964</li> <li>dict: \u0915\u0941\u0902\u091c\u0940-\u092e\u0942\u0932\u094d\u092f \u091c\u094b\u0921\u093c\u094b\u0902 \u0915\u093e \u090f\u0915 \u0938\u0902\u0917\u094d\u0930\u0939 (\u091c\u0948\u0938\u0947, <code>{\"name\": \"Alice\", \"age\": 25}</code>)\u0964</li> </ol> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>age = 25  # int\npi = 3.14  # float\nname = \"John\"  # str\nis_adult = True  # bool\n</code></pre></p>"},{"location":"hi/chapters/chapter05/#57-statements-expressions-comments","title":"5.7 Statements, Expressions, \u0914\u0930 Comments","text":""},{"location":"hi/chapters/chapter05/#statements","title":"Statements:","text":"<p>\u090f\u0915 statement \u090f\u0915 \u0915\u094b\u0921 \u0915\u0940 \u092a\u0902\u0915\u094d\u0924\u093f \u0939\u094b\u0924\u0940 \u0939\u0948 \u091c\u094b \u090f\u0915 \u0935\u093f\u0936\u0947\u0937 \u0915\u094d\u0930\u093f\u092f\u093e \u0915\u0930\u0924\u0940 \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>print(\"Hello, World!\")  # \u092f\u0939 \u090f\u0915 statement \u0939\u0948\n</code></pre></p>"},{"location":"hi/chapters/chapter05/#expressions","title":"Expressions:","text":"<p>\u090f\u0915 expression \u090f\u0915 \u0910\u0938\u0947 variables, operators, \u0914\u0930 \u092e\u093e\u0928\u094b\u0902 \u0915\u093e \u0938\u0902\u092f\u094b\u091c\u0928 \u0939\u094b\u0924\u093e \u0939\u0948 \u091c\u094b \u090f\u0915 \u092a\u0930\u093f\u0923\u093e\u092e \u0932\u094c\u091f\u093e\u0924\u093e \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>result = 10 + 5  # \u092f\u0939 \u090f\u0915 expression \u0939\u0948\n</code></pre></p>"},{"location":"hi/chapters/chapter05/#comments","title":"Comments:","text":"<p>Comments \u0915\u094b\u0921 \u092e\u0947\u0902 non-executable \u092a\u0902\u0915\u094d\u0924\u093f\u092f\u093e\u0901 \u0939\u094b\u0924\u0940 \u0939\u0948\u0902 \u091c\u094b \u092c\u0924\u093e\u0924\u0947 \u0939\u0948\u0902 \u0915\u093f \u0915\u094b\u0921 \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u0907\u0928\u094d\u0939\u0947\u0902 <code>#</code> \u092a\u094d\u0930\u0924\u0940\u0915 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u092c\u0928\u093e\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code># \u092f\u0939 \u090f\u0915 \u091f\u093f\u092a\u094d\u092a\u0923\u0940 \u0939\u0948\nprint(\"Hello!\")  # \u092f\u0939 Hello! \u0915\u094b \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\n</code></pre></p>"},{"location":"hi/chapters/chapter05/#58-input-output-statements","title":"5.8 Input \u0914\u0930 Output Statements","text":""},{"location":"hi/chapters/chapter05/#input","title":"Input:","text":"<p><code>input()</code> function \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u094b \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u0947 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u0915\u0947 \u0926\u094c\u0930\u093e\u0928 \u0921\u0947\u091f\u093e \u0907\u0928\u092a\u0941\u091f \u0915\u0930\u0928\u0947</p> <p>\u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>name = input(\"\u0905\u092a\u0928\u093e \u0928\u093e\u092e \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902: \")\nprint(\"\u0928\u092e\u0938\u094d\u0924\u0947, \" + name + \"!\")\n</code></pre></p>"},{"location":"hi/chapters/chapter05/#output","title":"Output:","text":"<p><code>print()</code> function \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0921\u0947\u091f\u093e \u0915\u094b \u0915\u0902\u0938\u094b\u0932 \u092a\u0930 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>age = 20\nprint(\"\u092f\u0939 \u090f\u0915 \u0906\u0909\u091f\u092a\u0941\u091f \u0938\u094d\u091f\u0947\u091f\u092e\u0947\u0902\u091f \u0939\u0948\")\nprint(\"\u0906\u092a\u0915\u0940 \u0906\u092f\u0941:\", age)\n</code></pre></p>"},{"location":"hi/chapters/chapter05/#59","title":"5.9 \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u0915\u093e\u0930 \u0930\u0942\u092a\u093e\u0902\u0924\u0930\u0923","text":"<p>Python \u0906\u092a\u0915\u094b \u090f\u0915 \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u094b \u0926\u0942\u0938\u0930\u0947 \u092e\u0947\u0902 \u0930\u0942\u092a\u093e\u0902\u0924\u0930\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964 \u0907\u0938\u0947 type conversion \u0915\u0939\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter05/#implicit-conversion","title":"Implicit Conversion:","text":"<p>Python \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e\u0928\u0941\u0938\u093e\u0930 \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u0915\u093e\u0930\u094b\u0902 \u0915\u094b \u0930\u0942\u092a\u093e\u0902\u0924\u0930\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>x = 10  # int  \ny = 10.5 # float\nz = x + y  # z \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u090f\u0915 float \u0939\u094b\u0917\u093e (20.5)\n</code></pre></p>"},{"location":"hi/chapters/chapter05/#explicit-conversion","title":"Explicit Conversion:","text":"<p>\u0906\u092a <code>int()</code>, <code>float()</code>, \u0914\u0930 <code>str()</code> \u091c\u0948\u0938\u0940 \u092b\u093c\u0902\u0915\u094d\u0936\u0928\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u0915\u093e\u0930\u094b\u0902 \u0915\u094b \u092e\u0948\u0928\u094d\u092f\u0941\u0905\u0932 \u0930\u0942\u092a \u0938\u0947 \u0930\u0942\u092a\u093e\u0902\u0924\u0930\u093f\u0924 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>x = \"100\"\ny = int(x)  # \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \"100\" \u0915\u094b \u092a\u0942\u0930\u094d\u0923\u093e\u0902\u0915 100 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\n</code></pre></p>"},{"location":"hi/chapters/chapter05/#510","title":"5.10 \u0921\u093f\u092c\u0917\u093f\u0902\u0917","text":"<p>\u0921\u093f\u092c\u0917\u093f\u0902\u0917 \u0906\u092a\u0915\u0947 \u0915\u094b\u0921 \u092e\u0947\u0902 \u0924\u094d\u0930\u0941\u091f\u093f\u092f\u094b\u0902 (bugs) \u0915\u094b \u0916\u094b\u091c\u0928\u0947 \u0914\u0930 \u0920\u0940\u0915 \u0915\u0930\u0928\u0947 \u0915\u0940 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0939\u0948\u0964 Python \u0924\u094d\u0930\u0941\u091f\u093f \u0938\u0902\u0926\u0947\u0936 \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u094b \u0938\u092e\u0938\u094d\u092f\u093e\u0913\u0902 \u0915\u093e \u092a\u0924\u093e \u0932\u0917\u093e\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 IDEs (Integrated Development Environments) \u091c\u0948\u0938\u0947 \u0909\u092a\u0915\u0930\u0923 \u0906\u092a\u0915\u094b \u0915\u094b\u0921 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0915\u0926\u092e \u0938\u0947 \u0915\u0926\u092e \u091a\u0932\u0928\u0947 \u0914\u0930 \u0907\u0938\u0915\u0940 \u0915\u093e\u0930\u094d\u092f\u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u0915\u093e \u0905\u0935\u0932\u094b\u0915\u0928 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0947 \u0939\u0948\u0902 \u0924\u093e\u0915\u093f \u0906\u092a \u0938\u092e\u0938\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u0916\u094b\u091c \u0938\u0915\u0947\u0902 \u0914\u0930 \u0909\u0928\u094d\u0939\u0947\u0902 \u0920\u0940\u0915 \u0915\u0930 \u0938\u0915\u0947\u0902\u0964</p>"},{"location":"hi/chapters/chapter05/#_2","title":"\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940:","text":"<ul> <li>Interpreter: \u090f\u0915 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u091c\u094b \u0915\u094b\u0921 \u0915\u094b \u092a\u0902\u0915\u094d\u0924\u093f \u0926\u0930 \u092a\u0902\u0915\u094d\u0924\u093f \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>Identifiers: \u0935\u0947\u0930\u093f\u090f\u092c\u0932\u094d\u0938, \u092b\u093c\u0902\u0915\u094d\u0936\u0902\u0938 \u0906\u0926\u093f \u0915\u094b \u0926\u093f\u090f \u0917\u090f \u0928\u093e\u092e\u0964</li> <li>Keywords: Python \u092e\u0947\u0902 \u0906\u0930\u0915\u094d\u0937\u093f\u0924 \u0936\u092c\u094d\u0926 \u091c\u094b \u092a\u0939\u091a\u093e\u0928\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0909\u092a\u092f\u094b\u0917 \u0928\u0939\u0940\u0902 \u0915\u093f\u090f \u091c\u093e \u0938\u0915\u0924\u0947 (\u091c\u0948\u0938\u0947, <code>if</code>, <code>else</code>)\u0964</li> <li>Constants: \u092e\u093e\u0928 \u091c\u094b \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u0915\u0947 \u0926\u094c\u0930\u093e\u0928 \u0928\u0939\u0940\u0902 \u092c\u0926\u0932\u0924\u0947\u0964</li> <li>Variables: \u0928\u093e\u092e\u093f\u0924 \u0938\u094d\u0925\u093e\u0928 \u091c\u094b \u0921\u0947\u091f\u093e \u092e\u093e\u0928\u094b\u0902 \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</li> <li>Operators: \u092a\u094d\u0930\u0924\u0940\u0915 \u091c\u094b \u0938\u0902\u091a\u093e\u0932\u0928 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 (\u091c\u0948\u0938\u0947, <code>+</code>, <code>*</code>)\u0964</li> <li>Data Types: \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u0947 \u0921\u0947\u091f\u093e (\u091c\u0948\u0938\u0947, <code>int</code>, <code>str</code>, <code>float</code>)\u0964</li> <li>Expressions: \u0935\u0947\u0930\u093f\u090f\u092c\u0932\u094d\u0938, \u092e\u093e\u0928\u094b\u0902 \u0914\u0930 \u0911\u092a\u0930\u0947\u091f\u0930\u094b\u0902 \u0915\u093e \u0938\u0902\u092f\u094b\u091c\u0928 \u091c\u094b \u090f\u0915 \u092a\u0930\u093f\u0923\u093e\u092e \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>Comments: \u0915\u094b\u0921 \u092e\u0947\u0902 \u0917\u0948\u0930-\u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928\u0940\u092f \u091f\u0947\u0915\u094d\u0938\u094d\u091f \u0915\u0940 \u092a\u0902\u0915\u094d\u0924\u093f\u092f\u093e\u0901 \u091c\u094b \u092c\u0924\u093e\u0924\u0940 \u0939\u0948\u0902 \u0915\u093f \u0915\u094b\u0921 \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>Conversion: \u0921\u0947\u091f\u093e \u0915\u094b \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0938\u0947 \u0926\u0942\u0938\u0930\u0947 \u092a\u094d\u0930\u0915\u093e\u0930 \u092e\u0947\u0902 \u092c\u0926\u0932\u0928\u093e\u0964</li> </ul>"},{"location":"hi/chapters/chapter05/#_3","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940","text":"<ol> <li> <p>\u090f\u0915 interpreter \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948?     a) Python \u0915\u094b\u0921 \u0915\u094b \u092e\u0936\u0940\u0928 \u092d\u093e\u0937\u093e \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948     b) Python \u0915\u094b\u0921 \u0915\u094b \u092a\u0902\u0915\u094d\u0924\u093f \u0926\u0930 \u092a\u0902\u0915\u094d\u0924\u093f \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948     c) Python \u0915\u094b\u0921 \u0915\u094b \u092c\u093e\u0907\u0928\u0930\u0940 \u092e\u0947\u0902 \u0938\u0902\u0915\u0932\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948     d) Python \u0915\u094b\u0921 \u092e\u0947\u0902 \u0924\u094d\u0930\u0941\u091f\u093f\u092f\u094b\u0902 \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0924\u093e \u0939\u0948  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: \u092a\u0939\u091a\u093e\u0928\u0915\u0930\u094d\u0924\u093e Python \u092e\u0947\u0902 \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0938\u0947 \u0936\u0941\u0930\u0942 \u0939\u094b \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e Python \u0915\u0940 \u0915\u0940\u0935\u0930\u094d\u0921 \u0928\u0939\u0940\u0902 \u0939\u0948?     a) for     b) return     c) while     d) print  </p> </li> <li> <p>Python \u092e\u0947\u0902 \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u0917\u0941\u0923\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u0911\u092a\u0930\u0947\u091f\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) +     b) *     c) /     d) %  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: Python \u092e\u0947\u0902 <code>input()</code> \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u094b \u0906\u0909\u091f\u092a\u0941\u091f \u0926\u093f\u0916\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>Python \u092e\u0947\u0902 \u0915\u094c\u0928 \u0938\u093e \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u0915\u093e\u0930 \u0935\u0930\u094d\u0923\u094b\u0902 \u0915\u0940 \u090f\u0915 \u0936\u094d\u0930\u0943\u0902\u0916\u0932\u093e \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u093e \u0939\u0948?     a) int     b) float     c) str     d) bool  </p> </li> <li> <p>Python \u092e\u0947\u0902 \u091f\u093f\u092a\u094d\u092a\u0923\u093f\u092f\u093e\u0901 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u092a\u094d\u0930\u0924\u0940\u0915 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) <code>//</code>     b) <code>#</code>     c) <code>/* */</code>     d) <code>\"\"\" \"\"\"</code> </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: Python \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e\u0928\u0941\u0938\u093e\u0930 \u092a\u0942\u0930\u094d\u0923\u093e\u0902\u0915 \u0915\u094b \u092b\u094d\u0932\u094b\u091f \u092e\u0947\u0902 \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e Python \u092e\u0947\u0902 \u090f\u0915 expression \u0915\u093e \u0909\u0926\u093e\u0939\u0930\u0923 \u0939\u0948?     a) print(\"Hello, World!\")     b) x = 10 + 5     c) # \u092f\u0939 \u090f\u0915 \u091f\u093f\u092a\u094d\u092a\u0923\u0940 \u0939\u0948     d) input(\"\u0905\u092a\u0928\u093e \u0928\u093e\u092e \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902\")  </p> </li> <li> <p>\u0921\u093f\u092c\u0917\u093f\u0902\u0917 \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0915\u094b\u0921 \u0932\u093f\u0916\u0928\u093e     b) \u0915\u094b\u0921 \u0915\u093e \u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u0915\u0930\u0928\u093e     c) \u0915\u094b\u0921 \u092e\u0947\u0902 \u0924\u094d\u0930\u0941\u091f\u093f\u092f\u094b\u0902 \u0915\u094b \u0916\u094b\u091c\u0928\u0947 \u0914\u0930 \u0920\u0940\u0915 \u0915\u0930\u0928\u0947 \u0915\u0940 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e     d) \u0915\u094b\u0921 \u0915\u093e \u0926\u0938\u094d\u0924\u093e\u0935\u0947\u091c\u0940\u0915\u0930\u0923 \u0915\u0930\u0928\u093e  </p> </li> </ol>"},{"location":"hi/chapters/chapter05/#_4","title":"\u0909\u0924\u094d\u0924\u0930","text":"<ol> <li>b) Python \u0915\u094b\u0921 \u0915\u094b \u092a\u0902\u0915\u094d\u0924\u093f \u0926\u0930 \u092a\u0902\u0915\u094d\u0924\u093f \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948</li> <li>\u0917\u0932\u0924</li> <li>d) print</li> <li>b) *</li> <li>\u0917\u0932\u0924</li> <li>c) str</li> <li>b) <code>#</code></li> <li>\u0938\u0939\u0940</li> <li>b) x = 10 + 5</li> <li>c) \u0915\u094b\u0921 \u092e\u0947\u0902 \u0924\u094d\u0930\u0941\u091f\u093f\u092f\u094b\u0902 \u0915\u094b \u0916\u094b\u091c\u0928\u0947 \u0914\u0930 \u0920\u0940\u0915 \u0915\u0930\u0928\u0947 \u0915\u0940 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e</li> </ol> <p>\u0907\u0938 \u0907\u0915\u093e\u0908 \u0928\u0947 \u0906\u092a\u0915\u094b Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u0915\u0947 \u092e\u0942\u0932 \u0938\u093f\u0926\u094d\u0927\u093e\u0902\u0924\u094b\u0902 \u0938\u0947 \u092a\u0930\u093f\u091a\u093f\u0924 \u0915\u0930\u093e\u092f\u093e \u0939\u0948, \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u0940 \u0938\u0902\u0930\u091a\u0928\u093e \u0915\u094b \u0938\u092e\u091d\u0928\u0947 \u0938\u0947 \u0932\u0947\u0915\u0930 \u0935\u0947\u0930\u093f\u090f\u092c\u0932\u094d\u0938, \u0911\u092a\u0930\u0947\u091f\u0930, \u0914\u0930 \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u0915\u093e\u0930\u094b\u0902 \u0915\u0947 \u0938\u093e\u0925 \u0915\u093e\u0930\u094d\u092f \u0915\u0930\u0928\u0947 \u0924\u0915\u0964 \u0906\u092a \u0905\u092c \u0915\u094b\u0921\u093f\u0902\u0917 \u0936\u0941\u0930\u0942 \u0915\u0930\u0928\u0947 \u0914\u0930 Python \u0915\u0940 \u0905\u0928\u0902\u0924 \u0938\u0902\u092d\u093e\u0935\u0928\u093e\u0913\u0902 \u0915\u093e \u0905\u0928\u094d\u0935\u0947\u0937\u0923 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0924\u0948\u092f\u093e\u0930 \u0939\u0948\u0902!</p>"},{"location":"hi/chapters/chapter05a/","title":"\u092f\u0942\u0928\u093f\u091f 5a: Flow of Control and Functions","text":""},{"location":"hi/chapters/chapter05a/#_1","title":"\u092a\u0930\u093f\u091a\u092f","text":"<p>\u091c\u092c \u0939\u092e \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0924\u0947 \u0939\u0948\u0902, \u0924\u092c \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u0947 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u0915\u093e \u0915\u094d\u0930\u092e \u092c\u0939\u0941\u0924 \u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0939\u094b\u0924\u093e \u0939\u0948\u0964 Python \u092e\u0947\u0902, \u0939\u092e control structures \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u0915\u0947 \u092a\u094d\u0930\u0935\u093e\u0939 \u0915\u094b \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u093f\u0924 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u091c\u0948\u0938\u0947 sequence, selection, \u0914\u0930 repetition\u0964 \u0939\u092e functions \u0915\u093e \u092d\u0940 \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u0924\u093e\u0915\u093f \u0939\u092e\u093e\u0930\u093e \u0915\u094b\u0921 \u092e\u0949\u0921\u094d\u092f\u0942\u0932\u0930 \u0914\u0930 \u092a\u0941\u0928\u0903 \u0909\u092a\u092f\u094b\u0917 \u092f\u094b\u0917\u094d\u092f \u0939\u094b \u0938\u0915\u0947\u0964 \u0907\u0938 \u092f\u0942\u0928\u093f\u091f \u092e\u0947\u0902, \u0939\u092e \u092f\u0939 \u091c\u093e\u0928\u0947\u0902\u0917\u0947 \u0915\u093f \u092f\u0947 control structures \u0915\u0948\u0938\u0947 \u0915\u093e\u092e \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 Python \u092e\u0947\u0902 functions \u0915\u094b \u0915\u0948\u0938\u0947 \u0932\u093f\u0916\u093e \u0914\u0930 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u0907\u0938 \u092f\u0942\u0928\u093f\u091f \u0915\u0947 \u0905\u0902\u0924 \u0924\u0915, \u0906\u092a \u0905\u0927\u093f\u0915 \u0915\u0941\u0936\u0932 \u0914\u0930 \u0905\u091a\u094d\u091b\u0940 \u0924\u0930\u0939 \u0938\u0947 \u0938\u0902\u0930\u091a\u093f\u0924 \u0915\u094b\u0921 \u0932\u093f\u0916\u0928\u0947 \u092e\u0947\u0902 \u0938\u0915\u094d\u0937\u092e \u0939\u094b\u0902\u0917\u0947\u0964</p>"},{"location":"hi/chapters/chapter05a/#5a1-control-structures","title":"5a.1 Control Structures","text":"<p>Control Structures \u0909\u0928 \u092e\u094c\u0932\u093f\u0915 \u0928\u093f\u0930\u094d\u092e\u093e\u0923 \u0916\u0902\u0921\u094b\u0902 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u092e\u0947\u0902 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u0915\u0947 \u092a\u094d\u0930\u0935\u093e\u0939 \u0915\u094b \u0928\u093f\u0930\u094d\u0927\u093e\u0930\u093f\u0924 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964 Python \u0924\u0940\u0928 \u092e\u0941\u0916\u094d\u092f control structures \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u093e \u0939\u0948:</p>"},{"location":"hi/chapters/chapter05a/#1-sequence","title":"1. Sequence","text":"<p>\u090f\u0915 sequence \u092e\u0947\u0902, \u092c\u092f\u093e\u0928 \u090f\u0915 \u0915\u0947 \u092c\u093e\u0926 \u090f\u0915 \u0909\u0938 \u0915\u094d\u0930\u092e \u092e\u0947\u0902 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u093f\u0938\u092e\u0947\u0902 \u0935\u0947 \u092a\u094d\u0930\u0915\u091f \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964 \u092f\u0939 \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u0923 \u092a\u094d\u0930\u0935\u093e\u0939 \u0915\u093e \u0938\u092c\u0938\u0947 \u0938\u0930\u0932 \u0930\u0942\u092a \u0939\u0948 \u091c\u0939\u093e\u0901 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0915\u094b\u0921 \u0915\u0940 \u092a\u0902\u0915\u094d\u0924\u093f \u0905\u0928\u0941\u0915\u094d\u0930\u092e\u093f\u0915 \u0930\u0942\u092a \u0938\u0947 \u091a\u0932\u0924\u0940 \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>print(\"Step 1\")\nprint(\"Step 2\")\nprint(\"Step 3\")\n</code></pre></p> <p>\u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u0909\u0926\u093e\u0939\u0930\u0923 \u092e\u0947\u0902, \u091a\u0930\u0923\u094b\u0902 \u0915\u093e \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u0905\u0928\u0941\u0915\u094d\u0930\u092e \u092e\u0947\u0902 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u090f\u0915 \u0915\u0947 \u092c\u093e\u0926 \u090f\u0915\u0964</p>"},{"location":"hi/chapters/chapter05a/#2-selection-decision","title":"2. Selection (Decision)","text":"<p>Selection \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u094b \u0915\u0941\u091b \u0936\u0930\u094d\u0924\u094b\u0902 \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0930\u093e\u0938\u094d\u0924\u0947 \u0932\u0947\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964 Python \u092e\u0947\u0902, selection \u0915\u094b conditional statements \u091c\u0948\u0938\u0947 <code>if</code>, <code>if-else</code>, \u0914\u0930 <code>elif</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u0902\u092d\u093e\u0932\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> <ul> <li> <p>if Statement: \u092f\u0926\u093f \u0915\u094b\u0908 \u0936\u0930\u094d\u0924 \u0938\u0939\u0940 \u0939\u0948 \u0924\u094b \u090f\u0915 \u0915\u094b\u0921 \u0915\u093e \u092c\u094d\u0932\u0949\u0915 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>if age &gt;= 18:  \n  print(\"You are an adult\")  \n</code></pre></p> </li> <li> <p>if-else Statement: \u092f\u0926\u093f \u0936\u0930\u094d\u0924 \u0938\u0939\u0940 \u0939\u0948 \u0924\u094b \u090f\u0915 \u0915\u094b\u0921 \u0915\u093e \u092c\u094d\u0932\u0949\u0915 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u092f\u0926\u093f \u092f\u0939 \u0917\u0932\u0924 \u0939\u0948 \u0924\u094b \u0926\u0942\u0938\u0930\u093e \u092c\u094d\u0932\u0949\u0915\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>if age &gt;= 18:  \n  print(\"Adult\")  \nelse:  \n  print(\"Not an adult\")  \n</code></pre></p> </li> <li> <p>Nested if Statement: \u090f\u0915 \u0915\u0947 \u092d\u0940\u0924\u0930 \u0915\u0908 <code>if</code> statements\u0964 \u092f\u0939 \u0915\u0908 \u0936\u0930\u094d\u0924\u094b\u0902 \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>if age &gt;= 18:  \n  if age &gt;= 65:  \n     print(\"Senior Citizen\")  \n  else:  \n     print(\"Adult\")  \n</code></pre></p> </li> </ul>"},{"location":"hi/chapters/chapter05a/#3-repetition-iteration","title":"3. Repetition (Iteration)","text":"<p>Repetition \u0915\u094b\u0921 \u0915\u0947 \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u0915\u094b \u092c\u093e\u0930-\u092c\u093e\u0930 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948 \u091c\u092c \u0924\u0915 \u0915\u093f \u0915\u094b\u0908 \u0936\u0930\u094d\u0924 \u092a\u0942\u0930\u0940 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964 Python \u092e\u0947\u0902 repetition \u0915\u0947 \u0932\u093f\u090f loops \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948: for loops \u0914\u0930 while loops\u0964</p> <ul> <li> <p>for Loop: \u090f\u0915 \u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0938\u0902\u0916\u094d\u092f\u093e \u092e\u0947\u0902 \u0915\u094b\u0921 \u0915\u0947 \u092c\u094d\u0932\u0949\u0915 \u0915\u094b \u0926\u094b\u0939\u0930\u093e\u0924\u093e \u0939\u0948, \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 \u090f\u0915 sequence \u091c\u0948\u0938\u0947 \u0915\u093f list \u092f\u093e \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u0940 \u0936\u094d\u0930\u0943\u0902\u0916\u0932\u093e \u092a\u0930 \u0907\u091f\u0930\u0947\u091f \u0915\u0930\u0924\u0947 \u0939\u0941\u090f\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>for i in range(5):  \n  print(i)  \n</code></pre></p> <p>\u092f\u0939 \u0932\u0942\u092a \u0938\u0902\u0916\u094d\u092f\u093e\u090f\u0901 0 \u0938\u0947 4 \u0924\u0915 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0917\u093e\u0964  </p> </li> <li> <p>while Loop: \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u0915\u094b\u0921 \u0915\u094b \u0924\u092c \u0924\u0915 \u0926\u094b\u0939\u0930\u093e\u0924\u093e \u0939\u0948 \u091c\u092c \u0924\u0915 \u0915\u093f \u0936\u0930\u094d\u0924 \u0938\u0939\u0940 \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>i = 0  \nwhile i &lt; 5:  \n  print(i)  \n  i += 1  \n</code></pre></p> <p>\u092f\u0939 \u0932\u0942\u092a \u092d\u0940 \u0938\u0902\u0916\u094d\u092f\u093e\u090f\u0901 0 \u0938\u0947 4 \u0924\u0915 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0917\u093e, <code>for</code> \u0932\u0942\u092a \u0915\u0947 \u0938\u092e\u093e\u0928\u0964  </p> </li> <li> <p>break Statement: \u0932\u0942\u092a \u0915\u094b \u0938\u092d\u0940 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f\u092f\u094b\u0902 \u0915\u0947 \u092a\u0942\u0930\u0947 \u0939\u094b\u0928\u0947 \u0938\u0947 \u092a\u0939\u0932\u0947 \u0939\u0940 \u0938\u092e\u093e\u092a\u094d\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>for i in range(5):  \n  if i == 3:  \n     break  \n  print(i)  \n</code></pre></p> <p>\u092f\u0939 0, 1, 2 \u0915\u094b \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0917\u093e \u0914\u0930 \u092b\u093f\u0930 \u091c\u092c <code>i</code> 3 \u0915\u0947 \u092c\u0930\u093e\u092c\u0930 \u0939\u094b\u0917\u093e \u0924\u094b \u0930\u0941\u0915 \u091c\u093e\u090f\u0917\u093e\u0964  </p> </li> <li> <p>continue Statement: \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f \u092e\u0947\u0902 \u0936\u0947\u0937 \u0915\u094b\u0921 \u0915\u094b \u091b\u094b\u0921\u093c \u0926\u0947\u0924\u093e \u0939\u0948 \u0914\u0930 \u0905\u0917\u0932\u0940 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f \u092a\u0930 \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>for i in range(5):  \n  if i == 3:  \n     continue  \n  print(i)  \n</code></pre></p> <p>\u092f\u0939 0, 1, 2, 4 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0917\u093e, 3 \u0915\u094b \u091b\u094b\u0921\u093c\u0924\u0947 \u0939\u0941\u090f\u0964  </p> </li> </ul>"},{"location":"hi/chapters/chapter05a/#5a2-functions","title":"5a.2 Functions","text":"<p>Functions \u092a\u0941\u0928\u0903 \u0909\u092a\u092f\u094b\u0917 \u092f\u094b\u0917\u094d\u092f \u0915\u094b\u0921 \u0915\u0947 \u092c\u094d\u0932\u0949\u0915 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0915\u093e\u0930\u094d\u092f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0921\u093f\u091c\u093c\u093e\u0907\u0928 \u0915\u093f\u090f \u091c\u093e\u0924\u0947 \u0939\u0948\u0902\u0964 Functions \u0906\u092a\u0915\u094b \u0926\u094b\u0939\u0930\u093e\u0935 \u0935\u093e\u0932\u0947 \u0915\u094b\u0921 \u0915\u094b \u0932\u093f\u0916\u0928\u0947 \u0938\u0947 \u092c\u091a\u093e\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0906\u092a\u0915\u0947 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u094b \u0938\u092e\u091d\u0928\u0947 \u0914\u0930 \u092c\u0928\u093e\u090f \u0930\u0916\u0928\u0947 \u092e\u0947\u0902 \u0906\u0938\u093e\u0928 \u092c\u0928\u093e\u0924\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter05a/#functions","title":"\u0939\u092e\u0947\u0902 Functions \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0915\u094d\u092f\u094b\u0902 \u0939\u0948?","text":"<p>Functions \u0939\u092e\u0947\u0902 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0947 \u0939\u0948\u0902: 1. \u092c\u0921\u093c\u0947 \u0938\u092e\u0938\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u091b\u094b\u091f\u0947, \u092a\u094d\u0930\u092c\u0902\u0927\u0928\u0940\u092f \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u092e\u0947\u0902 \u0935\u093f\u092d\u093e\u091c\u093f\u0924 \u0915\u0930\u0928\u093e\u0964 2. \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u0947 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u092d\u093e\u0917\u094b\u0902 \u092e\u0947\u0902 \u090f\u0915 \u0939\u0940 \u0915\u094b\u0921 \u0915\u094b \u0926\u094b\u0939\u0930\u093e\u0928\u0947 \u0938\u0947 \u092c\u091a\u0928\u093e\u0964 3. \u0915\u094b\u0921 \u0915\u0947 \u0938\u0902\u0917\u0920\u0928, \u092a\u0920\u0928\u0940\u092f\u0924\u093e, \u0914\u0930 \u092e\u0949\u0921\u094d\u092f\u0942\u0932\u0930\u093f\u091f\u0940 \u092e\u0947\u0902 \u0938\u0941\u0927\u093e\u0930 \u0915\u0930\u0928\u093e\u0964</p>"},{"location":"hi/chapters/chapter05a/#types-of-functions","title":"Types of Functions","text":"<ol> <li> <p>Built-in Functions: Python \u092e\u0947\u0902 \u0915\u0908 built-in functions \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u0948\u0938\u0947 <code>print()</code>, <code>len()</code>, \u0914\u0930 <code>sum()</code>. \u092f\u0947 \u092a\u0942\u0930\u094d\u0935-\u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 functions \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u093f\u0928\u094d\u0939\u0947\u0902 \u0906\u092a \u0938\u0940\u0927\u0947 \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u092c\u093f\u0928\u093e \u0909\u0928\u094d\u0939\u0947\u0902 \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u093f\u090f\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>print(len(\"Hello\"))  # Outputs 5  \n</code></pre></p> </li> <li> <p>User-defined Functions: \u092f\u0947 \u0935\u094b functions \u0939\u0948\u0902 \u091c\u093f\u0928\u094d\u0939\u0947\u0902 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0926\u094d\u0935\u093e\u0930\u093e \u0935\u093f\u0936\u0947\u0937 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092c\u0928\u093e\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964 \u0906\u092a <code>def</code> \u0915\u0940\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 function \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>def greet(name):  \n  print(f\"Hello, {name}!\")  \n\ngreet(\"Alice\")  # Outputs: Hello, Alice!  \n</code></pre></p> </li> </ol>"},{"location":"hi/chapters/chapter05a/#structure-of-a-function","title":"Structure of a Function","text":"<p>\u090f\u0915 Python function \u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0938\u0902\u0930\u091a\u0928\u093e \u0915\u093e \u092a\u093e\u0932\u0928 \u0915\u0930\u0924\u093e \u0939\u0948:</p> <ol> <li> <p>Function Definition: \u092f\u0939\u093e\u0901 function \u092c\u0928\u093e\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u092f\u0939 <code>def</code> \u0915\u0940\u0935\u0930\u094d\u0921 \u0938\u0947 \u0936\u0941\u0930\u0942 \u0939\u094b\u0924\u093e \u0939\u0948, \u0907\u0938\u0915\u0947 \u092c\u093e\u0926 function \u0915\u093e \u0928\u093e\u092e, \u0915\u094b\u0937\u094d\u0920\u0915 \u0914\u0930 \u090f\u0915 \u0915\u0949\u0932\u0928 \u0939\u094b\u0924\u093e \u0939\u0948\u0964 function \u0915\u093e \u0936\u0930\u0940\u0930 \u0907\u0902\u0921\u0947\u0902\u091f\u0947\u0921 \u0939\u094b\u0924\u093e \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>def function_name(parameters):  \n  # function body  \n</code></pre></p> </li> <li> <p>Function Call: function \u0915\u094b \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0906\u092a \u0907\u0938\u0947 \u0907\u0938\u0915\u0947 \u0928\u093e\u092e \u0938\u0947 \u092c\u0941\u0932\u093e\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0915\u094b\u0908 \u0906\u0935\u0936\u094d\u092f\u0915 \u0924\u0930\u094d\u0915 \u092a\u093e\u0938 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>function_name(arguments)  \n</code></pre></p> </li> </ol>"},{"location":"hi/chapters/chapter05a/#user-defined-function","title":"User-Defined Function \u0915\u093e \u0909\u0926\u093e\u0939\u0930\u0923","text":"<p>\u092f\u0939\u093e\u0901 \u090f\u0915 function \u0915\u093e \u0909\u0926\u093e\u0939\u0930\u0923 \u0939\u0948 \u091c\u094b \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u091c\u094b\u0921\u093c\u0924\u093e \u0939\u0948 \u0914\u0930 \u092a\u0930\u093f\u0923\u093e\u092e \u0932\u094c\u091f\u093e\u0924\u093e \u0939\u0948:</p> <pre><code>def add_numbers(a, b):\n     return a + b  \n\nresult = add_numbers(5, 3)\nprint(result)  # Outputs: 8\n</code></pre>"},{"location":"hi/chapters/chapter05a/#function-parameters-return-values","title":"Function Parameters \u0914\u0930 Return Values","text":"<ul> <li> <p>Parameters: Functions \u0907\u0928\u092a\u0941\u091f \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 parameters \u0932\u0947 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u0924\u093e\u0915\u093f \u0909\u0928 \u0907\u0928\u092a\u0941\u091f \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0938\u0902\u091a\u093e\u0932\u0928 \u0915\u093f\u090f \u091c\u093e \u0938\u0915\u0947\u0902\u0964 parameters \u0915\u094b function definition \u0915\u0947 \u0915\u094b\u0937\u094d\u0920\u0915\u094b\u0902 \u0915\u0947 \u092d\u0940\u0924\u0930 \u0928\u093f\u0930\u094d\u0926\u093f\u0937\u094d\u091f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>Return Values: Functions \u090f\u0915 \u092a\u0930\u093f\u0923\u093e\u092e \u0932\u094c\u091f\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f <code>return</code> \u0938\u094d\u091f\u0947\u091f\u092e\u0947\u0902\u091f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u094b function \u0915\u0947 \u0915\u0949\u0932 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u090f\u0915 \u091a\u0930 \u0915\u094b \u0938\u094c\u0902\u092a\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964</p> </li> </ul>"},{"location":"hi/chapters/chapter05a/#_2","title":"\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940","text":"<ul> <li>Sequence: \u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0915\u094d\u0930\u092e \u092e\u0947\u0902, \u090f\u0915 \u0915\u0947 \u092c\u093e\u0926 \u090f\u0915 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u093e \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928\u0964</li> <li>Selection: \u090f\u0915 control structure \u091c\u094b \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u094b \u0936\u0930\u094d\u0924\u094b\u0902 \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0930\u093e\u0938\u094d\u0924\u094b\u0902 \u0915\u094b \u091a\u0941\u0928\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948 (\u091c\u0948\u0938\u0947, if, if-else, nested if)\u0964</li> <li>Repetition: \u090f\u0915 control structure \u091c\u094b \u0915\u094b\u0921 \u0915\u0947 \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u0915\u0947 \u0926\u094b\u0939\u0930\u093e\u090f \u091c\u093e\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948 (\u091c\u0948\u0938\u0947, for, while)\u0964</li> <li>Iteration: loops \u091c\u0948\u0938\u0947 <code>for</code> \u0914\u0930 <code>while</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0915\u094b\u0921 \u0915\u0947 \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u0915\u094b \u0926\u094b\u0939\u0930\u093e\u0928\u093e\u0964</li> <li>If Statement: \u090f\u0915 \u0936\u0930\u094d\u0924\u0940\u092f \u0915\u0925\u0928 \u091c\u094b \u092f\u0926\u093f \u0915\u094b\u0908 \u0936\u0930\u094d\u0924 \u0938\u0939\u0940 \u0939\u094b \u0924\u094b \u0915\u094b\u0921 \u0915\u0947 \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u0915\u094b \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>If-Else Statement: \u090f\u0915 \u0936\u0930\u094d\u0924\u0940\u092f \u0915\u0925\u0928 \u091c\u094b \u090f\u0915 \u0936\u0930\u094d\u0924 \u0915\u0947 \u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924 \u0939\u094b\u0928\u0947 \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0926\u094b \u0915\u094b\u0921 \u0915\u0947 \u092c\u094d\u0932\u0949\u0915 \u092e\u0947\u0902 \u0938\u0947 \u090f\u0915 \u0915\u094b \u091a\u0941\u0928\u0924\u093e \u0939\u0948\u0964</li> <li>For Statement: \u090f\u0915 \u0932\u0942\u092a \u091c\u094b \u0915\u094b\u0921 \u0915\u0947 \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u0915\u094b \u090f\u0915 \u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0938\u0902\u0916\u094d\u092f\u093e \u092e\u0947\u0902 \u092c\u093e\u0930 \u0926\u094b\u0939\u0930\u093e\u0924\u093e \u0939\u0948\u0964</li> <li>While Statement: \u090f\u0915 \u0932\u0942\u092a \u091c\u094b \u090f\u0915 \u0915\u094b\u0921 \u0915\u0947 \u092c\u094d\u0932\u0949\u0915 \u0915\u094b \u0924\u092c \u0924\u0915 \u0926\u094b\u0939\u0930\u093e\u0924\u093e \u0939\u0948 \u091c\u092c \u0924\u0915 \u0915\u093f \u0915\u094b\u0908 \u0936\u0930\u094d\u0924 \u0938\u0939\u0940 \u0939\u094b\u0964</li> <li>Break Statement: \u090f\u0915 \u0932\u0942\u092a \u0915\u094b \u0907\u0938\u0915\u0947 \u0938\u092d\u0940 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f\u092f\u094b\u0902 \u0915\u094b \u092a\u0942\u0930\u093e \u0915\u0930\u0928\u0947 \u0938\u0947 \u092a\u0939\u0932\u0947 \u0938\u092e\u093e\u092a\u094d\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>Continue Statement: \u090f\u0915 \u0932\u0942\u092a \u0915\u0940 \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f \u092e\u0947\u0902 \u0936\u0947\u0937 \u0915\u094b\u0921 \u0915\u094b \u091b\u094b\u0921\u093c \u0926\u0947\u0924\u093e</li> </ul> <p>\u0939\u0948 \u0914\u0930 \u0905\u0917\u0932\u0940 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f \u092a\u0930 \u091c\u093e\u0924\u093e \u0939\u0948\u0964 - Functions: \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0915\u093e\u0930\u094d\u092f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0921\u093f\u091c\u093c\u093e\u0907\u0928 \u0915\u093f\u090f \u0917\u090f \u092a\u0941\u0928\u0903 \u0909\u092a\u092f\u094b\u0917 \u092f\u094b\u0917\u094d\u092f \u0915\u094b\u0921 \u0915\u0947 \u092c\u094d\u0932\u0949\u0915\u0964 - User-Defined Functions: \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u0930 \u0926\u094d\u0935\u093e\u0930\u093e \u092c\u0928\u093e\u090f \u0917\u090f functions\u0964 - Built-in Functions: \u092a\u0942\u0930\u094d\u0935\u0928\u093f\u0930\u094d\u0927\u093e\u0930\u093f\u0924 functions \u091c\u094b Python \u0915\u0947 \u0938\u093e\u0925 \u0906\u0924\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter05a/#_3","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940","text":"<ol> <li> <p>\u0915\u094c\u0928 \u0938\u093e control structure \u0915\u094b\u0921 \u0915\u094b \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0915\u094d\u0930\u092e \u092e\u0947\u0902 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948?     a) Sequence     b) Selection     c) Iteration     d) Function  </p> </li> <li> <p>\u0915\u093f\u0938 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e \u0915\u0925\u0928 \u090f\u0915 \u0936\u0930\u094d\u0924 \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0926\u094b \u0938\u0902\u092d\u093e\u0935\u093f\u0924 \u092a\u0930\u093f\u0923\u093e\u092e\u094b\u0902 \u0915\u0947 \u092c\u0940\u091a \u091a\u092f\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) for loop     b) if-else statement     c) while loop     d) break statement  </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: \u090f\u0915 <code>for</code> \u0932\u0942\u092a \u0924\u092c \u0924\u0915 \u0915\u094b\u0921 \u0915\u0947 \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u0915\u094b \u0926\u094b\u0939\u0930\u093e\u0924\u093e \u0939\u0948 \u091c\u092c \u0924\u0915 \u0936\u0930\u094d\u0924 \u0938\u0939\u0940 \u0939\u0948\u0964  </p> </li> <li> <p>\u090f\u0915 \u0932\u0942\u092a \u092e\u0947\u0902 <code>break</code> \u0938\u094d\u091f\u0947\u091f\u092e\u0947\u0902\u091f \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948?     a) \u0932\u0942\u092a \u0915\u094b \u0926\u094b\u0939\u0930\u093e\u0924\u093e \u0939\u0948     b) \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f \u0915\u094b \u091b\u094b\u0921\u093c\u0924\u093e \u0939\u0948     c) \u0932\u0942\u092a \u0915\u094b \u0938\u092e\u093e\u092a\u094d\u0924 \u0915\u0930\u0924\u093e \u0939\u0948     d) \u0932\u0942\u092a \u0915\u094b \u0930\u094b\u0915\u0924\u093e \u0939\u0948  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e Python \u092e\u0947\u0902 \u090f\u0915 built-in function \u0915\u093e \u0909\u0926\u093e\u0939\u0930\u0923 \u0939\u0948?     a) print()     b) greet()     c) sum_numbers()     d) calculate_sum()  </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: Python \u092e\u0947\u0902 functions \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u094b\u0921 \u0915\u094b \u0938\u0902\u0917\u0920\u093f\u0924 \u0914\u0930 \u092a\u0941\u0928\u0903 \u0909\u092a\u092f\u094b\u0917 \u092f\u094b\u0917\u094d\u092f \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>Python \u092e\u0947\u0902 user-defined function \u0915\u094b \u0915\u0948\u0938\u0947 \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902?     a) <code>def</code> \u0915\u0940\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902     b) <code>function</code> \u0915\u0940\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902     c) <code>for</code> \u0915\u0940\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902     d) <code>loop</code> \u0915\u0940\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902  </p> </li> <li> <p>\u091c\u092c \u0906\u092a \u092f\u0939 \u091c\u093e\u0928\u0924\u0947 \u0939\u0948\u0902 \u0915\u093f \u0906\u092a \u0915\u093f\u0924\u0928\u0940 \u092c\u093e\u0930 \u0915\u094b\u0921 \u0915\u093e \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u0926\u094b\u0939\u0930\u093e\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b \u0915\u093f\u0938 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e \u0932\u0942\u092a \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) while loop     b) if-else statement     c) for loop     d) break statement  </p> </li> <li> <p><code>continue</code> \u0938\u094d\u091f\u0947\u091f\u092e\u0947\u0902\u091f \u0915\u093e \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0932\u0942\u092a \u0938\u0947 \u092c\u093e\u0939\u0930 \u0928\u093f\u0915\u0932\u0947\u0902     b) \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f \u0915\u0947 \u0936\u0947\u0937 \u0915\u094b \u091b\u094b\u0921\u093c\u0947\u0902 \u0914\u0930 \u0905\u0917\u0932\u0947 \u092a\u0930 \u091c\u093e\u090f\u0901     c) \u0932\u0942\u092a \u0915\u094b \u0905\u0928\u093f\u0936\u094d\u091a\u093f\u0924\u0915\u093e\u0932 \u0915\u0947 \u0932\u093f\u090f \u0926\u094b\u0939\u0930\u093e\u090f\u0901     d) \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u0947 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u0915\u094b \u0930\u094b\u0915\u0947\u0902  </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: User-defined functions \u0915\u094b \u0939\u092e\u0947\u0936\u093e \u090f\u0915 \u092e\u093e\u0928 \u0932\u094c\u091f\u093e\u0928\u093e \u091a\u093e\u0939\u093f\u090f\u0964  </p> </li> </ol>"},{"location":"hi/chapters/chapter05a/#_4","title":"\u0909\u0924\u094d\u0924\u0930","text":"<ol> <li>a) Sequence  </li> <li>b) if-else statement  </li> <li>\u0905\u0938\u0924\u094d\u092f  </li> <li>c) \u0932\u0942\u092a \u0915\u094b \u0938\u092e\u093e\u092a\u094d\u0924 \u0915\u0930\u0924\u093e \u0939\u0948  </li> <li>a) print()  </li> <li>\u0938\u0924\u094d\u092f  </li> <li>a) <code>def</code> \u0915\u0940\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902  </li> <li>c) for loop  </li> <li>b) \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f \u0915\u0947 \u0936\u0947\u0937 \u0915\u094b \u091b\u094b\u0921\u093c\u0947\u0902 \u0914\u0930 \u0905\u0917\u0932\u0947 \u092a\u0930 \u091c\u093e\u090f\u0901  </li> <li>\u0905\u0938\u0924\u094d\u092f  </li> </ol>"},{"location":"hi/chapters/chapter05b/","title":"\u092f\u0942\u0928\u093f\u091f 5b: \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0914\u0930 \u0938\u0942\u091a\u093f\u092f\u093e\u0901","text":""},{"location":"hi/chapters/chapter05b/#_1","title":"\u092a\u0930\u093f\u091a\u092f","text":"<p>Python \u092e\u0947\u0902, strings \u0914\u0930 lists \u0926\u094b \u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u0915\u093e\u0930 \u0939\u0948\u0902 \u091c\u094b \u0906\u092a\u0915\u094b \u0921\u0947\u091f\u093e \u0915\u0947 \u0905\u0928\u0941\u0915\u094d\u0930\u092e \u0915\u0947 \u0938\u093e\u0925 \u0915\u093e\u092e \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0947 \u0939\u0948\u0902\u0964 Strings \u0906\u092a\u0915\u094b \u091f\u0947\u0915\u094d\u0938\u094d\u091f \u0915\u0947 \u0938\u093e\u0925 \u0915\u093e\u092e \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0947 \u0939\u0948\u0902, \u091c\u092c\u0915\u093f lists \u0906\u092a\u0915\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u092f\u093e \u0905\u0928\u094d\u092f \u0935\u0938\u094d\u0924\u0941\u0913\u0902 \u091c\u0948\u0938\u0947 \u0921\u0947\u091f\u093e \u0938\u0902\u0917\u094d\u0930\u0939 \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0914\u0930 \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0947 \u0939\u0948\u0902\u0964 \u0907\u0938 \u092f\u0942\u0928\u093f\u091f \u092e\u0947\u0902, \u0939\u092e \u0938\u0940\u0916\u0947\u0902\u0917\u0947 \u0915\u093f Python \u092e\u0947\u0902 strings \u0914\u0930 lists \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0948\u0938\u0947 \u0915\u0930\u0947\u0902 \u0914\u0930 \u0909\u0928\u094d\u0939\u0947\u0902 \u0915\u0948\u0938\u0947 \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0947\u0902, \u0938\u093e\u0925 \u0939\u0940 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0939\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u0928 \u092a\u0930 \u0911\u092a\u0930\u0947\u0936\u0928 \u0915\u0948\u0938\u0947 \u0915\u0930\u0947\u0902\u0964</p>"},{"location":"hi/chapters/chapter05b/#5b1","title":"5b.1 \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917\u094d\u0938","text":"<p>Python \u092e\u0947\u0902 \u090f\u0915 string \u090f\u0915 \u091a\u0930\u093f\u0924\u094d\u0930\u094b\u0902 \u0915\u093e \u0905\u0928\u0941\u0915\u094d\u0930\u092e \u0939\u0948 \u091c\u093f\u0938\u0947 \u090f\u0915\u0932 \u0909\u0926\u094d\u0927\u0930\u0923 (<code>' '</code>) \u092f\u093e \u0921\u092c\u0932 \u0909\u0926\u094d\u0927\u0930\u0923 (<code>\" \"</code>) \u092e\u0947\u0902 \u092c\u0902\u0926 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964 Strings \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093e\u0930\u094d\u092f\u0915\u094d\u0930\u092e \u092e\u0947\u0902 \u091f\u0947\u0915\u094d\u0938\u094d\u091f \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter05b/#_2","title":"\u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917\u094d\u0938 \u0915\u094b \u092a\u094d\u0930\u093e\u0930\u0902\u092d \u0915\u0930\u0928\u093e","text":"<p>\u0906\u092a \u090f\u0915 \u091a\u0930\u093f\u0924\u094d\u0930\u094b\u0902 \u0915\u0947 \u0905\u0928\u0941\u0915\u094d\u0930\u092e \u0915\u094b \u090f\u0915 \u091a\u0930 \u092e\u0947\u0902 \u0905\u0938\u093e\u0907\u0928 \u0915\u0930\u0915\u0947 \u090f\u0915 string \u0915\u094b \u092a\u094d\u0930\u093e\u0930\u0902\u092d \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>name = \"Alice\"\ngreeting = 'Hello, World!'\n</code></pre></p>"},{"location":"hi/chapters/chapter05b/#_3","title":"\u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917\u094d\u0938 \u0915\u094b \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930\u0928\u093e","text":"<p>\u0906\u092a indexing \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 string \u0915\u0947 \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u091a\u0930\u093f\u0924\u094d\u0930\u094b\u0902 \u0915\u094b \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 Python \u092e\u0947\u0902, indexing 0 \u0938\u0947 \u0936\u0941\u0930\u0942 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>name = \"Alice\"\nprint(name[0])  # \u0906\u0909\u091f\u092a\u0941\u091f: A\nprint(name[1])  # \u0906\u0909\u091f\u092a\u0941\u091f: l\n</code></pre></p>"},{"location":"hi/chapters/chapter05b/#_4","title":"\u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0911\u092a\u0930\u0947\u0936\u0928\u094d\u0938","text":"<p>Python \u092e\u0947\u0902 strings \u092a\u0930 \u0915\u093f\u090f \u091c\u093e\u0928\u0947 \u0935\u093e\u0932\u0947 \u0915\u0908 \u0911\u092a\u0930\u0947\u0936\u0928\u094d\u0938 \u0909\u092a\u0932\u092c\u094d\u0927 \u0939\u0948\u0902:</p> <ol> <li> <p>Concatenation: <code>+</code> \u0911\u092a\u0930\u0947\u091f\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0926\u094b \u092f\u093e \u0926\u094b \u0938\u0947 \u0905\u0927\u093f\u0915 strings \u0915\u094b \u092e\u093f\u0932\u093e\u090f\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>first_name = \"Alice\"  \nlast_name = \"Smith\"  \nfull_name = first_name + \" \" + last_name  # \u0906\u0909\u091f\u092a\u0941\u091f: Alice Smith  \n</code></pre></p> </li> <li> <p>Repetition: <code>*</code> \u0911\u092a\u0930\u0947\u091f\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 string \u0915\u094b \u0915\u0908 \u092c\u093e\u0930 \u0926\u094b\u0939\u0930\u093e\u090f\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>word = \"Hi! \"  \nprint(word * 3)  # \u0906\u0909\u091f\u092a\u0941\u091f: Hi! Hi! Hi!  \n</code></pre></p> </li> <li> <p>Slicing: \u0905\u0928\u0941\u0915\u094d\u0930\u092e \u0915\u0947 \u0907\u0902\u0921\u0947\u0915\u094d\u0938 \u0915\u0940 \u0938\u0940\u092e\u093e \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0909\u092a-\u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0928\u093f\u0915\u093e\u0932\u0947\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>name = \"Alice\"  \nprint(name[0:3])  # \u0906\u0909\u091f\u092a\u0941\u091f: Ali  \n</code></pre></p> </li> <li> <p>Length: <code>len()</code> \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 string \u092e\u0947\u0902 \u0935\u0930\u094d\u0923\u094b\u0902 \u0915\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u0916\u094b\u091c\u0947\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>message = \"Hello\"  \nprint(len(message))  # \u0906\u0909\u091f\u092a\u0941\u091f: 5  \n</code></pre></p> </li> <li> <p>Case Conversion: \u090f\u0915 string \u0915\u094b \u0905\u092a\u0930\u0915\u0947\u0938 \u092f\u093e \u0932\u094b\u0905\u0930\u0915\u0947\u0938 \u092e\u0947\u0902 \u092c\u0926\u0932\u0947\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>text = \"Hello\"  \nprint(text.upper())  # \u0906\u0909\u091f\u092a\u0941\u091f: HELLO  \nprint(text.lower())  # \u0906\u0909\u091f\u092a\u0941\u091f: hello  \n</code></pre></p> </li> <li> <p>String Methods: Strings \u0915\u0908 \u0909\u092a\u092f\u094b\u0917\u0940 \u0935\u093f\u0927\u093f\u092f\u094b\u0902 \u0915\u0947 \u0938\u093e\u0925 \u0906\u0924\u0940 \u0939\u0948\u0902, \u091c\u0948\u0938\u0947 <code>strip()</code> \u091c\u094b whitespace \u0915\u094b \u0939\u091f\u093e \u0926\u0947\u0924\u0940 \u0939\u0948, <code>replace()</code> \u091c\u094b \u0935\u0930\u094d\u0923\u094b\u0902 \u0915\u094b \u092c\u0926\u0932 \u0926\u0947\u0924\u0940 \u0939\u0948, \u0914\u0930 <code>find()</code> \u091c\u094b \u090f\u0915 \u0909\u092a-\u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0915\u094b \u0916\u094b\u091c\u0924\u0940 \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>text = \" Hello \"  \nprint(text.strip())  # \u0906\u0909\u091f\u092a\u0941\u091f: \"Hello\" (\u0906\u0917\u0947 \u0914\u0930 \u092a\u0940\u091b\u0947 \u0915\u0947 \u0938\u094d\u092a\u0947\u0938 \u0939\u091f\u093e \u0926\u0947\u0924\u093e \u0939\u0948)  \n</code></pre></p> </li> </ol>"},{"location":"hi/chapters/chapter05b/#5b2","title":"5b.2 \u0938\u0942\u091a\u093f\u092f\u093e\u0901","text":"<p>Python \u092e\u0947\u0902 \u090f\u0915 list \u0924\u0924\u094d\u0935\u094b\u0902 \u0915\u093e \u090f\u0915 \u0915\u094d\u0930\u092e\u092c\u0926\u094d\u0927 \u0938\u0902\u0917\u094d\u0930\u0939 \u0939\u0948 \u091c\u094b \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u0915\u093e\u0930\u094b\u0902, \u091c\u0948\u0938\u0947 \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902, strings, \u092f\u093e \u092f\u0939\u093e\u0902 \u0924\u0915 \u0915\u093f \u0905\u0928\u094d\u092f lists \u0915\u094b \u092d\u0940 \u0930\u0916 \u0938\u0915\u0924\u093e \u0939\u0948\u0964 Lists mutable \u0939\u0948\u0902, \u0905\u0930\u094d\u0925\u093e\u0924\u094d \u0906\u092a \u0907\u0928\u094d\u0939\u0947\u0902 \u092c\u0928\u093e\u090f \u091c\u093e\u0928\u0947 \u0915\u0947 \u092c\u093e\u0926 \u092c\u0926\u0932 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter05b/#_5","title":"\u0938\u0942\u091a\u093f\u092f\u094b\u0902 \u0915\u094b \u092a\u094d\u0930\u093e\u0930\u0902\u092d \u0915\u0930\u0928\u093e","text":"<p>\u0906\u092a \u0906\u0907\u091f\u092e \u0915\u094b \u0935\u0930\u094d\u0917\u093e\u0915\u093e\u0930 \u0915\u094b\u0937\u094d\u0920\u0915\u094b\u0902 <code>[]</code> \u0915\u0947 \u092d\u0940\u0924\u0930 \u0930\u0916\u0915\u0930 \u0914\u0930 \u0909\u0928\u094d\u0939\u0947\u0902 \u0905\u0932\u094d\u092a\u0935\u093f\u0930\u093e\u092e \u0938\u0947 \u0905\u0932\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 list \u092c\u0928\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>fruits = [\"apple\", \"banana\", \"cherry\"]\nnumbers = [1, 2, 3, 4, 5]\n</code></pre></p>"},{"location":"hi/chapters/chapter05b/#_6","title":"\u0938\u0942\u091a\u093f\u092f\u094b\u0902 \u0915\u094b \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930\u0928\u093e","text":"<p>\u0906\u092a indexing \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 list \u0915\u0947 \u0924\u0924\u094d\u0935\u094b\u0902 \u0915\u094b \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u0920\u0940\u0915 \u091c\u0948\u0938\u0947 strings \u092e\u0947\u0902\u0964 List indexing \u092d\u0940 0 \u0938\u0947 \u0936\u0941\u0930\u0942 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>fruits = [\"apple\", \"banana\", \"cherry\"]\nprint(fruits[0])  # \u0906\u0909\u091f\u092a\u0941\u091f: apple\n</code></pre></p>"},{"location":"hi/chapters/chapter05b/#_7","title":"\u0938\u0942\u091a\u0940 \u0911\u092a\u0930\u0947\u0936\u0928\u094d\u0938","text":"<p>Lists \u092a\u0930 \u0915\u093f\u090f \u091c\u093e\u0928\u0947 \u0935\u093e\u0932\u0947 \u0915\u0908 \u0911\u092a\u0930\u0947\u0936\u0928\u094d\u0938 \u0909\u092a\u0932\u092c\u094d\u0927 \u0939\u0948\u0902:</p> <ol> <li> <p>\u0938\u0942\u091a\u093f\u092f\u093e\u0901 \u092c\u0928\u093e\u0928\u093e: \u0906\u092a \u090f\u0915 \u0916\u093e\u0932\u0940 list \u092c\u0928\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u092c\u093e\u0926 \u092e\u0947\u0902 \u0909\u0938\u092e\u0947\u0902 \u0924\u0924\u094d\u0935 \u091c\u094b\u0921\u093c \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>my_list = []  \nmy_list.append(1)  \nmy_list.append(2)  \nprint(my_list)  # \u0906\u0909\u091f\u092a\u0941\u091f: [1, 2]  \n</code></pre></p> </li> <li> <p>\u0921\u0947\u091f\u093e \u0915\u0947 \u0938\u093e\u0925 \u0938\u0942\u091a\u093f\u092f\u093e\u0901 \u092a\u094d\u0930\u093e\u0930\u0902\u092d \u0915\u0930\u0928\u093e: \u0906\u092a \u090f\u0915 list \u092c\u0928\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0907\u0938\u0947 \u0938\u0940\u0927\u0947 \u0921\u0947\u091f\u093e \u0915\u0947 \u0938\u093e\u0925 \u092a\u094d\u0930\u093e\u0930\u0902\u092d \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>numbers = [1, 2, 3, 4]  \n</code></pre></p> </li> <li> <p>\u0938\u0942\u091a\u093f\u092f\u094b\u0902 \u0915\u093e Traversing: \u0906\u092a \u090f\u0915 <code>for</code> \u0932\u0942\u092a \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 list \u0915\u0947 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0924\u0924\u094d\u0935 \u0915\u094b \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0932\u0942\u092a \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>for fruit in fruits:  \n  print(fruit)  \n</code></pre></p> </li> <li> <p>\u0938\u0942\u091a\u093f\u092f\u094b\u0902 \u0915\u093e Manipulating:</p> <ul> <li>Appending: <code>append()</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 list \u0915\u0947 \u0905\u0902\u0924 \u092e\u0947\u0902 \u090f\u0915 \u0924\u0924\u094d\u0935 \u091c\u094b\u0921\u093c\u0947\u0902\u0964  </li> </ul> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>fruits.append(\"orange\")  \nprint(fruits)  # \u0906\u0909\u091f\u092a\u0941\u091f: ['apple', 'banana', 'cherry', 'orange']  \n</code></pre></p> <ul> <li>Inserting: <code>insert()</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0935\u093f\u0936\u0947\u0937 \u0907\u0902\u0921\u0947\u0915\u094d\u0938 \u092a\u0930 \u090f\u0915 \u0924\u0924\u094d\u0935 \u091c\u094b\u0921\u093c\u0947\u0902\u0964  </li> </ul> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>fruits.insert(1, \"blueberry\")  \nprint(fruits)  # \u0906\u0909\u091f\u092a\u0941\u091f: ['apple', 'blueberry', 'banana', 'cherry']  \n</code></pre></p> <ul> <li>Removing: <code>remove()</code> \u092f\u093e <code>pop()</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u0942\u091a\u0940 \u0938\u0947 \u090f\u0915 \u0924\u0924\u094d\u0935 \u0928\u093f\u0915\u093e\u0932\u0947\u0902\u0964  </li> </ul> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>fruits.remove(\"banana\")  \nprint(fruits)  # \u0906\u0909\u091f\u092a\u0941\u091f: ['apple', 'cherry']  \n</code></pre></p> <ul> <li>Sorting: <code>sort()</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u0942\u091a\u0940 \u092e\u0947\u0902 \u0924\u0924\u094d\u0935\u094b\u0902 \u0915\u094b \u0915\u094d\u0930\u092e\u092c\u0926\u094d\u0927 \u0915\u0930\u0947\u0902\u0964  </li> </ul> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>numbers = [4, 2, 3, 1]  \nnumbers.sort()  \nprint(numbers)  # \u0906\u0909\u091f\u092a\u0941\u091f: [1, 2, 3, 4]  \n</code></pre></p> </li> <li> <p>\u0938\u0942\u091a\u0940 \u0915\u0940 \u0932\u0902\u092c\u093e\u0908: \u0938\u0942\u091a\u0940 \u092e\u0947\u0902 \u0906\u0907\u091f\u092e \u0915\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f <code>len()</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>print(len(fruits))  # \u0906\u0909\u091f\u092a\u0941\u091f: 3  \n</code></pre></p> </li> </ol>"},{"location":"hi/chapters/chapter05b/#_8","title":"\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940","text":"<ul> <li>String: \u0909\u0926\u094d\u0927\u0930\u0923\u094b\u0902 \u092e\u0947\u0902 \u092c\u0902\u0926 \u0915\u093f\u090f \u0917\u090f \u091a\u0930\u093f\u0924\u094d\u0930\u094b\u0902 \u0915\u093e \u0905\u0928\u0941\u0915\u094d\u0930\u092e\u0964</li> <li>Initialization: \u090f\u0915 \u091a\u0930 \u092f\u093e \u0921\u0947\u091f\u093e \u0938\u0902\u0930\u091a\u0928\u093e \u0915\u094b \u092e\u093e\u0928 \u0905\u0938\u093e\u0907\u0928 \u0915\u0930\u0928\u093e (\u091c\u0948\u0938\u0947, \u090f\u0915 string \u092f\u093e list \u092c\u0928\u093e\u0928\u093e)\u0964</li> <li>Access: indexing \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 string \u092f\u093e list \u0915\u0947 \u0924\u0924\u094d\u0935\u094b\u0902 \u0915\u094b \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u093e\u0964</li> <li>String Operations: strings \u092a\u0930 \u0915\u093f\u090f \u091c\u093e\u0928\u0947 \u0935\u093e\u0932\u0947 \u0915\u094d\u0930\u093f\u092f\u093e\u090f\u0901, \u091c\u0948\u0938\u0947 concatenation, slicing, \u092f\u093e case conversion\u0964</li> <li>List: \u090f\u0915 \u0915\u094d\u0930\u092e\u092c\u0926\u094d\u0927 \u0938\u0902\u0917\u094d\u0930\u0939 \u091c\u094b \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u0915\u093e\u0930\u094b\u0902 \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948\u0964</li> <li>Traversing: \u090f\u0915 \u0938\u0942\u091a\u0940 \u092e\u0947\u0902 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0906\u0907\u091f\u092e \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0932\u0942\u092a \u0915\u0930\u0928\u093e \u0924\u093e\u0915\u093f \u0909\u0938\u0947 \u090f\u0915\u094d\u0938\u0947\u0938 \u092f\u093e \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0947\u0964</li> <li>Manipulation: \u0924\u0924\u094d\u0935\u094b\u0902 \u0915\u094b \u091c\u094b\u0921\u093c\u0928\u0947, \u0939\u091f\u093e\u0928\u0947, \u092f\u093e \u092c\u0926\u0932\u0928\u0947 \u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e \u090f\u0915 \u0938\u0942\u091a\u0940 \u0915\u094b \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0915\u0930\u0928\u093e\u0964</li> </ul>"},{"location":"hi/chapters/chapter05b/#_9","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940","text":"<ol> <li> <p>\u0906\u092a \u090f\u0915 string <code>name = \"John\"</code> \u092e\u0947\u0902 \u092a\u0939\u0932\u0947 \u091a\u0930\u093f\u0924\u094d\u0930 \u0915\u094b \u0915\u0948\u0938\u0947 \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930\u0947\u0902\u0917\u0947?     a) <code>name[1]</code>     b) <code>name[0]</code>     c) <code>name[2]</code>     d) <code>name[3]</code> </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: \u0906\u092a <code>+</code> \u0911\u092a\u0930\u0947\u091f\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0926\u094b strings \u0915\u094b concatenation \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u0948? <pre><code>text = \"Hello, World!\"  \nprint(text[0:5])  \n</code></pre>     a) Hello,     b) World     c) Hello     d) ello  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u0940 \u090f\u0915 list \u0915\u093e \u0909\u0926\u093e\u0939\u0930\u0923 \u0939\u0948?     a) `1, 2</p> </li> </ol> <p>, 3<code>b)</code>(1, 2, 3)<code>c)</code>[1, 2, 3]<code>d)</code>`  </p> <ol> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: Python \u092e\u0947\u0902 lists immutable \u0939\u0948\u0902\u0964  </p> </li> <li> <p>\u0906\u092a \u090f\u0915 \u0938\u0942\u091a\u0940 <code>my_list</code> \u092e\u0947\u0902 \u090f\u0915 \u0924\u0924\u094d\u0935 \u0915\u094b \u0915\u0948\u0938\u0947 append \u0915\u0930\u0947\u0902\u0917\u0947?     a) <code>my_list.add(5)</code>     b) <code>my_list.append(5)</code>     c) <code>my_list.insert(5)</code>     d) <code>my_list.push(5)</code> </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948? <pre><code>fruits = [\"apple\", \"banana\", \"cherry\"]  \nfruits[1] = \"orange\"  \n</code></pre>     a) \"banana\" \u0915\u0947 \u092c\u093e\u0926 \"orange\" \u0921\u093e\u0932\u0924\u093e \u0939\u0948     b) \u0938\u0942\u091a\u0940 \u0938\u0947 \"banana\" \u0939\u091f\u093e \u0926\u0947\u0924\u093e \u0939\u0948     c) \"banana\" \u0915\u094b \"orange\" \u0938\u0947 \u092c\u0926\u0932\u0924\u093e \u0939\u0948     d) \u0938\u0942\u091a\u0940 \u0915\u0947 \u0905\u0902\u0924 \u092e\u0947\u0902 \"orange\" \u091c\u094b\u0921\u093c\u0924\u093e \u0939\u0948  </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: \u0906\u092a <code>sort()</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u0942\u091a\u0940 \u0915\u094b \u092c\u0922\u093c\u0924\u0947 \u0915\u094d\u0930\u092e \u092e\u0947\u0902 \u0915\u094d\u0930\u092e\u092c\u0926\u094d\u0927 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964  </p> </li> <li> <p>\u090f\u0915 \u0938\u0942\u091a\u0940 \u0915\u0940 \u0932\u0902\u092c\u093e\u0908 \u091c\u093e\u0928\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) <code>count()</code>     b) <code>size()</code>     c) <code>length()</code>     d) <code>len()</code> </p> </li> <li> <p><code>remove()</code> \u0935\u093f\u0927\u093f \u090f\u0915 \u0938\u0942\u091a\u0940 \u0915\u0947 \u0932\u093f\u090f \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u0940 \u0939\u0948?      a) \u0938\u0942\u091a\u0940 \u0938\u0947 \u0938\u092d\u0940 \u0924\u0924\u094d\u0935\u094b\u0902 \u0915\u094b \u0939\u091f\u093e \u0926\u0947\u0924\u0940 \u0939\u0948      b) \u0938\u0942\u091a\u0940 \u0938\u0947 \u0905\u0902\u0924\u093f\u092e \u0924\u0924\u094d\u0935 \u0915\u094b \u0939\u091f\u093e \u0926\u0947\u0924\u0940 \u0939\u0948      c) \u090f\u0915 \u0935\u093f\u0936\u0947\u0937 \u0924\u0924\u094d\u0935 \u0915\u0940 \u092a\u0939\u0932\u0940 \u0909\u092a\u0938\u094d\u0925\u093f\u0924\u093f \u0915\u094b \u0939\u091f\u093e \u0926\u0947\u0924\u0940 \u0939\u0948      d) \u090f\u0915 \u0924\u0924\u094d\u0935 \u0915\u094b \u0926\u0942\u0938\u0930\u0947 \u0915\u0947 \u0938\u093e\u0925 \u092c\u0926\u0932 \u0926\u0947\u0924\u0940 \u0939\u0948  </p> </li> </ol>"},{"location":"hi/chapters/chapter05b/#_10","title":"\u0909\u0924\u094d\u0924\u0930","text":"<ol> <li>b) <code>name[0]</code></li> <li>\u0938\u0924\u094d\u092f</li> <li>c) Hello</li> <li>c) <code>[1, 2, 3]</code></li> <li>\u0905\u0938\u0924\u094d\u092f</li> <li>b) <code>my_list.append(5)</code></li> <li>c) \"banana\" \u0915\u094b \"orange\" \u0938\u0947 \u092c\u0926\u0932\u0924\u093e \u0939\u0948</li> <li>\u0938\u0924\u094d\u092f</li> <li>d) <code>len()</code></li> <li>c) \u090f\u0915 \u0935\u093f\u0936\u0947\u0937 \u0924\u0924\u094d\u0935 \u0915\u0940 \u092a\u0939\u0932\u0940 \u0909\u092a\u0938\u094d\u0925\u093f\u0924\u093f \u0915\u094b \u0939\u091f\u093e \u0926\u0947\u0924\u0940 \u0939\u0948</li> </ol> <p>\u0907\u0938 \u092f\u0942\u0928\u093f\u091f \u0928\u0947 \u0906\u092a\u0915\u094b Python \u092e\u0947\u0902 strings \u0914\u0930 lists \u0938\u0947 \u092a\u0930\u093f\u091a\u093f\u0924 \u0915\u0930\u093e\u092f\u093e \u0939\u0948, \u091c\u094b \u0926\u094b \u092e\u094c\u0932\u093f\u0915 \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u0915\u093e\u0930 \u0939\u0948\u0902\u0964 \u0906\u092a\u0928\u0947 \u0907\u0928\u094d\u0939\u0947\u0902 \u092a\u094d\u0930\u093e\u0930\u0902\u092d \u0915\u0930\u0928\u093e, \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930\u0928\u093e, \u0914\u0930 \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u093e \u0938\u0940\u0916\u093e \u0939\u0948, \u091c\u093f\u0938\u0938\u0947 \u0906\u092a\u0915\u094b \u0905\u092a\u0928\u0947 \u0915\u093e\u0930\u094d\u092f\u0915\u094d\u0930\u092e\u094b\u0902 \u092e\u0947\u0902 \u091f\u0947\u0915\u094d\u0938\u094d\u091f \u0914\u0930 \u0921\u0947\u091f\u093e \u0938\u0902\u0917\u094d\u0930\u0939 \u0915\u094b \u092a\u094d\u0930\u092d\u093e\u0935\u0940 \u0922\u0902\u0917 \u0938\u0947 \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u0915\u0930\u0923 \u092e\u093f\u0932 \u0917\u090f \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter05c/","title":"\u092f\u0942\u0928\u093f\u091f 5c: \u091f\u094d\u092f\u0942\u092a\u0932 \u0914\u0930 \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940","text":""},{"location":"hi/chapters/chapter05c/#_1","title":"\u092a\u0930\u093f\u091a\u092f","text":"<p>Python \u092e\u0947\u0902, \u091f\u094d\u092f\u0942\u092a\u0932 \u0914\u0930 \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0921\u0947\u091f\u093e \u0938\u0902\u0930\u091a\u0928\u093e\u090f\u0902 \u0939\u0948\u0902 \u091c\u094b \u0921\u0947\u091f\u093e \u0915\u0947 \u0938\u0902\u0917\u094d\u0930\u0939 \u0915\u094b \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093f\u0924 \u0914\u0930 \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u0940 \u0939\u0948\u0902\u0964 \u091f\u094d\u092f\u0942\u092a\u0932 \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f \u092e\u093e\u0928\u094b\u0902 \u0915\u093e \u0905\u0928\u0941\u0915\u094d\u0930\u092e \u0939\u094b\u0924\u0947 \u0939\u0948\u0902, \u091c\u092c\u0915\u093f \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u0915\u0941\u0902\u091c\u0940-\u092e\u0942\u0932\u094d\u092f \u092f\u0941\u0917\u094d\u092e\u094b\u0902 \u0915\u093e \u0938\u0902\u0917\u094d\u0930\u0939 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u0906\u092a\u0915\u094b \u0935\u093f\u0936\u0947\u0937 \u0915\u0941\u0902\u091c\u093f\u092f\u094b\u0902 \u0915\u0947 \u0938\u093e\u0925 \u092e\u093e\u0928\u094b\u0902 \u0915\u094b \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0947 \u0939\u0948\u0902\u0964 \u0907\u0938 \u092f\u0942\u0928\u093f\u091f \u092e\u0947\u0902, \u0906\u092a \u091f\u094d\u092f\u0942\u092a\u0932 \u0914\u0930 \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u0915\u0947 \u0938\u093e\u0925 \u0915\u093e\u092e \u0915\u0930\u0928\u093e \u0938\u0940\u0916\u0947\u0902\u0917\u0947, \u091c\u093f\u0938\u092e\u0947\u0902 \u0907\u0928\u094d\u0939\u0947\u0902 \u0915\u0948\u0938\u0947 \u092c\u0928\u093e\u0928\u093e, \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930\u0928\u093e \u0914\u0930 \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0915\u0930\u0928\u093e \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter05c/#5c1","title":"5c.1 \u091f\u094d\u092f\u0942\u092a\u0932","text":"<p>\u091f\u094d\u092f\u0942\u092a\u0932 Python \u092e\u0947\u0902 \u0906\u0907\u091f\u092e \u0915\u093e \u090f\u0915 \u0915\u094d\u0930\u092e\u092c\u0926\u094d\u0927, \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f \u0938\u0902\u0917\u094d\u0930\u0939 \u0939\u0948\u0964 \u090f\u0915 \u092c\u093e\u0930 \u092c\u0928 \u091c\u093e\u0928\u0947 \u0915\u0947 \u092c\u093e\u0926, \u091f\u094d\u092f\u0942\u092a\u0932 \u092e\u0947\u0902 \u0924\u0924\u094d\u0935\u094b\u0902 \u0915\u094b \u092c\u0926\u0932\u093e \u0928\u0939\u0940\u0902 \u091c\u093e \u0938\u0915\u0924\u093e, \u091c\u094b \u091f\u094d\u092f\u0942\u092a\u0932 \u0915\u094b \u0909\u0928 \u0921\u0947\u091f\u093e \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917\u0940 \u092c\u0928\u093e\u0924\u093e \u0939\u0948 \u091c\u094b \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u092e\u0947\u0902 \u0932\u0917\u093e\u0924\u093e\u0930 \u092c\u0928\u0947 \u0930\u0939\u0928\u093e \u091a\u093e\u0939\u093f\u090f\u0964</p>"},{"location":"hi/chapters/chapter05c/#_2","title":"\u091f\u094d\u092f\u0942\u092a\u0932 \u092c\u0928\u093e\u0928\u093e \u0914\u0930 \u0906\u0930\u0902\u092d \u0915\u0930\u0928\u093e","text":"<p>\u0906\u092a \u092e\u093e\u0928\u094b\u0902 \u0915\u094b \u0915\u094b\u0937\u094d\u0920\u0915 <code>()</code> \u0915\u0947 \u0905\u0902\u0926\u0930 \u0930\u0916\u0915\u0930, \u0905\u0932\u094d\u092a\u0935\u093f\u0930\u093e\u092e \u0938\u0947 \u0905\u0932\u0917 \u0915\u0930\u0915\u0947 \u091f\u094d\u092f\u0942\u092a\u0932 \u092c\u0928\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>my_tuple = (1, 2, 3)\nfruit_tuple = (\"apple\", \"banana\", \"cherry\")\n</code></pre></p>"},{"location":"hi/chapters/chapter05c/#_3","title":"\u091f\u094d\u092f\u0942\u092a\u0932 \u092e\u0947\u0902 \u0924\u0924\u094d\u0935\u094b\u0902 \u0924\u0915 \u092a\u0939\u0941\u0902\u091a\u0928\u093e","text":"<p>\u0932\u093f\u0938\u094d\u091f \u0915\u0940 \u0924\u0930\u0939 \u0939\u0940, \u0906\u092a \u0907\u0902\u0921\u0947\u0915\u094d\u0938\u093f\u0902\u0917 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u091f\u094d\u092f\u0942\u092a\u0932 \u092e\u0947\u0902 \u0924\u0924\u094d\u0935\u094b\u0902 \u0924\u0915 \u092a\u0939\u0941\u0902\u091a \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 \u0907\u0902\u0921\u0947\u0915\u094d\u0938\u093f\u0902\u0917 0 \u0938\u0947 \u0936\u0941\u0930\u0942 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>my_tuple = (1, 2, 3)\nprint(my_tuple[0])  # \u0906\u0909\u091f\u092a\u0941\u091f: 1\n</code></pre></p>"},{"location":"hi/chapters/chapter05c/#_4","title":"\u091f\u094d\u092f\u0942\u092a\u0932 \u092a\u0930 \u0911\u092a\u0930\u0947\u0936\u0928\u094d\u0938","text":"<p>\u0939\u093e\u0932\u093e\u0902\u0915\u093f \u091f\u094d\u092f\u0942\u092a\u0932 \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f \u0939\u094b\u0924\u0947 \u0939\u0948\u0902, \u0906\u092a \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0911\u092a\u0930\u0947\u0936\u0928\u094d\u0938 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902:</p> <ol> <li> <p>\u0938\u0902\u092f\u0941\u0915\u094d\u0924 \u0915\u0930\u0928\u093e: <code>+</code> \u0911\u092a\u0930\u0947\u091f\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0926\u094b \u092f\u093e \u0905\u0927\u093f\u0915 \u091f\u094d\u092f\u0942\u092a\u0932 \u0915\u094b \u092e\u093f\u0932\u093e\u090f\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>tuple1 = (1, 2)  \ntuple2 = (3, 4)  \ncombined_tuple = tuple1 + tuple2  # \u0906\u0909\u091f\u092a\u0941\u091f: (1, 2, 3, 4)  \n</code></pre></p> </li> <li> <p>\u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f: <code>*</code> \u0911\u092a\u0930\u0947\u091f\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u091f\u094d\u092f\u0942\u092a\u0932 \u0915\u094b \u0915\u0908 \u092c\u093e\u0930 \u0926\u094b\u0939\u0930\u093e\u090f\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>repeat_tuple = (1, 2) * 3  # \u0906\u0909\u091f\u092a\u0941\u091f: (1, 2, 1, 2, 1, 2)  \n</code></pre></p> </li> <li> <p>\u0938\u094d\u0932\u093e\u0907\u0938\u093f\u0902\u0917: \u0907\u0902\u0921\u0947\u0915\u094d\u0938 \u0915\u0947 \u090f\u0915 \u0926\u093e\u092f\u0930\u0947 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u091f\u094d\u092f\u0942\u092a\u0932 \u0915\u093e \u090f\u0915 \u0909\u092a\u0938\u092e\u0941\u091a\u094d\u091a\u092f \u0928\u093f\u0915\u093e\u0932\u0947\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>my_tuple = (1, 2, 3, 4, 5)  \nprint(my_tuple[1:4])  # \u0906\u0909\u091f\u092a\u0941\u091f: (2, 3, 4)  \n</code></pre></p> </li> <li> <p>\u0932\u0902\u092c\u093e\u0908: <code>len()</code> \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u091f\u094d\u092f\u0942\u092a\u0932 \u092e\u0947\u0902 \u0924\u0924\u094d\u0935\u094b\u0902 \u0915\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u091c\u094d\u091e\u093e\u0924 \u0915\u0930\u0947\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>my_tuple = (1, 2, 3)  \nprint(len(my_tuple))  # \u0906\u0909\u091f\u092a\u0941\u091f: 3  \n</code></pre></p> </li> <li> <p>\u0938\u0926\u0938\u094d\u092f\u0924\u093e: <code>in</code> \u0915\u0940\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u091c\u093e\u0902\u091a\u0947\u0902 \u0915\u093f \u0915\u094d\u092f\u093e \u0915\u094b\u0908 \u0906\u0907\u091f\u092e \u091f\u094d\u092f\u0942\u092a\u0932 \u092e\u0947\u0902 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>fruit_tuple = (\"apple\", \"banana\", \"cherry\")  \nprint(\"banana\" in fruit_tuple)  # \u0906\u0909\u091f\u092a\u0941\u091f: True  \n</code></pre></p> </li> </ol>"},{"location":"hi/chapters/chapter05c/#5c2","title":"5c.2 \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940","text":"<p>Python \u092e\u0947\u0902 \u090f\u0915 \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u090f\u0915 \u0905\u0938\u0902\u0930\u091a\u093f\u0924, \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f \u0935\u0938\u094d\u0924\u0941\u0913\u0902 \u0915\u093e \u0938\u0902\u0917\u094d\u0930\u0939 \u0939\u0948\u0964 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0935\u0938\u094d\u0924\u0941 \u090f\u0915 \u0915\u0941\u0902\u091c\u0940-\u092e\u0942\u0932\u094d\u092f \u092f\u0941\u0917\u094d\u092e \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0939\u094b\u0924\u0940 \u0939\u0948, \u091c\u0939\u093e\u0902 \u0915\u0941\u0902\u091c\u0940 \u090f\u0915 \u092a\u0939\u091a\u093e\u0928\u0915\u0930\u094d\u0924\u093e \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0915\u093e\u0930\u094d\u092f \u0915\u0930\u0924\u0940 \u0939\u0948 \u0914\u0930 \u092e\u0942\u0932\u094d\u092f \u0915\u0941\u0902\u091c\u0940 \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0921\u0947\u091f\u093e \u0939\u0948\u0964 \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u0915\u093e \u0938\u093e\u092e\u093e\u0928\u094d\u092f\u0924: \u0909\u092a\u092f\u094b\u0917 \u0924\u092c \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u091c\u092c \u0906\u092a\u0915\u094b \u090f\u0915 \u0921\u0947\u091f\u093e \u0915\u094b \u0926\u0942\u0938\u0930\u0947 \u0921\u0947\u091f\u093e \u0915\u0947 \u0938\u093e\u0925 \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u094b\u0924\u0940 \u0939\u0948, \u091c\u0948\u0938\u0947 \u0915\u093f \u0928\u093e\u092e \u0915\u094b \u092b\u094b\u0928 \u0928\u0902\u092c\u0930 \u0915\u0947 \u0938\u093e\u0925 \u091c\u094b\u0921\u093c\u0928\u093e\u0964</p>"},{"location":"hi/chapters/chapter05c/#_5","title":"\u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u092c\u0928\u093e\u0928\u093e \u0914\u0930 \u0906\u0930\u0902\u092d \u0915\u0930\u0928\u093e","text":"<p>\u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u0915\u094b \u0906\u0915\u0930 <code>{}</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u092c\u0928\u093e\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0915\u0941\u0902\u091c\u0940-\u092e\u0942\u0932\u094d\u092f \u092f\u0941\u0917\u094d\u092e \u0915\u094b \u0915\u094b\u0932\u0928 <code>:</code> \u0938\u0947 \u0905\u0932\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u0915\u0941\u0902\u091c\u093f\u092f\u093e\u0901 \u0905\u0926\u094d\u0935\u093f\u0924\u0940\u092f \u0914\u0930 \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f (\u091c\u0948\u0938\u0947, \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917, \u0928\u0902\u092c\u0930) \u0939\u094b\u0928\u0940 \u091a\u093e\u0939\u093f\u090f, \u091c\u092c\u0915\u093f \u092e\u093e\u0928 \u0915\u093f\u0938\u0940 \u092d\u0940 \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u0947 \u0939\u094b \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>my_dict = {\"name\": \"Alice\", \"age\": 25, \"city\": \"New York\"}\n</code></pre></p>"},{"location":"hi/chapters/chapter05c/#_6","title":"\u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u092e\u0947\u0902 \u0924\u0924\u094d\u0935\u094b\u0902 \u0924\u0915 \u092a\u0939\u0941\u0902\u091a\u0928\u093e","text":"<p>\u0906\u092a \u0938\u094d\u0915\u094d\u0935\u093e\u092f\u0930 \u092c\u094d\u0930\u0948\u0915\u0947\u091f\u094d\u0938 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0915\u0941\u0902\u091c\u0940 \u0915\u0947 \u0938\u093e\u0925 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u092e\u0942\u0932\u094d\u092f \u0924\u0915 \u092a\u0939\u0941\u0902\u091a \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>my_dict = {\"name\": \"Alice\", \"age\": 25, \"city\": \"New York\"}\nprint(my_dict[\"name\"])  # \u0906\u0909\u091f\u092a\u0941\u091f: Alice\n</code></pre></p>"},{"location":"hi/chapters/chapter05c/#_7","title":"\u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u0911\u092a\u0930\u0947\u0936\u0928\u094d\u0938","text":"<p>\u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0911\u092a\u0930\u0947\u0936\u0928\u094d\u0938 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0940 \u0939\u0948:</p> <ol> <li> <p>\u0924\u0924\u094d\u0935 \u091c\u094b\u0921\u093c\u0928\u093e \u092f\u093e \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0915\u0930\u0928\u093e: \u0906\u092a \u0928\u090f \u0915\u0941\u0902\u091c\u0940-\u092e\u0942\u0932\u094d\u092f \u092f\u0941\u0917\u094d\u092e \u091c\u094b\u0921\u093c \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u092f\u093e \u092e\u094c\u091c\u0942\u0926\u093e \u0915\u094b \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>my_dict[\"age\"] = 26  # \"age\" \u0915\u093e \u092e\u093e\u0928 \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948  \nmy_dict[\"email\"] = \"alice@example.com\"  # \u090f\u0915 \u0928\u092f\u093e \u0915\u0941\u0902\u091c\u0940-\u092e\u0942\u0932\u094d\u092f \u092f\u0941\u0917\u094d\u092e \u091c\u094b\u0921\u093c\u0924\u093e \u0939\u0948  \n</code></pre></p> </li> <li> <p>\u0924\u0924\u094d\u0935 \u0939\u091f\u093e\u0928\u093e: \u0906\u092a <code>del</code> \u0915\u0940\u0935\u0930\u094d\u0921 \u092f\u093e <code>pop()</code> \u092e\u0947\u0925\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0915\u0941\u0902\u091c\u0940-\u092e\u0942\u0932\u094d\u092f \u092f\u0941\u0917\u094d\u092e \u0939\u091f\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>del my_dict[\"city\"]  # \"city\" \u0915\u0941\u0902\u091c\u0940 \u0915\u094b \u0939\u091f\u093e\u0924\u093e \u0939\u0948  \nage = my_dict.pop(\"age\")  # \"age\" \u0915\u0941\u0902\u091c\u0940 \u0915\u094b \u0939\u091f\u093e\u0924\u093e \u0939\u0948 \u0914\u0930 \u0909\u0938\u0915\u093e \u092e\u093e\u0928 \u0932\u094c\u091f\u093e\u0924\u093e \u0939\u0948  \n</code></pre></p> </li> <li> <p>\u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u0915\u094b \u092a\u093e\u0930 \u0915\u0930\u0928\u093e: \u0906\u092a <code>for</code> \u0932\u0942\u092a \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u0915\u0940 \u0915\u0941\u0902\u091c\u093f\u092f\u094b\u0902, \u092e\u093e\u0928\u094b\u0902, \u092f\u093e \u0926\u094b\u0928\u094b\u0902 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0932\u0942\u092a \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>for key, value in my_dict.items():  \n  print(key, value)  \n</code></pre></p> </li> <li> <p>\u0915\u0941\u0902\u091c\u0940 \u0915\u0940 \u091c\u093e\u0901\u091a \u0915\u0930\u0928\u093e: \u0906\u092a <code>in</code> \u0915\u0940\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u091c\u093e\u0902\u091a \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u0915\u093f \u0915\u094d\u092f\u093e \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0915\u0941\u0902\u091c\u0940 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>if \"name\" in my_dict:  \n  print(\"Name found\")  \n</code></pre></p> </li> <li> <p>\u0932\u0902\u092c\u093e\u0908 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u093e: \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u092e\u0947\u0902 \u0915\u0941\u0902\u091c\u0940-\u092e\u0942\u0932\u094d\u092f \u092f\u0941\u0917\u094d\u092e\u094b\u0902 \u0915\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u091c\u093e\u0928\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f <code>len()</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: <pre><code>print(len(my_dict))  # \u0906\u0909\u091f\u092a\u0941\u091f: 3  \n</code></pre></p> </li> </ol>"},{"location":"hi/chapters/chapter05c/#_8","title":"\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940","text":"<ul> <li>\u091f\u094d\u092f\u0942\u092a\u0932: \u0924\u0924\u094d\u0935\u094b\u0902 \u0915\u093e \u090f\u0915 \u0915\u094d\u0930\u092e\u092c\u0926\u094d\u0927, \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f \u0938\u0902\u0917\u094d\u0930\u0939\u0964</li> <li>\u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940: \u0915\u0941\u0902\u091c\u0940-\u092e\u0942\u0932\u094d\u092f \u092f\u0941\u0917\u094d\u092e\u094b\u0902 \u0915\u093e \u090f\u0915 \u0905\u0938\u0902\u0930\u091a\u093f\u0924, \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f \u0938\u0902\u0917\u094d\u0930\u0939\u0964</li> <li>\u0915\u0941\u0902\u091c\u0940-\u092e\u0942\u0932\u094d\u092f \u092f\u0941\u0917\u094d\u092e: \u090f\u0915 \u092f\u0941\u0917\u094d\u092e \u091c\u0939\u093e\u0902 \u0915\u0941\u0902\u091c\u0940 \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u092e\u0947\u0902 \u090f\u0915 \u0935\u093f\u0936\u0947\u0937 \u092e\u093e\u0928 \u0915\u0940 \u092a\u0939\u091a\u093e\u0928 \u0915\u0930\u0924\u0940 \u0939\u0948\u0964</li> <li>\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0936\u0940\u0932\u0924\u093e: \u090f\u0915 \u0921\u0947\u091f\u093e \u0938\u0902\u0930\u091a\u0928\u093e \u0915\u0940 \u0938\u093e\u092e\u0917\u094d\u0930\u0940 \u0915\u094b \u092c\u0926\u0932\u0928\u0947 \u0915\u0940 \u0915\u094d\u0937\u092e\u0924\u093e (\u091c\u0948\u0938\u0947, \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0936\u0940\u0932 \u0939\u094b\u0924\u0940 \u0939\u0948\u0902, \u091c\u092c\u0915\u093f \u091f\u094d\u092f\u0942\u092a\u0932 \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f \u0939\u094b\u0924\u0947 \u0939\u0948\u0902)\u0964</li> </ul>"},{"location":"hi/chapters/chapter05c/#_9","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940","text":"<ol> <li> <p>\u0932\u093f\u0938\u094d\u091f \u0914\u0930 \u091f\u094d\u092f\u0942\u092a\u0932 \u092e\u0947\u0902 \u0915\u094d\u092f\u093e \u0905\u0902\u0924\u0930 \u0939\u0948?     a) \u091f\u094d\u092f\u0942\u092a\u0932 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0936\u0940\u0932 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 \u0932\u093f\u0938\u094d\u091f \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f \u0939\u094b\u0924\u0940 \u0939\u0948\u0902     b) \u0932\u093f\u0938\u094d\u091f \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f \u0939\u094b\u0924\u0940 \u0939\u0948, \u0914\u0930 \u091f\u094d\u092f\u0942\u092a\u0932 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0936\u0940\u0932 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902     c) \u091f\u094d\u092f\u0942\u092a\u0932 \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f \u0939\u094b\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 \u0932\u093f\u0938\u094d\u091f \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0936\u0940\u0932 \u0939\u094b\u0924\u0940 \u0939\u0948\u0902     d) \u091f\u094d\u092f\u0942\u092a\u0932 \u0914\u0930 \u0932\u093f\u0938\u094d\u091f \u0926\u094b\u0928\u094b\u0902 \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f \u0939\u094b\u0924\u0947 \u0939\u0948\u0902  </p> </li> <li> <p>\u0906\u092a \u091f\u094d\u092f\u0942\u092a\u0932 <code>my_tuple = (10, 20, 30)</code> \u0915\u093e \u0926\u0942\u0938\u0930\u093e \u0924\u0924\u094d\u0935 \u0915\u0948\u0938\u0947 \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902?     a) <code>my_tuple[2]</code>     b) <code>my_tuple[1]</code>     c) <code>my_tuple[0]</code>     d) <code>my_tuple[-1]</code> </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: \u091f\u094d\u092f\u0942\u092a\u0932 \u0915\u094b \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u092c\u093e\u0926 \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>\u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928-\u0938\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) \u0938\u094d\u0915\u094d\u0935\u093e\u092f\u0930 \u092c\u094d\u0930\u0948\u0915\u0947\u091f <code>[]</code>     b</p> </li> </ol> <p>) \u0915\u094b\u0937\u094d\u0920\u0915 <code>()</code>     c) \u0915\u0930\u094d\u0932\u0940 \u092c\u094d\u0930\u0948\u0915\u0947\u091f <code>{}</code>     d) \u0921\u092c\u0932 \u0915\u094b\u091f\u094d\u0938 <code>\"\"</code> </p> <ol> <li> <p>\u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 <code>my_dict = {\"name\": \"Alice\", \"age\": 25}</code> \u092e\u0947\u0902 \u0915\u0941\u0902\u091c\u0940 <code>\"name\"</code> \u0915\u0947 \u0938\u093e\u0925 \u091c\u0941\u0921\u093c\u0947 \u092e\u0942\u0932\u094d\u092f \u0924\u0915 \u0915\u0948\u0938\u0947 \u092a\u0939\u0941\u0902\u091a\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) <code>my_dict.get(\"Alice\")</code>     b) <code>my_dict[\"Alice\"]</code>     c) <code>my_dict.get(\"name\")</code>     d) <code>my_dict[\"name\"]</code> </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u0915\u0941\u0902\u091c\u093f\u092f\u093e\u0901 \u0905\u0926\u094d\u0935\u093f\u0924\u0940\u092f \u0939\u094b\u0928\u0940 \u091a\u093e\u0939\u093f\u090f\u0964  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928-\u0938\u093e \u090f\u0915 \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u092e\u0947\u0902 \u0915\u0941\u0902\u091c\u0940-\u092e\u0942\u0932\u094d\u092f \u092f\u0941\u0917\u094d\u092e \u0915\u093e \u0909\u0926\u093e\u0939\u0930\u0923 \u0939\u0948?     a) <code>\"name\": \"Alice\"</code>     b) <code>\"age\": 25</code>     c) <code>25: \"Alice\"</code>     d) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u0938\u092d\u0940  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948? <pre><code>del my_dict[\"age\"]  \n</code></pre>     a) \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u0938\u0947 \u092e\u093e\u0928 <code>\"age\"</code> \u0915\u094b \u0939\u091f\u093e\u0924\u093e \u0939\u0948     b) \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u0938\u0947 \u0915\u0941\u0902\u091c\u0940 <code>\"age\"</code> \u0914\u0930 \u0907\u0938\u0915\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u092e\u0942\u0932\u094d\u092f \u0915\u094b \u0939\u091f\u093e\u0924\u093e \u0939\u0948     c) \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u0938\u0947 \u0938\u092d\u0940 \u0924\u0924\u094d\u0935\u094b\u0902 \u0915\u094b \u0939\u091f\u093e\u0924\u093e \u0939\u0948     d) <code>\"age\"</code> \u0915\u093e \u092e\u093e\u0928 \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948  </p> </li> <li> <p>\u090f\u0915 \u0915\u0941\u0902\u091c\u0940 \u0926\u094d\u0935\u093e\u0930\u093e \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u0938\u0947 \u090f\u0915 \u092e\u093e\u0928 \u0915\u094b \u0939\u091f\u093e\u0928\u0947 \u0914\u0930 \u0932\u094c\u091f\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928-\u0938\u0940 \u092e\u0947\u0925\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) <code>del()</code>     b) <code>pop()</code>     c) <code>remove()</code>     d) <code>clear()</code> </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: \u090f\u0915 \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u0915\u0947 \u092e\u093e\u0928\u094b\u0902 \u0915\u094b \u0905\u0926\u094d\u0935\u093f\u0924\u0940\u092f \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f\u0964  </p> </li> </ol>"},{"location":"hi/chapters/chapter05c/#_10","title":"\u0909\u0924\u094d\u0924\u0930","text":"<ol> <li>c) \u091f\u094d\u092f\u0942\u092a\u0932 \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f \u0939\u094b\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 \u0932\u093f\u0938\u094d\u091f \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0936\u0940\u0932 \u0939\u094b\u0924\u0940 \u0939\u0948\u0902</li> <li>b) <code>my_tuple[1]</code></li> <li>\u0917\u0932\u0924</li> <li>c) \u0915\u0930\u094d\u0932\u0940 \u092c\u094d\u0930\u0948\u0915\u0947\u091f <code>{}</code></li> <li>d) <code>my_dict[\"name\"]</code></li> <li>\u0938\u0939\u0940</li> <li>d) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u0938\u092d\u0940</li> <li>b) \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u0938\u0947 \u0915\u0941\u0902\u091c\u0940 <code>\"age\"</code> \u0914\u0930 \u0907\u0938\u0915\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u092e\u0942\u0932\u094d\u092f \u0915\u094b \u0939\u091f\u093e\u0924\u093e \u0939\u0948</li> <li>b) <code>pop()</code></li> <li>\u0917\u0932\u0924</li> </ol> <p>\u0907\u0938 \u092f\u0942\u0928\u093f\u091f \u0928\u0947 \u0906\u092a\u0915\u094b \u091f\u094d\u092f\u0942\u092a\u0932 \u0914\u0930 \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940, Python \u092e\u0947\u0902 \u0926\u094b \u0906\u0935\u0936\u094d\u092f\u0915 \u0921\u0947\u091f\u093e \u0938\u0902\u0930\u091a\u0928\u093e\u0913\u0902 \u0938\u0947 \u092a\u0930\u093f\u091a\u093f\u0924 \u0915\u0930\u093e\u092f\u093e \u0939\u0948\u0964 \u0906\u092a\u0928\u0947 \u0938\u0940\u0916\u093e \u0915\u093f \u0907\u0928 \u0938\u0902\u0930\u091a\u0928\u093e\u0913\u0902 \u0915\u094b \u0915\u0948\u0938\u0947 \u092c\u0928\u093e\u0928\u093e, \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930\u0928\u093e \u0914\u0930 \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0915\u0930\u0928\u093e \u0939\u0948, \u091c\u093f\u0938\u0938\u0947 \u0906\u092a\u0915\u094b \u0905\u092a\u0928\u0947 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u092e\u0947\u0902 \u0921\u0947\u091f\u093e \u0915\u0947 \u091c\u091f\u093f\u0932 \u0938\u0902\u0917\u094d\u0930\u0939 \u0915\u094b \u092a\u094d\u0930\u092d\u093e\u0935\u0940 \u0922\u0902\u0917 \u0938\u0947 \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0915\u094d\u0937\u092e\u0924\u093e \u092e\u093f\u0932\u0924\u0940 \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter06/","title":"\u092f\u0942\u0928\u093f\u091f 6: \u0938\u092e\u093e\u091c \u092a\u0930 \u092a\u094d\u0930\u092d\u093e\u0935","text":""},{"location":"hi/chapters/chapter06/#_1","title":"\u092a\u0930\u093f\u091a\u092f","text":"<p>\u0906\u091c \u0915\u0947 \u0921\u093f\u091c\u093f\u091f\u0932 \u092f\u0941\u0917 \u092e\u0947\u0902, \u0939\u092e\u093e\u0930\u0947 \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u092a\u0930 \u0915\u093f\u090f \u0917\u090f \u0915\u093e\u0930\u094d\u092f \u090f\u0915 \u0928\u093f\u0936\u093e\u0928 \u091b\u094b\u0921\u093c\u0924\u0947 \u0939\u0948\u0902, \u091c\u093f\u0938\u0947 digital footprint \u0915\u0939\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u091c\u0948\u0938\u0947-\u091c\u0948\u0938\u0947 \u0905\u0927\u093f\u0915 \u0932\u094b\u0917 \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u0915\u0947 \u0938\u093e\u0925 \u0907\u0902\u091f\u0930\u0948\u0915\u094d\u091f \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u0907\u0938\u0915\u0947 \u0938\u093e\u0925 \u0906\u0928\u0947 \u0935\u093e\u0932\u0947 \u0938\u0902\u092d\u093e\u0935\u093f\u0924 \u0916\u0924\u0930\u094b\u0902 \u0914\u0930 \u091c\u093f\u092e\u094d\u092e\u0947\u0926\u093e\u0930\u093f\u092f\u094b\u0902 \u0915\u094b \u0938\u092e\u091d\u0928\u093e \u0906\u0935\u0936\u094d\u092f\u0915 \u0939\u0948\u0964 \u0907\u0938 \u092f\u0942\u0928\u093f\u091f \u092e\u0947\u0902, \u0939\u092e digital footprints, \u0911\u0928\u0932\u093e\u0907\u0928 \u0936\u093f\u0937\u094d\u091f\u093e\u091a\u093e\u0930, \u092c\u094c\u0926\u094d\u0927\u093f\u0915 \u0938\u0902\u092a\u0924\u094d\u0924\u093f \u0905\u0927\u093f\u0915\u093e\u0930, \u0938\u093e\u0907\u092c\u0930 \u0905\u092a\u0930\u093e\u0927, \u0914\u0930 \u0938\u094d\u0935\u093e\u0938\u094d\u0925\u094d\u092f \u092a\u0930 \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u0915\u0947 \u092a\u094d\u0930\u092d\u093e\u0935 \u091c\u0948\u0938\u0947 \u0935\u093f\u0937\u092f\u094b\u0902 \u0915\u094b \u0915\u0935\u0930 \u0915\u0930\u0947\u0902\u0917\u0947\u0964 \u0939\u092e \u0909\u0928 \u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0915\u093e\u0928\u0942\u0928\u0940 \u0922\u093e\u0902\u091a\u094b\u0902 \u0915\u0940 \u092d\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0947\u0902\u0917\u0947, \u091c\u0948\u0938\u0947 \u0938\u093e\u0907\u092c\u0930 \u0915\u093e\u0928\u0942\u0928 \u0914\u0930 \u092d\u093e\u0930\u0924\u0940\u092f IT \u0905\u0927\u093f\u0928\u093f\u092f\u092e, \u091c\u094b \u0911\u0928\u0932\u093e\u0907\u0928 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u0940 \u0930\u0915\u094d\u0937\u093e \u0915\u0947 \u0932\u093f\u090f \u0921\u093f\u091c\u093c\u093e\u0907\u0928 \u0915\u093f\u090f \u0917\u090f \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter06/#61-digital-footprints","title":"6.1 Digital Footprints","text":"<p>\u090f\u0915 digital footprint \u0935\u0939 \u0921\u0947\u091f\u093e \u0915\u093e \u0928\u093f\u0936\u093e\u0928 \u0939\u0948 \u091c\u094b \u0906\u092a \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u091b\u094b\u0921\u093c\u0924\u0947 \u0939\u0948\u0902\u0964 \u0907\u0938\u092e\u0947\u0902 \u0906\u092a\u0915\u0940 \u0917\u0908 \u0935\u0947\u092c\u0938\u093e\u0907\u091f\u094b\u0902 \u0938\u0947 \u0932\u0947\u0915\u0930, \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e \u092a\u0930 \u0938\u093e\u091d\u093e \u0915\u0940 \u0917\u0908 \u091c\u093e\u0928\u0915\u093e\u0930\u0940, \u0914\u0930 \u0906\u092a\u0915\u0940 \u0911\u0928\u0932\u093e\u0907\u0928 \u0916\u0930\u0940\u0926\u093e\u0930\u0940 \u0915\u0940 \u0906\u0926\u0924\u0947\u0902 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902\u0964 Digital footprints active \u092f\u093e passive \u0939\u094b \u0938\u0915\u0924\u0947 \u0939\u0948\u0902: - Active Footprint: \u0921\u0947\u091f\u093e \u091c\u094b \u0906\u092a \u091c\u093e\u0928\u092c\u0942\u091d\u0915\u0930 \u0938\u093e\u091d\u093e \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u091c\u0948\u0938\u0947 \u0915\u093f \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e \u092a\u0930 \u092a\u094b\u0938\u094d\u091f \u092f\u093e \u0911\u0928\u0932\u093e\u0907\u0928 \u092b\u0949\u0930\u094d\u092e \u092d\u0930\u0928\u093e\u0964 - Passive Footprint: \u0921\u0947\u091f\u093e \u091c\u094b \u0906\u092a\u0915\u0940 \u0938\u094d\u092a\u0937\u094d\u091f \u0938\u0939\u092e\u0924\u093f \u0915\u0947 \u092c\u093f\u0928\u093e \u0906\u092a\u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u090f\u0915\u0924\u094d\u0930 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u091c\u0948\u0938\u0947 \u0906\u092a\u0915\u0940 \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u093f\u0902\u0917 \u0939\u093f\u0938\u094d\u091f\u094d\u0930\u0940 \u092f\u093e \u0938\u094d\u0925\u093e\u0928 \u0921\u0947\u091f\u093e\u0964</p>"},{"location":"hi/chapters/chapter06/#digital-footprint","title":"\u0906\u092a\u0915\u0947 Digital Footprint \u0915\u093e \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0915\u0930\u0928\u0947 \u0915\u093e \u092e\u0939\u0924\u094d\u0935","text":"<p>\u0906\u092a\u0915\u093e digital footprint \u0906\u092a\u0915\u0940 \u0917\u094b\u092a\u0928\u0940\u092f\u0924\u093e, \u0938\u0941\u0930\u0915\u094d\u0937\u093e, \u0914\u0930 \u092f\u0939\u093e\u0902 \u0924\u0915 \u0915\u093f \u092d\u0935\u093f\u0937\u094d\u092f \u0915\u0947 \u0905\u0935\u0938\u0930\u094b\u0902 (\u091c\u0948\u0938\u0947 \u0928\u094c\u0915\u0930\u0940 \u092f\u093e \u0915\u0949\u0932\u0947\u091c \u092a\u094d\u0930\u0935\u0947\u0936) \u0915\u094b \u092a\u094d\u0930\u092d\u093e\u0935\u093f\u0924 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948\u0964 \u092f\u0939 \u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0939\u0948 \u0915\u093f \u0906\u092a \u092f\u0939 \u091c\u093e\u0928\u0947\u0902 \u0915\u093f \u0906\u092a \u0915\u094c\u0928 \u0938\u0940 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0938\u093e\u091d\u093e \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0907\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0948\u0938\u0947 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964 \u0913\u0935\u0930\u0936\u0947\u092f\u0930\u093f\u0902\u0917 \u092f\u093e \u0917\u094b\u092a\u0928\u0940\u092f\u0924\u093e \u0938\u0947\u091f\u093f\u0902\u0917\u094d\u0938 \u0915\u0940 \u0905\u0928\u0926\u0947\u0916\u0940 \u0915\u0930\u0928\u0947 \u0938\u0947 \u0906\u092a\u0915\u094b \u092a\u0939\u091a\u093e\u0928 \u0915\u0940 \u091a\u094b\u0930\u0940 \u092f\u093e \u0921\u0947\u091f\u093e \u0909\u0932\u094d\u0932\u0902\u0918\u0928\u094b\u0902 \u091c\u0948\u0938\u0947 \u0916\u0924\u0930\u094b\u0902 \u0915\u093e \u0938\u093e\u092e\u0928\u093e \u0915\u0930\u0928\u093e \u092a\u0921\u093c \u0938\u0915\u0924\u093e \u0939\u0948\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: - \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e \u092a\u0930 \u0905\u092a\u0928\u0940 \u091b\u0941\u091f\u094d\u091f\u0940 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u092c\u093e\u0930-\u092c\u093e\u0930 \u0905\u092a\u0921\u0947\u091f \u092a\u094b\u0938\u094d\u091f \u0915\u0930\u0928\u093e \u0905\u092a\u0930\u093e\u0927\u093f\u092f\u094b\u0902 \u0915\u094b \u092f\u0939 \u092c\u0924\u093e \u0938\u0915\u0924\u093e \u0939\u0948 \u0915\u093f \u0906\u092a\u0915\u093e \u0918\u0930 \u0916\u093e\u0932\u0940 \u0939\u0948, \u091c\u094b \u0938\u0941\u0930\u0915\u094d\u0937\u093e \u0915\u093e \u0916\u0924\u0930\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter06/#62-net-surfing-social-media-communication","title":"6.2 Net Surfing \u0914\u0930 Social Media Communication \u0915\u0947 \u0932\u093f\u090f \u0936\u093f\u0937\u094d\u091f\u093e\u091a\u093e\u0930","text":"<p>Netiquette (\u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0936\u093f\u0937\u094d\u091f\u093e\u091a\u093e\u0930) \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0914\u0930 \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u0909\u091a\u093f\u0924 \u0914\u0930 \u091c\u093f\u092e\u094d\u092e\u0947\u0926\u093e\u0930 \u0935\u094d\u092f\u0935\u0939\u093e\u0930 \u0915\u094b \u0938\u0902\u0926\u0930\u094d\u092d\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u0905\u091a\u094d\u091b\u0947 netiquette \u0915\u093e \u092a\u093e\u0932\u0928 \u0915\u0930\u0928\u0947 \u0938\u0947 \u090f\u0915 \u0938\u092e\u094d\u092e\u093e\u0928\u091c\u0928\u0915 \u0914\u0930 \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0911\u0928\u0932\u093e\u0907\u0928 \u0935\u093e\u0924\u093e\u0935\u0930\u0923 \u092c\u0928\u093e\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u092e\u093f\u0932\u0924\u0940 \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter06/#net-surfing","title":"Net Surfing \u0915\u0947 \u0932\u093f\u090f:","text":"<ol> <li>\u0926\u0942\u0938\u0930\u094b\u0902 \u0915\u0940 \u0917\u094b\u092a\u0928\u0940\u092f\u0924\u093e \u0915\u093e \u0938\u092e\u094d\u092e\u093e\u0928 \u0915\u0930\u0947\u0902: \u092c\u093f\u0928\u093e \u0938\u0939\u092e\u0924\u093f \u0915\u0947 \u0915\u093f\u0938\u0940 \u0915\u0947 \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u0921\u0947\u091f\u093e \u0915\u094b \u091f\u094d\u0930\u0948\u0915 \u092f\u093e \u0938\u093e\u091d\u093e \u0928 \u0915\u0930\u0947\u0902\u0964</li> <li>\u0917\u0948\u0930-\u0915\u093e\u0928\u0942\u0928\u0940 \u0921\u093e\u0909\u0928\u0932\u094b\u0921 \u092f\u093e \u0938\u093e\u092e\u0917\u094d\u0930\u0940 \u0915\u0940 \u091a\u094b\u0930\u0940 \u0938\u0947 \u092c\u091a\u0947\u0902: \u092f\u0939 \u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0939\u0948 \u0915\u093f \u0906\u092a \u0915\u0949\u092a\u0940\u0930\u093e\u0907\u091f \u0915\u093e\u0928\u0942\u0928\u094b\u0902 \u0915\u093e \u0938\u092e\u094d\u092e\u093e\u0928 \u0915\u0930\u0947\u0902\u0964</li> <li>\u0938\u094d\u0930\u094b\u0924\u094b\u0902 \u0915\u0947 \u092a\u094d\u0930\u0924\u093f \u0938\u091a\u0947\u0924 \u0930\u0939\u0947\u0902: \u0935\u0947\u092c\u0938\u093e\u0907\u091f\u094b\u0902 \u0915\u0940 \u0935\u093f\u0936\u094d\u0935\u0938\u0928\u0940\u092f\u0924\u093e \u0915\u0940 \u092a\u0941\u0937\u094d\u091f\u093f \u0915\u0930\u0947\u0902 \u0914\u0930 \u0917\u0932\u0924 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u092b\u0948\u0932\u093e\u0928\u0947 \u0938\u0947 \u092c\u091a\u0947\u0902\u0964</li> </ol>"},{"location":"hi/chapters/chapter06/#social-media","title":"Social Media \u0915\u0947 \u0932\u093f\u090f:","text":"<ol> <li>\u092c\u093e\u0924\u091a\u0940\u0924 \u092e\u0947\u0902 \u0938\u092e\u094d\u092e\u093e\u0928\u091c\u0928\u0915 \u0930\u0939\u0947\u0902: \u0911\u0928\u0932\u093e\u0907\u0928 \u091a\u0930\u094d\u091a\u093e\u0913\u0902 \u092e\u0947\u0902 \u0905\u092a\u092e\u093e\u0928\u091c\u0928\u0915 \u092d\u093e\u0937\u093e \u092f\u093e \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u0939\u092e\u0932\u094b\u0902 \u0938\u0947 \u092c\u091a\u0947\u0902\u0964</li> <li>\u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0938\u093e\u091d\u093e \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u0938\u0924\u0930\u094d\u0915 \u0930\u0939\u0947\u0902: \u0938\u0902\u0935\u0947\u0926\u0928\u0936\u0940\u0932 \u0935\u093f\u0935\u0930\u0923 \u091c\u0948\u0938\u0947 \u0906\u092a\u0915\u093e \u092b\u094b\u0928 \u0928\u0902\u092c\u0930 \u092f\u093e \u092a\u0924\u093e \u092a\u094b\u0938\u094d\u091f \u0915\u0930\u0928\u0947 \u0938\u0947 \u0906\u092a\u0915\u094b \u092a\u0939\u091a\u093e\u0928 \u0915\u0940 \u091a\u094b\u0930\u0940 \u0915\u093e \u0916\u0924\u0930\u093e \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964</li> <li>\u092a\u094b\u0938\u094d\u091f \u0915\u0930\u0928\u0947 \u0938\u0947 \u092a\u0939\u0932\u0947 \u0938\u094b\u091a\u0947\u0902: \u090f\u0915 \u092c\u093e\u0930 \u091c\u092c \u0915\u0941\u091b \u0911\u0928\u0932\u093e\u0907\u0928 \u0939\u094b\u0924\u093e \u0939\u0948, \u0924\u094b \u0907\u0938\u0947 \u092a\u0942\u0930\u0940 \u0924\u0930\u0939 \u0938\u0947 \u0939\u091f\u093e\u0928\u093e \u091a\u0941\u0928\u094c\u0924\u0940\u092a\u0942\u0930\u094d\u0923 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964</li> <li>Cyberbullying \u0938\u0947 \u092c\u091a\u0947\u0902: \u0926\u0942\u0938\u0930\u094b\u0902 \u0915\u0947 \u0938\u093e\u0925 \u0911\u0928\u0932\u093e\u0907\u0928 \u0910\u0938\u0947 \u0939\u0940 \u0935\u094d\u092f\u0935\u0939\u093e\u0930 \u0915\u0930\u0947\u0902 \u091c\u0948\u0938\u0947 \u0906\u092a \u0905\u0938\u0932\u0940 \u091c\u0940\u0935\u0928 \u092e\u0947\u0902 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 \u092a\u0930\u0947\u0936\u093e\u0928 \u0915\u0930\u0928\u0947 \u0935\u093e\u0932\u0947 \u0935\u094d\u092f\u0935\u0939\u093e\u0930 \u092e\u0947\u0902 \u0938\u0902\u0932\u0917\u094d\u0928 \u0928 \u0939\u094b\u0902\u0964</li> </ol>"},{"location":"hi/chapters/chapter06/#63-intellectual-property-rights-ipr","title":"6.3 Intellectual Property Rights (IPR)","text":"<p>Intellectual Property Rights (IPR) \u0926\u093f\u092e\u093e\u0917 \u0915\u0940 \u0930\u091a\u0928\u093e\u0913\u0902 \u0915\u0940 \u0930\u0915\u094d\u0937\u093e \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u091c\u0948\u0938\u0947 \u0906\u0935\u093f\u0937\u094d\u0915\u093e\u0930, \u0938\u093e\u0939\u093f\u0924\u094d\u092f\u093f\u0915 \u0914\u0930 \u0915\u0932\u093e\u0924\u094d\u092e\u0915 \u0915\u093e\u0930\u094d\u092f, \u0921\u093f\u091c\u093c\u093e\u0907\u0928, \u0914\u0930 \u092a\u094d\u0930\u0924\u0940\u0915\u0964 IPR \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0915\u093f \u0930\u091a\u0928\u093e\u0915\u093e\u0930\u094b\u0902 \u0915\u094b \u0909\u0928\u0915\u0947 \u0915\u093e\u092e \u0915\u0947 \u0932\u093f\u090f \u0936\u094d\u0930\u0947\u092f \u0914\u0930 \u0935\u093f\u0924\u094d\u0924\u0940\u092f \u092e\u0941\u0906\u0935\u091c\u093e \u092e\u093f\u0932\u0947\u0964</p>"},{"location":"hi/chapters/chapter06/#ipr","title":"IPR \u0915\u0947 \u0938\u093e\u092e\u093e\u0928\u094d\u092f \u092a\u094d\u0930\u0915\u093e\u0930:","text":"<ul> <li>Copyright: \u0938\u093e\u0939\u093f\u0924\u094d\u092f\u093f\u0915 \u0915\u093e\u0930\u094d\u092f\u094b\u0902, \u0938\u0902\u0917\u0940\u0924, \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930, \u0914\u0930 \u0915\u0932\u093e\u0924\u094d\u092e\u0915 \u0930\u091a\u0928\u093e\u0913\u0902 \u0915\u0940 \u0930\u0915\u094d\u0937\u093e \u0915\u0930\u0924\u093e \u0939\u0948\u0964  </li> <li>Patents: \u0906\u0935\u093f\u0937\u094d\u0915\u093e\u0930\u094b\u0902 \u0914\u0930 \u0924\u0915\u0928\u0940\u0915\u0940 \u0928\u0935\u093e\u091a\u093e\u0930\u094b\u0902 \u0915\u0940 \u0930\u0915\u094d\u0937\u093e \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964  </li> <li>Trademarks: \u0909\u0924\u094d\u092a\u093e\u0926 \u092f\u093e \u0938\u0947\u0935\u093e \u0915\u0940 \u092a\u0939\u091a\u093e\u0928 \u0915\u0930\u0928\u0947 \u0935\u093e\u0932\u0947 \u092a\u094d\u0930\u0924\u0940\u0915\u094b\u0902, \u0928\u093e\u092e\u094b\u0902, \u0914\u0930 \u092a\u094d\u0930\u0924\u0940\u0915\u094b\u0902 \u0915\u0940 \u0930\u0915\u094d\u0937\u093e \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964  </li> </ul> <p>IPR \u0915\u093e \u0909\u0932\u094d\u0932\u0902\u0918\u0928 \u0915\u0930\u0928\u093e, \u092c\u093f\u0928\u093e \u0905\u0928\u0941\u092e\u0924\u093f \u0915\u0947 \u0915\u093f\u0938\u0940 \u0914\u0930 \u0915\u0947 \u0915\u093e\u092e \u0915\u0940 \u0928\u0915\u0932 \u0915\u0930\u0928\u093e \u092f\u093e \u0935\u093f\u0924\u0930\u093f\u0924 \u0915\u0930\u0928\u093e \u0905\u0935\u0948\u0927 \u0939\u0948 \u0914\u0930 \u0907\u0938\u0915\u0947 \u0917\u0902\u092d\u0940\u0930 \u092a\u0930\u093f\u0923\u093e\u092e \u0939\u094b \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u091c\u093f\u0938\u092e\u0947\u0902 \u092e\u0941\u0915\u0926\u092e\u0947 \u0914\u0930 \u091c\u0941\u0930\u094d\u092e\u093e\u0928\u093e \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902\u0964</p> <p>\u0909\u0926\u093e\u0939\u0930\u0923: - \u092c\u093f\u0928\u093e \u0930\u091a\u0928\u093e\u0915\u093e\u0930 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0915\u0947 \u092b\u093c\u093f\u0932\u094d\u092e\u0947\u0902 \u092f\u093e \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0921\u093e\u0909\u0928\u0932\u094b\u0921 \u0915\u0930\u0928\u093e \u0914\u0930 \u0938\u093e\u091d\u093e \u0915\u0930\u0928\u093e \u0915\u0949\u092a\u0940\u0930\u093e\u0907\u091f \u0915\u093e\u0928\u0942\u0928\u094b\u0902 \u0915\u093e \u0909\u0932\u094d\u0932\u0902\u0918\u0928 \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u0915\u093e\u0928\u0942\u0928 \u0915\u0947 \u0924\u0939\u0924 \u0926\u0902\u0921\u0928\u0940\u092f \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter06/#64-cybercrime-cyber-laws","title":"6.4 Cybercrime \u0914\u0930 Cyber Laws","text":"<p>Cybercrime \u0938\u0947 \u0924\u093e\u0924\u094d\u092a\u0930\u094d\u092f \u0909\u0928 \u0906\u092a\u0930\u093e\u0927\u093f\u0915 \u0917\u0924\u093f\u0935\u093f\u0927\u093f\u092f\u094b\u0902 \u0938\u0947 \u0939\u0948 \u091c\u094b \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0914\u0930 \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0915\u0940 \u091c\u093e\u0924\u0940 \u0939\u0948\u0902\u0964 \u091c\u0948\u0938\u0947-\u091c\u0948\u0938\u0947 \u0905\u0927\u093f\u0915 \u0932\u094b\u0917 \u0938\u0902\u091a\u093e\u0930 \u0914\u0930 \u0932\u0947\u0928-\u0926\u0947\u0928 \u0915\u0947 \u0932\u093f\u090f \u0921\u093f\u091c\u093f\u091f\u0932 \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u092a\u0930 \u0928\u093f\u0930\u094d\u092d\u0930 \u0939\u094b\u0924\u0947 \u091c\u093e \u0930\u0939\u0947 \u0939\u0948\u0902, \u092f\u0947 \u0905\u092a\u0930\u093e\u0927 \u092c\u0922\u093c \u0930\u0939\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter06/#cybercrime","title":"Cybercrime \u0915\u0947 \u0938\u093e\u092e\u093e\u0928\u094d\u092f \u0930\u0942\u092a:","text":"<ul> <li>Hacking: \u0915\u093f\u0938\u0940 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u0924\u0915 \u0905\u0928\u0927\u093f\u0915\u0943\u0924 \u092a\u0939\u0941\u0902\u091a, \u0905\u0915\u094d\u0938\u0930 \u0921\u0947\u091f\u093e \u091a\u0941\u0930\u093e\u0928\u0947 \u092f\u093e \u0928\u0941\u0915\u0938\u093e\u0928 \u092a\u0939\u0941\u0902\u091a\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f\u0964  </li> <li>Phishing: \u0938\u0902\u0935\u0947\u0926\u0928\u0936\u0940\u0932 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 (\u091c\u0948\u0938\u0947 \u092a\u093e\u0938\u0935\u0930\u094d\u0921) \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0927\u094b\u0916\u093e\u0927\u0921\u093c\u0940 \u092a\u094d\u0930\u092f\u093e\u0938, \u091c\u094b \u090f\u0915 \u0935\u093f\u0936\u094d\u0935\u0938\u0928\u0940\u092f \u0938\u094d\u0930\u094b\u0924 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902Pretending \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964  </li> <li>Cyberbullying: \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0926\u0942\u0938\u0930\u094b\u0902 \u0915\u094b \u092a\u0930\u0947\u0936\u093e\u0928 \u0915\u0930\u0928\u093e, \u0927\u092e\u0915\u093e\u0928\u093e, \u092f\u093e \u0921\u0930\u093e\u0928\u093e\u0964  </li> <li>Identity Theft: \u0927\u094b\u0916\u093e\u0927\u0921\u093c\u0940 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u0938\u0940 \u0915\u0947 \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u0921\u0947\u091f\u093e \u0915\u0940 \u091a\u094b\u0930\u0940 \u0915\u0930\u0928\u093e, \u0905\u0915\u094d\u0938\u0930 \u0935\u093f\u0924\u094d\u0924\u0940\u092f \u0932\u093e\u092d \u0915\u0947 \u0932\u093f\u090f\u0964  </li> </ul>"},{"location":"hi/chapters/chapter06/#cyber-laws","title":"Cyber Laws:","text":"<p>\u0938\u093e\u0907\u092c\u0930 \u0915\u093e\u0928\u0942\u0928\u094b\u0902 \u0915\u094b \u0907\u0928 \u0905\u092a\u0930\u093e\u0927\u094b\u0902 \u0938\u0947 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u0940 \u0930\u0915\u094d\u0937\u093e \u0915\u0930\u0928\u0947 \u0914\u0930 \u0911\u0928\u0932\u093e\u0907\u0928 \u0935\u094d\u092f\u0935\u0939\u093e\u0930 \u0915\u094b \u0935\u093f\u0928\u093f\u092f\u092e\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0921\u093f\u091c\u093c\u093e\u0907\u0928 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964 \u092d\u093e\u0930\u0924 \u092e\u0947\u0902, Information Technology Act, 2000 \u0938\u093e\u0907\u092c\u0930 \u0905\u092a\u0930\u093e\u0927\u094b\u0902 \u0938\u0947 \u0928\u093f\u092a\u091f\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0915\u093e\u0928\u0942\u0928\u0940 \u0922\u093e\u0902\u091a\u093e \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u0938\u093e\u0907\u092c\u0930 \u0905\u092a\u0930\u093e\u0927\u093f\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0926\u0902\u0921 \u0915\u093e \u0935\u0930\u094d\u0923\u0928 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u092f\u0939 \u0921\u093f\u091c\u093f\u091f\u0932 \u0905\u0928\u0941\u092c\u0902\u0927\u094b\u0902 \u0914\u0930 \u0908-\u0939\u0938\u094d\u0924\u093e\u0915\u094d\u0937\u0930\u094b\u0902 \u0915\u094b \u092d\u0940 \u092e\u093e\u0928\u094d\u092f\u0924\u093e \u0926\u0947\u0924\u093e \u0939\u0948, \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0911\u0928\u0932\u093e\u0907\u0928 \u0932\u0947\u0928-\u0926\u0947\u0928 \u0915\u094b \u092c\u0922\u093c\u093e\u0935\u093e \u0926\u0947\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter06/#65-indian-it-act","title":"6.5 Indian IT Act","text":"<p>Indian IT Act, 2000 \u090f\u0915 \u0935\u094d\u092f\u093e\u092a\u0915 \u0915\u093e\u0928\u0942\u0928 \u0939\u0948 \u091c\u094b \u092d\u093e\u0930\u0924 \u092e\u0947\u0902 \u0907\u0932\u0947\u0915\u094d\u091f\u094d\u0930\u0949\u0928\u093f\u0915 \u0935\u093e\u0923\u093f\u091c\u094d\u092f \u0914\u0930 \u0921\u093f\u091c\u093f\u091f\u0932 \u0932\u0947\u0928-\u0926\u0947\u0928 \u0915\u094b \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u092f\u0939 \u0915\u0908 \u092e\u0941\u0926\u094d\u0926\u094b\u0902 \u0915\u094b \u0938\u0902\u092c\u094b\u0927\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948, \u091c\u093f\u0928\u092e\u0947\u0902 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902: - \u0907\u0932\u0947\u0915\u094d\u091f\u094d\u0930\u0949\u0928\u093f\u0915 \u0905\u0928\u0941\u092c\u0902\u0927\u094b\u0902 \u0914\u0930 \u0921\u093f\u091c\u093f\u091f\u0932 \u0939\u0938\u094d\u0924\u093e\u0915\u094d\u0937\u0930\u094b\u0902 \u0915\u0940 \u0915\u093e\u0928\u0942\u0928\u0940 \u092e\u093e\u0928\u094d\u092f\u0924\u093e: \u092f\u0939 \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0915\u093f \u0921\u093f\u091c\u093f\u091f\u0932 \u0926\u0938\u094d\u0924\u093e\u0935\u0947\u091c\u093c \u0914\u0930 \u0932\u0947\u0928-\u0926\u0947\u0928 \u0915\u093e\u0928\u0942\u0928\u0940 \u0930\u0942\u092a \u0938\u0947 \u092c\u093e\u0927\u094d\u092f\u0915\u093e\u0930\u0940 \u0939\u0948\u0902\u0964 - Cybercrime: \u0939\u0948\u0915\u093f\u0902\u0917, \u092a\u0939\u091a\u093e\u0928 \u091a\u094b\u0930\u0940, \u0914\u0930 \u0905\u0928\u094d\u092f \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u0947 \u0938\u093e\u0907\u092c\u0930 \u0905\u092a\u0930\u093e\u0927\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0926\u0902\u0921 \u0915\u093e \u0935\u0930\u094d\u0923\u0928 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 - \u0921\u0947\u091f\u093e \u0938\u0941\u0930\u0915\u094d\u0937\u093e: \u0938\u0902\u0935\u0947\u0926\u0928\u0936\u0940\u0932 \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0915\u0940 \u0938\u0941\u0930\u0915\u094d\u0937\u093e \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u092f\u0939 \u0935\u093f\u0928\u093f\u092f\u092e\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0915\u093f \u0907\u0938\u0947 \u0935\u094d\u092f\u0935\u0938\u093e\u092f\u094b\u0902 \u0914\u0930 \u0938\u0902\u0917\u0920\u0928\u094b\u0902 \u0926\u094d\u0935\u093e\u0930\u093e \u0915\u0948\u0938\u0947 \u090f\u0915\u0924\u094d\u0930\u093f\u0924 \u0914\u0930 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter06/#66-cybercrime","title":"6.6 Cybercrime \u0915\u094b \u0930\u094b\u0915\u0928\u093e","text":"<p>Cybercrime \u0915\u094b \u0930\u094b\u0915\u0928\u0947 \u0914\u0930 \u0911\u0928\u0932\u093e\u0907\u0928 \u0916\u0941\u0926 \u0915\u094b \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0930\u0916\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0907\u0928 \u092a\u094d\u0930\u092e\u0941\u0916 \u092a\u094d\u0930\u0925\u093e\u0913\u0902 \u0915\u093e \u092a\u093e\u0932\u0928 \u0915\u0930\u0947\u0902:</p> <ol> <li>\u092e\u091c\u092c\u0942\u0924 \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902: \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0947\u0902 \u0915\u093f \u0906\u092a\u0915\u0947 \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u091c\u091f\u093f\u0932 \u0914\u0930 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0916\u093e\u0924\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0905\u0926\u094d\u0935\u093f\u0924\u0940\u092f \u0939\u0948\u0902\u0964 \u0905\u0928\u0941\u092e\u093e\u0928\u093f\u0924 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u0947 \u0938\u0947 \u092c\u091a\u0947\u0902, \u091c\u0948\u0938\u0947 \u0906\u092a\u0915\u093e \u091c\u0928\u094d\u092e\u0924\u093f\u0925\u093f\u0964</li> </ol> <p>\u0909\u0926\u093e\u0939\u0930\u0923: \u092c\u0921\u093c\u0947 \u0914\u0930 \u091b\u094b\u091f\u0947 \u0905\u0915\u094d\u0937\u0930\u094b\u0902, \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902, \u0914\u0930 \u092a\u094d\u0930\u0924\u0940\u0915\u094b\u0902 \u0915\u093e \u0938\u0902\u092f\u094b\u091c\u0928 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902: <code>P@ssw0rd!234</code>\u0964</p> <ol> <li> <p>Two-Factor Authentication \u0938\u0915\u094d\u0937\u092e \u0915\u0930\u0947\u0902: \u092f\u0939 \u090f\u0915 \u0905\u0924\u093f\u0930\u093f\u0915\u094d\u0924 \u0938\u0941\u0930\u0915\u094d\u0937\u093e \u092a\u0930\u0924 \u091c\u094b\u0921\u093c\u0924\u093e \u0939\u0948, \u091c\u093f\u0938\u092e\u0947\u0902 \u092a\u0939\u091a\u093e\u0928 \u0915\u093e \u0926\u0942\u0938\u0930\u093e \u0930\u0942\u092a \u0906\u0935\u0936\u094d\u092f\u0915 \u0939\u094b\u0924\u093e \u0939\u0948, \u091c\u0948\u0938\u0947 \u0915\u093f \u090f\u0915 \u091f\u0947\u0915\u094d\u0938\u094d\u091f \u0938\u0902\u0926\u0947\u0936 \u0915\u094b\u0921 \u092f\u093e \u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0910\u092a\u0964</p> </li> <li> <p>Phishing \u0915\u0947 \u092a\u094d\u0930\u0924\u093f \u0938\u0924\u0930\u094d\u0915 \u0930\u0939\u0947\u0902: \u0932\u093f\u0902\u0915 \u092a\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0928\u0947 \u092f\u093e \u0938\u0902\u0935\u0947\u0926\u0928\u0936\u0940\u0932 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0938\u093e\u091d\u093e \u0915\u0930\u0928\u0947 \u0938\u0947 \u092a\u0939\u0932\u0947 \u0939\u092e\u0947\u0936\u093e \u0938\u094d\u0930\u094b\u0924 \u0915\u0940 \u092a\u0941\u0937\u094d\u091f\u093f \u0915\u0930\u0947\u0902\u0964 \u0927\u094b\u0916\u0947\u092c\u093e\u091c\u093c \u0905\u0915\u094d\u0938\u0930 \u0908\u092e\u0947\u0932 \u092f\u093e \u0928\u0915\u0932\u0940 \u0935\u0947\u092c\u0938\u093e\u0907\u091f\u094b\u0902 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0935\u0948\u0927 \u0915\u0902\u092a\u0928\u093f\u092f\u094b\u0902 \u0915\u0940 \u0928\u0915\u0932 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>\u0938\u0941\u0930\u0915\u094d\u0937\u093e \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0938\u094d\u0925\u093e\u092a\u093f\u0924 \u0915\u0930\u0947\u0902: \u0905\u092a\u0928\u0947 \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u0915\u094b \u092e\u0948\u0932\u0935\u0947\u092f\u0930 \u0914\u0930 \u0905\u0928\u0927\u093f\u0915\u0943\u0924 \u092a\u0939\u0941\u0902\u091a \u0938\u0947 \u092c\u091a\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0902\u091f\u0940\u0935\u093e\u092f\u0930\u0938 \u0914\u0930 \u092b\u093c\u093e\u092f\u0930\u0935\u0949\u0932 \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964</p> </li> <li> <p>\u0938\u094d\u0935\u092f\u0902 \u0915\u094b \u0936\u093f\u0915\u094d\u0937\u093f\u0924 \u0915\u0930\u0947\u0902: \u0938\u093e\u092e\u093e\u0928\u094d\u092f \u0938\u093e\u0907\u092c\u0930 \u0916\u0924\u0930\u094b\u0902 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u091c\u093e\u0928\u0915\u093e\u0930 \u0930\u0939\u0947\u0902 \u0914\u0930 \u0909\u0928\u0938\u0947 \u0915\u0948\u0938\u0947 \u092c\u091a\u0947\u0902\u0964 \u0938\u0924\u0930\u094d\u0915 \u0930\u0939\u0928\u093e \u0911\u0928\u0932\u093e\u0907\u0928 \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0930\u0939\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u0939\u0932\u093e \u0915\u0926\u092e \u0939\u0948\u0964</p> </li> </ol>"},{"location":"hi/chapters/chapter06/#67","title":"6.7 \u0938\u094d\u0935\u093e\u0938\u094d\u0925\u094d\u092f \u092a\u0930 \u092a\u094d\u0930\u092d\u093e\u0935","text":"<p>\u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u0915\u093e \u0932\u0902\u092c\u0947 \u0938\u092e\u092f \u0924\u0915 \u0909\u092a\u092f\u094b\u0917 \u0915\u0908 \u0938\u094d\u0935\u093e\u0938\u094d\u0925\u094d\u092f \u0938\u092e\u0938\u094d\u092f\u093e\u0913\u0902 \u0915\u093e \u0915\u093e\u0930\u0923 \u092c\u0928 \u0938\u0915\u0924\u093e \u0939\u0948, \u0936\u093e\u0930\u0940\u0930\u093f\u0915 \u0914\u0930 \u092e\u093e\u0928\u0938\u093f\u0915 \u0926\u094b\u0928\u094b\u0902\u0964 \u0907\u0928 \u091c\u094b\u0916\u093f\u092e\u094b\u0902 \u0915\u0947 \u092a\u094d\u0930\u0924\u093f \u091c\u093e\u0917\u0930\u0942\u0915 \u0939\u094b\u0928\u093e \u0914\u0930 \u0930\u094b\u0915\u0925\u093e\u092e \u0915\u0947 \u0909\u092a\u093e\u092f \u0915\u0930\u0928\u093e \u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter06/#1","title":"1. \u0926\u0943\u0937\u094d\u091f\u093f \u092a\u0930 \u092a\u094d\u0930\u092d\u093e\u0935","text":"<p>\u0938\u094d\u0915\u094d\u0930\u0940\u0928 \u0915\u0947 \u0938\u093e\u092e\u0928\u0947 \u0932\u0902\u092c\u0947 \u0938\u092e\u092f \u0924\u0915 \u092c\u093f\u0924\u093e\u0928\u0947 \u0938\u0947 digital eye strain (\u091c\u093f\u0938\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0926\u0943\u0937\u094d\u091f\u093f \u0938\u093f\u0902\u0921\u094d\u0930\u094b\u092e \u092d\u0940 \u0915\u0939\u093e \u091c\u093e\u0924\u093e \u0939\u0948) \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964 \u0932\u0915\u094d\u0937\u0923\u094b\u0902 \u092e\u0947\u0902 \u0938\u0942\u0916\u0940 \u0906\u0901\u0916\u0947\u0902, \u0938\u093f\u0930\u0926\u0930\u094d\u0926, \u0914\u0930 \u0927\u0941\u0902\u0927\u0932\u0940 \u0926\u0943\u0937\u094d\u091f\u093f \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902\u0964</p> <p>\u091f\u093f\u092a: 20-20-20 \u0928\u093f\u092f\u092e \u0915\u093e \u092a\u093e\u0932\u0928 \u0915\u0930\u0947\u0902: \u0939\u0930 20 \u092e\u093f\u0928\u091f \u092e\u0947\u0902, 20 \u092b\u0940\u091f \u0926\u0942\u0930 \u0915\u093f\u0938\u0940 \u091a\u0940\u091c\u093c \u0915\u094b 20 \u0938\u0947\u0915\u0902\u0921 \u0915\u0947 \u0932\u093f\u090f \u0926\u0947\u0916\u0947\u0902\u0964</p>"},{"location":"hi/chapters/chapter06/#2","title":"2. \u0936\u093e\u0930\u0940\u0930\u093f\u0915 \u092e\u0941\u0926\u094d\u0926\u0947","text":"<ul> <li>\u092a\u094b\u0936\u094d\u091a\u0930 \u0938\u092e\u0938\u094d\u092f\u093e\u090f\u0901: \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u0932\u0902\u092c\u0947 \u0938\u092e\u092f \u0924\u0915 \u092c\u0948\u0920\u0928\u0947 \u0938\u0947 \u092a\u0940\u0920, \u0917\u0930\u094d\u0926\u0928, \u0914\u0930 \u0915\u0902\u0927\u094b\u0902 \u092e\u0947\u0902 \u0926\u0930\u094d\u0926 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964 \u0907\u0928\u0938\u0947 \u092c\u091a\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0909\u091a\u093f\u0924 \u092a\u094b\u0936\u094d\u091a\u0930 \u092c\u0928\u093e\u090f \u0930\u0916\u0928\u093e \u0914\u0930 \u0928\u093f\u092f\u092e\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u0916\u093f\u0902\u091a\u093e\u0935 \u0915\u0947 \u0932\u093f\u090f \u092c\u094d\u0930\u0947\u0915 \u0932\u0947\u0928\u093e \u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0939\u0948\u0964</li> </ul> <p>\u091f\u093f\u092a: \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0947\u0902 \u0915\u093f \u0906\u092a\u0915\u0940 \u0915\u0941\u0930\u094d\u0938\u0940 \u0914\u0930 \u0921\u0947\u0938\u094d\u0915 \u090f\u0930\u094d\u0917\u094b\u0928\u094b\u092e\u093f\u0915 \u0930\u0942\u092a \u0938\u0947 \u0921\u093f\u091c\u093e\u0907\u0928 \u0915\u0940 \u0917\u0908 \u0939\u0948\u0902 \u0924\u093e\u0915\u093f \u0905\u091a\u094d\u091b\u0940 \u092a\u094b\u0936\u094d\u091a\u0930 \u0915\u093e \u0938\u092e\u0930\u094d\u0925\u0928 \u0939\u094b \u0938\u0915\u0947\u0964</p> <ul> <li>\u0928\u0940\u0902\u0926 \u092e\u0947\u0902 \u0935\u094d\u092f\u0935\u0927\u093e\u0928: \u0938\u094d\u0915\u094d\u0930\u0940\u0928 \u0938\u0947 \u0928\u093f\u0915\u0932\u0928\u0947 \u0935\u093e\u0932\u0940 \u0928\u0940\u0932\u0940 \u0930\u094b\u0936\u0928\u0940 \u0928\u0940\u0902\u0926 \u0915\u0947 \u092a\u0948\u091f\u0930\u094d\u0928 \u092e\u0947\u0902 \u092c\u093e\u0927\u093e \u0921\u093e\u0932 \u0938\u0915\u0924\u0940 \u0939\u0948, \u091c\u093f\u0938\u0938\u0947 \u092e\u0947\u0932\u093e\u091f\u094b\u0928\u093f\u0928 \u0909\u0924\u094d\u092a\u093e\u0926\u0928 \u0915\u092e \u0939\u094b \u091c\u093e\u0924\u093e \u0939\u0948 \u0914\u0930 \u0938\u094b\u0928\u093e \u092e\u0941\u0936\u094d\u0915\u093f\u0932 \u0939\u094b \u091c\u093e\u0924\u093e \u0939\u0948\u0964</li> </ul> <p>\u091f\u093f\u092a: \u0938\u094b\u0928\u0947 \u0938\u0947 \u0915\u092e \u0938\u0947 \u0915\u092e 30 \u092e\u093f\u0928\u091f \u092a\u0939\u0932\u0947 \u0938\u094d\u0915\u094d\u0930\u0940\u0928 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u0947 \u0938\u0947 \u092c\u091a\u0947\u0902, \u092f\u093e \u0905\u092a\u0928\u0947 \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u092a\u0930 \u090f\u0915 \u0928\u0940\u0932\u0940 \u0930\u094b\u0936\u0928\u0940 \u092b\u093c\u093f\u0932\u094d\u091f\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964</p>"},{"location":"hi/chapters/chapter06/#3","title":"3. \u092e\u093e\u0928\u0938\u093f\u0915 \u0938\u094d\u0935\u093e\u0938\u094d\u0925\u094d\u092f","text":"<p>\u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e \u0915\u093e \u0905\u0927\u093f\u0915 \u0909\u092a\u092f\u094b\u0917 \u091a\u093f\u0902\u0924\u093e, \u0905\u0935\u0938\u093e\u0926, \u0914\u0930 \u0905\u0932\u0917\u093e\u0935 \u0915\u0940 \u092d\u093e\u0935\u0928\u093e\u0913\u0902 \u0915\u093e \u0915\u093e\u0930\u0923 \u092c\u0928 \u0938\u0915\u0924\u093e \u0939\u0948\u0964 \u0911\u0928\u0932\u093e\u0907\u0928 \u0917\u0924\u093f\u0935\u093f\u0927\u093f\u092f\u094b\u0902 \u0915\u094b \u0905\u0938\u0932\u0940 \u091c\u0940\u0935\u0928 \u0915\u0940 \u0907\u0902\u091f\u0930\u0948\u0915\u094d\u0936\u0928 \u0915\u0947 \u0938\u093e\u0925 \u0938\u0902\u0924\u0941\u0932\u093f\u0924 \u0915\u0930\u0928\u093e \u0906\u0935\u0936\u094d\u092f\u0915 \u0939\u0948 \u0914\u0930 \u0921\u093f\u0938\u094d\u0915\u0928\u0947\u0915\u094d\u091f \u0915\u0930\u0928\u0947 \u0915\u093e \u0938\u092e\u092f \u0928\u093f\u0915\u093e\u0932\u0928\u093e \u091a\u093e\u0939\u093f\u090f\u0964</p>"},{"location":"hi/chapters/chapter06/#_2","title":"\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940","text":"<ul> <li>Digital Footprint: \u0915\u093f\u0938\u0940 \u0935\u094d\u092f\u0915\u094d\u0924\u093f \u0915\u0940 \u0911\u0928\u0932\u093e\u0907\u0928 \u0917\u0924\u093f\u0935\u093f\u0927\u093f\u092f\u094b\u0902 \u0926\u094d\u0935\u093e\u0930\u093e \u091b\u094b\u0921\u093c\u093e \u0917\u092f\u093e \u0921\u0947\u091f\u093e \u0915\u093e \u0928\u093f\u0936\u093e\u0928\u0964</li> <li>Etiquettes: \u0928\u093f\u092f\u092e\u094b\u0902 \u0914\u0930 \u0935\u094d\u092f\u0935\u0939\u093e\u0930\u094b\u0902 \u0915\u093e \u0938\u0947\u091f \u091c\u094b \u0911\u0928\u0932\u093e\u0907\u0928 \u0938\u0902\u091a\u093e\u0930 \u092e\u0947\u0902 \u0936\u093f\u0937\u094d\u091f \u0914\u0930 \u0938\u092e\u094d\u092e\u093e\u0928\u091c\u0928\u0915 \u092e\u093e\u0928\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</li> <li>Net Surfing: \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u092c\u094d\u0930\u093e\u0909\u091c\u093c \u0915\u0930\u0928\u0947 \u0915\u0940 \u0915\u094d\u0930\u093f\u092f\u093e\u0964</li> <li>Social Media: \u092a\u094d\u0932\u0947\u091f\u092b\u093e\u0930\u094d\u092e \u091c\u094b \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u094b \u0938\u093e\u092e\u0917\u094d\u0930\u0940 \u092c\u0928\u093e\u0928\u0947 \u0914\u0930 \u0938\u093e\u091d\u093e \u0915\u0930\u0928\u0947 \u092f\u093e \u0938\u093e\u092e\u093e\u091c\u093f\u0915 \u0928\u0947\u091f\u0935\u0930\u094d\u0915\u093f\u0902\u0917 \u092e\u0947\u0902 \u092d\u093e\u0917 \u0932\u0947\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0947 \u0939\u0948\u0902\u0964</li> <li>Hacking: \u0915\u093f\u0938\u0940 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092f\u093e \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u092e\u0947\u0902 \u092c\u093f\u0928\u093e \u0905\u0928\u0941\u092e\u0924\u093f \u0915\u0947 \u092a\u0939\u0941\u0901\u091a \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u093e\u0964</li> <li>Cracking: \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e \u0939\u0948\u0915\u093f\u0902\u0917 \u091c\u094b \u0938\u093f\u0938\u094d\u091f\u092e \u092e\u0947\u0902 \u0918\u0941\u0938\u092a\u0948\u0920 \u0915\u0930\u0928\u0947 \u092a\u0930 \u0915\u0947\u0902\u0926\u094d\u0930\u093f\u0924 \u0939\u094b\u0924\u093e \u0939\u0948, \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 \u0926\u0941\u0937\u094d\u091f \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f\u0964</li> <li>Intellectual Property Rights (IPR): \u090f\u0915 \u0935\u094d\u092f\u0915\u094d\u0924\u093f \u0915\u0947 \u092e\u0928 \u0915\u0940 \u0930\u091a\u0928\u093e\u0913\u0902 \u0915\u0940 \u0930\u0915\u094d\u0937\u093e \u0915\u0930\u0928\u0947 \u0935\u093e\u0932\u0947 \u0915\u093e\u0928\u0942\u0928\u0940 \u0905\u0927\u093f\u0915\u093e\u0930\u0964</li> <li>Cybercrime: \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0914\u0930 \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0915\u0940 \u091c\u093e\u0928\u0947 \u0935\u093e\u0932\u0940 \u0906\u092a\u0930\u093e\u0927\u093f\u0915 \u0917\u0924\u093f\u0935\u093f\u0927\u093f\u092f\u093e\u0901\u0964</li> <li>Cyber Law: \u0915\u093e\u0928\u0942\u0928\u0940 \u0928\u093f\u092f\u092e \u091c\u094b \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0914\u0930 \u0921\u093f\u091c\u093f\u091f\u0932 \u0938\u0902\u091a\u093e\u0930 \u0915\u0947 \u0909\u092a\u092f\u094b\u0917 \u0915\u094b \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u093f\u0924 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</li> <li>Phishing: \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e \u0938\u093e\u0907\u092c\u0930\u0915\u094d\u0930\u093e\u0907\u092e \u091c\u0939\u093e\u0902 \u0939\u092e\u0932\u093e\u0935\u0930 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u094b \u0938\u0902\u0935\u0947\u0926\u0928\u0936\u0940\u0932 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0909\u091c\u093e\u0917\u0930 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0927\u094b\u0916\u093e \u0926\u0947\u0924\u0947 \u0939\u0948\u0902\u0964</li> <li>Cyberbullying: \u0921\u093f\u091c\u093f\u091f\u0932 \u092a\u094d\u0932\u0947\u091f\u092b\u093e\u0930\u094d\u092e\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0926\u0942\u0938\u0930\u094b\u0902 \u0915\u094b \u092a\u0930\u0947\u0936\u093e\u0928 \u0915\u0930\u0928\u093e \u092f\u093e \u0921\u0930\u093e\u0928\u093e\u0964</li> <li>Physiological: \u0936\u0930\u0940\u0930 \u0914\u0930 \u0907\u0938\u0915\u0947 \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u094b\u0902 \u0915\u0947 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924\u0964</li> </ul>"},{"location":"hi/chapters/chapter06/#_3","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940","text":"<ol> <li> <p>Digital footprint \u0915\u094d\u092f\u093e \u0939\u0948?    a) \u090f\u0915 \u0935\u094d\u092f\u0915\u094d\u0924\u093f \u0926\u094d\u0935\u093e\u0930\u093e \u091b\u094b\u0921\u093c\u093e \u0917\u092f\u093e \u0936\u093e\u0930\u0940\u0930\u093f\u0915 \u0917\u0924\u093f\u0935\u093f\u0927\u093f\u092f\u094b\u0902 \u0915\u093e \u0928\u093f\u0936\u093e\u0928    b) \u0915\u093f\u0938\u0940 \u0935\u094d\u092f\u0915\u094d\u0924\u093f \u0915\u0940 \u0911\u0928\u0932\u093e\u0907\u0928 \u0917\u0924\u093f\u0935\u093f\u0927\u093f\u092f\u094b\u0902 \u0926\u094d\u0935\u093e\u0930\u093e \u091b\u094b\u0921\u093c\u093e \u0917\u092f\u093e \u0921\u0947\u091f\u093e \u0915\u093e \u0928\u093f\u0936\u093e\u0928    c) \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e \u0938\u093e\u0907\u092c\u0930\u0915\u094d\u0930\u093e\u0907\u092e    d) \u0938\u093e\u0907\u092c\u0930 \u0939\u092e\u0932\u094b\u0902 \u0915\u094b \u0930\u094b\u0915\u0928\u0947 \u0915\u0940 \u090f\u0915 \u0935\u093f\u0927\u093f  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: Phishing \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e \u0938\u093e\u0907\u092c\u0930\u0915\u094d\u0930\u093e\u0907\u092e \u0939\u0948 \u091c\u0939\u093e\u0901 \u0905\u092a\u0930\u093e\u0927\u0940 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u094b \u0938\u0902\u0935\u0947\u0926\u0928\u0936\u0940\u0932 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0926\u0947\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0927\u094b\u0916\u093e \u0926\u0947\u0924\u0947 \u0939\u0948\u0902\u0964  </p> </li> <li> <p>Netiquette \u0915\u094d\u092f\u093e \u0939\u0948?    a) \u0935\u0947\u092c \u0915\u094b \u0924\u0947\u091c\u0940 \u0938\u0947 \u092c\u094d\u0930\u093e\u0909\u091c\u093c \u0915\u0930\u0928\u0947 \u0915\u0940 \u0924\u0915\u0928\u0940\u0915    b) \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u0936\u093f\u0937\u094d\u091f\u093e\u091a\u093e\u0930 \u092f\u093e \u0905\u091a\u094d\u091b\u0947 \u0935\u094d\u092f\u0935\u0939\u093e\u0930    c) \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u0947 \u0909\u092a\u092f\u094b\u0917 \u0915\u094b \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u093f\u0924 \u0915\u0930\u0928\u0947 \u0935\u093e\u0932\u093e \u0915\u093e\u0928\u0942\u0928    d) \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0928\u0947 \u0935\u093e\u0932\u093e \u0909\u092a\u0915\u0930\u0923  </p> </li> <li> <p>IPR \u0915\u093e \u0915\u094d\u092f\u093e \u0905\u0930\u094d\u0925 \u0939\u0948?    a) Internet Privacy Rights    b) International Policy Regulations    c) Intellectual Property Rights    d) Information Processing Rules  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e NOT \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e \u0938\u093e\u0907\u092c\u0930\u0915\u094d\u0930\u093e\u0907\u092e \u092e\u093e\u0928\u093e \u091c\u093e\u0924\u093e \u0939\u0948?    a) Phishing    b) Cyberbullying    c) Hacking    d) Copyright infringement  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: \u092d\u093e\u0930\u0924\u0940\u092f IT \u0905\u0927\u093f\u0928\u093f\u092f\u092e, 2000, \u0921\u093f\u091c\u093f\u091f\u0932 \u0938\u093f\u0917\u094d\u0928\u0947\u091a\u0930\u094d\u0938 \u0914\u0930 \u0907\u0932\u0947\u0915\u094d\u091f\u094d\u0930\u0949\u0928\u093f\u0915 \u0905\u0928\u0941\u092c\u0902\u0927\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0915\u093e\u0928\u0942\u0928\u0940 \u092e\u093e\u0928\u094d\u092f\u0924\u093e \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u0940 \u0938\u093e\u0907\u092c\u0930\u0915\u094d\u0930\u093e\u0907\u092e \u0915\u094b \u0930\u094b\u0915\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0938\u093f\u092b\u093e\u0930\u093f\u0936 \u0915\u0940 \u0917\u0908 \u092a\u094d\u0930\u0925\u093e \u0939\u0948?    a) \u0938\u0930\u0932, \u092f\u093e\u0926 \u0930\u0916\u0928\u0947 \u092e\u0947\u0902 \u0906\u0938\u093e\u0928 \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e    b) \u0915\u093f\u0938\u0940 \u092d\u0940 \u0908\u092e\u0947\u0932 \u0932\u093f\u0902\u0915 \u092a\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0928\u093e    c) \u0926\u094b-\u091a\u0930\u0923\u0940\u092f \u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0938\u0915\u094d\u0937\u092e \u0915\u0930\u0928\u093e    d) \u0938\u093e\u0930\u094d\u0935\u091c\u0928\u093f\u0915 \u092a\u094d\u0932\u0947\u091f\u092b\u093e\u0930\u094d\u092e\u094b\u0902 \u092a\u0930 \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0938\u093e\u091d\u093e \u0915\u0930\u0928\u093e  </p> </li> <li> <p>\u0938\u094d\u0915\u094d\u0930\u0940\u0928 \u0938\u092e\u092f \u0938\u0947 \u0906\u0902\u0916\u094b\u0902 \u0915\u0947 \u0924\u0928\u093e\u0935 \u0915\u094b \u0915\u092e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u0928\u093f\u092f\u092e \u0905\u0928\u0941\u0936\u0902\u0938\u093f\u0924 \u0939\u0948?    a) 10-10-10 Rule    b) 20-20-20 Rule    c) 30-30-30 Rule    d) 40-40-40 Rule  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e \u0915\u093e \u0905\u0927\u093f\u0915 \u0909\u092a\u092f\u094b\u0917 \u092e\u093e\u0928\u0938\u093f\u0915 \u0938\u094d\u0935\u093e\u0938\u094d\u0925\u094d\u092f \u092a\u0930 \u0928\u0915\u093e\u0930\u093e\u0924\u094d\u092e\u0915 \u092a\u094d\u0930\u092d\u093e\u0935 \u0921\u093e\u0932 \u0938\u0915\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>Cyberbullying \u0915\u094d\u092f\u093e \u0939\u0948?    a) \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0909\u0924\u094d\u092a\u093e\u0926 \u0916\u0930\u0940\u0926\u0928\u0947 \u0914\u0930 \u092c\u0947\u091a\u0928\u0947 \u0915\u0940 \u0915\u094d\u0930\u093f\u092f\u093e    b) \u0921\u093f\u091c\u093f\u091f\u0932 \u092a\u094d\u0932\u0947\u091f\u092b\u093e\u0930\u094d\u092e\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0926\u0942\u0938\u0930\u094b\u0902 \u0915\u094b \u092a\u0930\u0947\u0936\u093e\u0928 \u0915\u0930\u0928\u093e \u092f\u093e \u0927\u092e\u0915\u093e\u0928\u093e    c) \u0915\u093f\u0938\u0940 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u093f\u0938\u094d\u091f\u092e \u092e\u0947\u0902 \u092c\u093f\u0928\u093e \u0905\u0928\u0941\u092e\u0924\u093f \u0915\u0947 \u092a\u0939\u0941\u0901\u091a \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u093e    d) \u092c\u093f\u0928\u093e \u0938\u0939\u092e\u0924\u093f \u0915\u0947 \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0938\u093e\u091d\u093e \u0915\u0930\u0928\u093e  </p> </li> </ol>"},{"location":"hi/chapters/chapter06/#_4","title":"\u0909\u0924\u094d\u0924\u0930","text":"<ol> <li>b) \u0915\u093f\u0938\u0940 \u0935\u094d\u092f\u0915\u094d\u0924\u093f \u0915\u0940 \u0911\u0928\u0932\u093e\u0907\u0928 \u0917\u0924\u093f\u0935\u093f\u0927\u093f\u092f\u094b\u0902 \u0926\u094d\u0935\u093e\u0930\u093e \u091b\u094b\u0921\u093c\u093e \u0917\u092f\u093e \u0921\u0947\u091f\u093e \u0915\u093e \u0928\u093f\u0936\u093e\u0928</li> <li>\u0938\u0939\u0940</li> <li>b) \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u0936\u093f\u0937\u094d\u091f\u093e\u091a\u093e\u0930 \u092f\u093e \u0905\u091a\u094d\u091b\u0947 \u0935\u094d\u092f\u0935\u0939\u093e\u0930</li> <li>c) Intellectual Property Rights</li> <li>d) Copyright infringement</li> <li>\u0938\u0939\u0940</li> <li>c) \u0926\u094b-\u091a\u0930\u0923\u0940\u092f \u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0938\u0915\u094d\u0937\u092e \u0915\u0930\u0928\u093e</li> <li>b) 20-20-20 Rule</li> <li>\u0938\u0939\u0940</li> <li>b) \u0921\u093f\u091c\u093f\u091f\u0932 \u092a\u094d\u0932\u0947\u091f\u092b\u093e\u0930\u094d\u092e\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0926\u0942\u0938\u0930\u094b\u0902 \u0915\u094b \u092a\u0930\u0947\u0936\u093e\u0928 \u0915\u0930\u0928\u093e \u092f\u093e \u0927\u092e\u0915\u093e\u0928\u093e</li> </ol> <p>\u0907\u0938 \u0907\u0915\u093e\u0908 \u0928\u0947 \u0906\u092a\u0915\u094b \u0924\u0915\u0928\u0940\u0915 \u0915\u0947 \u0938\u093e\u092e\u093e\u091c\u093f\u0915 \u092a\u094d\u0930\u092d\u093e\u0935\u094b\u0902 \u0938\u0947 \u092a\u0930\u093f\u091a\u093f\u0924 \u0915\u0930\u093e\u092f\u093e \u0939\u0948, \u0921\u093f\u091c\u093f\u091f\u0932 \u092b\u0941\u091f\u092a\u094d\u0930\u093f\u0902\u091f \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0938\u0947 \u0932\u0947\u0915\u0930 \u0938\u093e\u0907\u092c\u0930\u0915\u094d\u0930\u093e\u0907\u092e \u0915\u0947 \u091c\u094b\u0916\u093f\u092e\u094b\u0902 \u0915\u094b \u0938\u092e\u091d\u0928\u0947 \u0924\u0915\u0964 \u0905\u091a\u094d\u091b\u0947 \u0928\u0947\u091f\u093f\u0915\u0947\u091f \u0915\u093e \u0905\u092d\u094d\u092f\u093e\u0938 \u0915\u0930\u0915\u0947 \u0914\u0930 \u0924\u0915\u0928\u0940\u0915 \u0915\u0947 \u0938\u094d\u0935\u093e\u0938\u094d\u0925\u094d\u092f \u092a\u094d\u0930\u092d\u093e\u0935\u094b\u0902 \u0915\u0947 \u092a\u094d\u0930\u0924\u093f \u091c\u093e\u0917\u0930\u0942\u0915 \u0930\u0939\u0915\u0930, \u0906\u092a \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u093e \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0914\u0930 \u091c\u093f\u092e\u094d\u092e\u0947\u0926\u093e\u0930\u0940 \u0938\u0947 \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter07/","title":"\u092f\u0942\u0928\u093f\u091f 7: \u0938\u0941\u091d\u093e\u090f \u0917\u090f \u0935\u094d\u092f\u093e\u0935\u0939\u093e\u0930\u093f\u0915 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u0940 \u0938\u0942\u091a\u0940","text":""},{"location":"hi/chapters/chapter07/#_1","title":"\u092a\u0930\u093f\u091a\u092f","text":"<p>\u092f\u0939 \u0907\u0915\u093e\u0908 \u0915\u0908 \u0935\u094d\u092f\u093e\u0935\u0939\u093e\u0930\u093f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u0905\u092d\u094d\u092f\u093e\u0938\u094b\u0902 \u0915\u094b \u0936\u093e\u092e\u093f\u0932 \u0915\u0930\u0924\u0940 \u0939\u0948 \u091c\u094b \u0906\u092a\u0915\u0940 \u0915\u094b\u0921\u093f\u0902\u0917 \u0915\u094c\u0936\u0932 \u0915\u094b \u092e\u091c\u092c\u0942\u0924 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0947\u0902\u0917\u0940\u0964 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0905\u092d\u094d\u092f\u093e\u0938 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0905\u0935\u0927\u093e\u0930\u0923\u093e\u0913\u0902 \u091c\u0948\u0938\u0947 \u0932\u0942\u092a, \u0936\u0930\u094d\u0924\u0947\u0902, \u092b\u093c\u0902\u0915\u094d\u0936\u0928, \u0914\u0930 \u0921\u0947\u091f\u093e \u0938\u0902\u0930\u091a\u0928\u093e\u0913\u0902 \u0915\u094b \u0915\u0935\u0930 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u0939\u092e \u092a\u0939\u0932\u0947 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0905\u092d\u094d\u092f\u093e\u0938 \u0915\u0947 \u0932\u093f\u090f Skeleton\u0940 \u0915\u094b\u0921 \u092a\u094d\u0930\u0938\u094d\u0924\u0941\u0924 \u0915\u0930\u0947\u0902\u0917\u0947, \u0907\u0938\u0915\u0947 \u092c\u093e\u0926 \u092a\u0942\u0930\u094d\u0923 \u0938\u092e\u093e\u0927\u093e\u0928 \u0914\u0930 \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e\u090f\u0901 \u0926\u0940 \u091c\u093e\u090f\u0902\u0917\u0940\u0964 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0905\u092d\u094d\u092f\u093e\u0938 \u0915\u0947 \u092c\u093e\u0926, \u0906\u092a\u0915\u094b \u0905\u0935\u0927\u093e\u0930\u0923\u093e\u0913\u0902 \u0915\u0940 \u0906\u092a\u0915\u0940 \u0938\u092e\u091d \u0915\u094b \u092a\u0930\u0916\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u094d\u0930\u0936\u094d\u0928\u094b\u0924\u094d\u0924\u0930\u0940 \u092a\u094d\u0930\u0936\u094d\u0928\u094b\u0902 \u0915\u093e \u090f\u0915 \u0938\u0947\u091f \u092e\u093f\u0932\u0947\u0917\u093e\u0964</p>"},{"location":"hi/chapters/chapter07/#skeleton","title":"\u0938\u092d\u0940 \u0935\u094d\u092f\u093e\u0935\u0939\u093e\u0930\u093f\u0915 \u092a\u0930\u093f\u092f\u094b\u091c\u0928\u093e\u0913\u0902 \u0915\u0947 \u0932\u093f\u090f Skeleton \u0915\u094b\u0921","text":"<ol> <li> <p>\"Hello computer world!\" \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0902 <pre><code># Skeleton\n# print(\"Hello computer world!\")\n</code></pre></p> </li> <li> <p>\u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u091c\u094b\u0921\u093c\u0947\u0902 <pre><code># Skeleton\n# num1 =\n# num2 =\n# result =\n# print(result)\n</code></pre></p> </li> <li> <p>\u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u093e \u0905\u0902\u0924\u0930 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0902 <pre><code># Skeleton\n# num1 =\n# num2 =\n# result =\n# print(result)\n</code></pre></p> </li> <li> <p>\u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u092e\u0947\u0902 \u0938\u0947 \u092c\u0921\u093c\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u0916\u094b\u091c\u0947\u0902 <pre><code># Skeleton\n# num1 =\n# num2 =\n# if num1 &gt; num2:\n#    print(num1)\n# else:\n#    print(num2)\n</code></pre></p> </li> <li> <p>\u0935\u0930\u094d\u0917\u092e\u0942\u0932 \u0916\u094b\u091c\u0947\u0902 <pre><code># Skeleton\n# import math\n# num =\n# sqrt =\n# print(sqrt)\n</code></pre></p> </li> <li> <p>\u0926\u094b \u091a\u0930 \u092c\u0926\u0932\u0947\u0902 <pre><code># Skeleton\n# a =\n# b =\n# a, b = b, a\n# print(a, b)\n</code></pre></p> </li> <li> <p>\u0915\u093f\u0932\u094b\u092e\u0940\u091f\u0930 \u0915\u094b \u092e\u0940\u0932 \u092e\u0947\u0902 \u092c\u0926\u0932\u0947\u0902 <pre><code># Skeleton\n# km =\n# miles =\n# print(miles)\n</code></pre></p> </li> <li> <p>\u0938\u0947\u0932\u094d\u0938\u093f\u092f\u0938 \u0915\u094b \u092b\u093e\u0930\u0947\u0928\u0939\u093e\u0907\u091f \u092e\u0947\u0902 \u092c\u0926\u0932\u0947\u0902 <pre><code># Skeleton\n# celsius =\n# fahrenheit =\n# print(fahrenheit)\n</code></pre></p> </li> <li> <p>LCM \u0916\u094b\u091c\u0947\u0902 <pre><code># Skeleton\n# def find_lcm(x, y):\n#    # LCM \u0932\u0949\u091c\u093f\u0915 \u092f\u0939\u093e\u0901\n</code></pre></p> </li> <li> <p>HCF \u0916\u094b\u091c\u0947\u0902 <pre><code># Skeleton\n# def find_hcf(x, y):\n#    # HCF \u0932\u0949\u091c\u093f\u0915 \u092f\u0939\u093e\u0901\n</code></pre></p> </li> <li> <p>While \u0932\u0942\u092a \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u092a\u0939\u0932\u0947 \u0926\u0938 \u092a\u094d\u0930\u093e\u0915\u0943\u0924\u093f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e\u090f\u0901 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0902 <pre><code># Skeleton\n# i = 1\n# while i &lt;= 10:\n#    print(i)\n#    i += 1\n</code></pre></p> </li> <li> <p>For \u0932\u0942\u092a \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 'PYTHON' \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u092e\u0947\u0902 \u0905\u0915\u094d\u0937\u0930 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0902 <pre><code># Skeleton\n# for char in 'PYTHON':\n#    print(char)\n</code></pre></p> </li> <li> <p>\u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0926\u094d\u0935\u093e\u0930\u093e \u0907\u0928\u092a\u0941\u091f \u0915\u0940 \u0917\u0908 \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u092a\u0948\u091f\u0930\u094d\u0928 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0902 <pre><code># Skeleton\n# num = int(input(\"\u090f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902: \"))\n# for i in range(1, num+1):\n#    # \u092a\u0948\u091f\u0930\u094d\u0928 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0902\n</code></pre></p> </li> <li> <p>\u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0906\u092f\u0924 \u0915\u093e \u0915\u094d\u0937\u0947\u0924\u094d\u0930\u092b\u0932 \u0914\u0930 \u092a\u0930\u093f\u092e\u093e\u0923 \u0916\u094b\u091c\u0947\u0902 <pre><code># Skeleton\n# def calculate_rectangle(length, breadth):\n#    # \u0915\u094d\u0937\u0947\u0924\u094d\u0930\u092b\u0932 \u0914\u0930 \u092a\u0930\u093f\u092e\u093e\u0923 \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0930\u0947\u0902\n</code></pre></p> </li> <li> <p>\u0938\u0942\u091a\u0940 \u092e\u0947\u0902 \u0924\u0924\u094d\u0935 \u091c\u094b\u0921\u093c\u0947\u0902 <pre><code># Skeleton\n# my_list = []\n# element =\n# my_list.append(element)\n# print(my_list)\n</code></pre></p> </li> <li> <p>\u090f\u0915 \u0936\u092c\u094d\u0926\u0915\u094b\u0936 \u092c\u0928\u093e\u090f\u0901 <pre><code># Skeleton\n# my_dict = {}\n# my_dict['key'] = 'value'\n# print(my_dict)\n</code></pre></p> </li> <li> <p>\u090f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u093e \u092b\u0948\u0915\u094d\u091f\u094b\u0930\u093f\u092f\u0932 \u0916\u094b\u091c\u0947\u0902 <pre><code># Skeleton\n# def factorial(n):\n#    # \u092b\u0948\u0915\u094d\u091f\u0930\u093f\u092f\u0932 \u0932\u0949\u091c\u093f\u0915\n</code></pre></p> </li> </ol>"},{"location":"hi/chapters/chapter07/#_2","title":"\u092a\u0942\u0930\u094d\u0923 \u0938\u092e\u093e\u0927\u093e\u0928 \u0914\u0930 \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e\u090f\u0901","text":""},{"location":"hi/chapters/chapter07/#1-hello-computer-world","title":"1. \"Hello computer world!\" \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0902","text":"<p>\u092a\u0942\u0930\u094d\u0923 \u0915\u094b\u0921: <pre><code>print(\"Hello computer world!\")\n</code></pre></p> <p>\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e Python \u0915\u0947 \u0905\u0902\u0924\u0930\u094d\u0928\u093f\u0939\u093f\u0924 <code>print()</code> \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \"Hello computer world!\" \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0915\u094b \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter07/#2","title":"2. \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u091c\u094b\u0921\u093c\u0947\u0902","text":"<p>\u092a\u0942\u0930\u094d\u0923 \u0915\u094b\u0921: <pre><code>num1 = 5\nnum2 = 3\nresult = num1 + num2\nprint(result)\n</code></pre></p> <p>\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u091c\u094b\u0921\u093c\u0924\u093e \u0939\u0948 \u0914\u0930 \u092a\u0930\u093f\u0923\u093e\u092e \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter07/#3","title":"3. \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u093e \u0905\u0902\u0924\u0930 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0902","text":"<p>\u092a\u0942\u0930\u094d\u0923 \u0915\u094b\u0921: <pre><code>num1 = 10\nnum2 = 7\nresult = num1 - num2\nprint(result)\n</code></pre></p> <p>\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u0947 \u092c\u0940\u091a \u0915\u093e \u0905\u0902\u0924\u0930 \u0928\u093f\u0915\u093e\u0932\u0924\u093e \u0939\u0948 \u0914\u0930 \u092a\u0930\u093f\u0923\u093e\u092e \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter07/#4","title":"4. \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u092e\u0947\u0902 \u0938\u0947 \u092c\u0921\u093c\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u0916\u094b\u091c\u0947\u0902","text":"<p>\u092a\u0942\u0930\u094d\u0923 \u0915\u094b\u0921: <pre><code>num1 = 10\nnum2 = 15\nif num1 &gt; num2:\n    print(num1)\nelse:\n    print(num2)\n</code></pre></p> <p>\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u0940 \u0924\u0941\u0932\u0928\u093e \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u092c\u0921\u093c\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u094b \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter07/#5","title":"5. \u0935\u0930\u094d\u0917\u092e\u0942\u0932 \u0916\u094b\u091c\u0947\u0902","text":"<p>\u092a\u0942\u0930\u094d\u0923 \u0915\u094b\u0921: <pre><code>import math\nnum = 16\nsqrt = math.sqrt(num)\nprint(sqrt)\n</code></pre></p> <p>\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e Python \u0915\u0947 <code>math</code> \u092e\u0949\u0921\u094d\u092f\u0942\u0932 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0915\u093f\u0938\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u093e \u0935\u0930\u094d\u0917\u092e\u0942\u0932 \u0928\u093f\u0915\u093e\u0932\u0924\u093e \u0939\u0948 \u0914\u0930 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter07/#6","title":"6. \u0926\u094b \u091a\u0930 \u092c\u0926\u0932\u0947\u0902","text":"<p>\u092a\u0942\u0930\u094d\u0923 \u0915\u094b\u0921: <pre><code>a = 5\nb = 10\na, b = b, a\nprint(a, b)\n</code></pre></p> <p>\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0926\u094b \u091a\u0930 \u0915\u0947 \u092e\u093e\u0928\u094b\u0902 \u0915\u094b \u092c\u0926\u0932\u0924\u093e \u0939\u0948 \u0914\u0930 \u092a\u0930\u093f\u0923\u093e\u092e \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter07/#7_1","title":"7. \u0915\u093f\u0932\u094b\u092e\u0940\u091f\u0930 \u0915\u094b \u092e\u0940\u0932 \u092e\u0947\u0902 \u092c\u0926\u0932\u0947\u0902","text":"<p>\u092a\u0942\u0930\u094d\u0923 \u0915\u094b\u0921: <pre><code>km = 5\nmiles = km * 0.621371\nprint(miles)\n</code></pre></p> <p>\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u093f\u0932\u094b\u092e\u0940\u091f\u0930 \u0915\u094b \u092e\u0940\u0932 \u092e\u0947\u0902 \u092c\u0926\u0932\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter07/#8","title":"8. \u0938\u0947\u0932\u094d\u0938\u093f\u092f\u0938 \u0915\u094b \u092b\u093e\u0930\u0947\u0928\u0939\u093e\u0907\u091f \u092e\u0947\u0902 \u092c\u0926\u0932\u0947\u0902","text":"<p>\u092a\u0942\u0930\u094d\u0923 \u0915\u094b\u0921: <pre><code>celsius = 25\nfahrenheit = (celsius * 9/5) + 32\nprint(fahrenheit)\n</code></pre></p> <p>\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0924\u093e\u092a\u092e\u093e\u0928 \u0915\u094b \u0938\u0947\u0932\u094d\u0938\u093f\u092f\u0938 \u0938\u0947 \u092b\u093e\u0930\u0947\u0928\u0939\u093e\u0907\u091f \u092e\u0947\u0902 \u092c\u0926\u0932\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter07/#9-lcm","title":"9. LCM \u0916\u094b\u091c\u0947\u0902","text":"<p>\u092a\u0942\u0930\u094d\u0923 \u0915\u094b\u0921: <pre><code>def find_lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nprint(find_lcm(4, 6))\n</code></pre></p> <p>\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u093e \u0928\u094d\u092f\u0942\u0928\u0924\u092e \u0938\u092e\u093e\u092a\u0935\u0930\u094d\u0924\u094d\u092f (LCM) \u0916\u094b\u091c\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter07/#10-hcf","title":"10. HCF \u0916\u094b\u091c\u0947\u0902","text":"<p>\u092a\u0942\u0930\u094d\u0923 \u0915\u094b\u0921: <pre><code>def find_hcf(x, y):\n    smaller = min(x, y)\n    for i in range(1, smaller + 1):\n        if x % i == 0 and y % i == 0:\n            hcf = i\n    return hcf\n\nprint(find_hcf(4, 6))\n</code></pre></p> <p>\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u093e \u0909\u091a\u094d\u091a\u0924\u092e \u0938\u092e\u093e\u092a\u0935\u0930\u094d\u0924\u0915 (HCF) \u0916\u094b\u091c\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter07/#11-while","title":"11. While \u0932\u0942\u092a \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u092a\u0939\u0932\u0947 \u0926\u0938 \u092a\u094d\u0930\u093e\u0915\u0943\u0924\u093f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e\u090f\u0901 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0902","text":"<p>\u092a\u0942\u0930\u094d\u0923 \u0915\u094b\u0921: <pre><code>i = 1\nwhile i &lt;= 10:\n    print(i)\n    i += 1\n</code></pre></p> <p>\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u090f\u0915 <code>while</code> \u0932\u0942\u092a \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u092a\u0939\u0932\u0947 \u0926\u0938 \u092a\u094d\u0930\u093e\u0915\u0943\u0924\u093f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e\u090f\u0901 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter07/#12-for-python","title":"12. For \u0932\u0942\u092a \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 'PYTHON' \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u092e\u0947\u0902 \u0905\u0915\u094d\u0937\u0930 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0902","text":"<p>\u092a\u0942\u0930\u094d\u0923 \u0915\u094b\u0921: <pre><code>for char in 'PYTHON':\n    print(char)\n</code></pre></p> <p>\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \"PYTHON\" \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0915\u0947 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0905\u0915\u094d\u0937\u0930 \u0915\u094b <code>for</code> \u0932\u0942\u092a \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e</p>"},{"location":"hi/chapters/chapter07/#13","title":"13. \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0926\u094d\u0935\u093e\u0930\u093e \u0907\u0928\u092a\u0941\u091f \u0915\u093f\u090f \u0917\u090f \u0928\u0902\u092c\u0930 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u092a\u0948\u091f\u0930\u094d\u0928 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0902","text":"<p>\u092a\u0942\u0930\u094d\u0923 \u0915\u094b\u0921: <pre><code>num = int(input(\"Enter a number: \"))\nfor i in range(1, num + 1):\n    print('*' * i)\n</code></pre></p> <p>\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u0947 \u0907\u0928\u092a\u0941\u091f \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0924\u093e\u0930\u094b\u0902 \u0915\u093e \u090f\u0915 \u092a\u0948\u091f\u0930\u094d\u0928 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter07/#14-","title":"14. \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e-\u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0906\u092f\u0924 \u0915\u093e \u0915\u094d\u0937\u0947\u0924\u094d\u0930\u092b\u0932 \u0914\u0930 \u092a\u0930\u093f\u092e\u093e\u0923 \u091c\u094d\u091e\u093e\u0924 \u0915\u0930\u0947\u0902","text":"<p>\u092a\u0942\u0930\u094d\u0923 \u0915\u094b\u0921: <pre><code>def calculate_rectangle(length, breadth):\n    area = length * breadth\n    perimeter = 2 * (length + breadth)\n    return area, perimeter\n\nlength = 5\nbreadth = 3\narea, perimeter = calculate_rectangle(length, breadth)\nprint(\"Area:\", area)\nprint(\"Perimeter:\", perimeter)\n</code></pre></p> <p>\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u090f\u0915 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e-\u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0906\u092f\u0924 \u0915\u093e \u0915\u094d\u0937\u0947\u0924\u094d\u0930\u092b\u0932 \u0914\u0930 \u092a\u0930\u093f\u092e\u093e\u0923 \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter07/#15","title":"15. \u090f\u0915 \u0938\u0942\u091a\u0940 \u092e\u0947\u0902 \u0924\u0924\u094d\u0935 \u091c\u094b\u0921\u093c\u0947\u0902","text":"<p>\u092a\u0942\u0930\u094d\u0923 \u0915\u094b\u0921: <pre><code>my_list = [1, 2, 3]\nelement = 4\nmy_list.append(element)\nprint(my_list)\n</code></pre></p> <p>\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e <code>append()</code> \u0935\u093f\u0927\u093f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0938\u0942\u091a\u0940 \u092e\u0947\u0902 \u090f\u0915 \u0924\u0924\u094d\u0935 \u091c\u094b\u0921\u093c\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter07/#16","title":"16. \u090f\u0915 \u0936\u092c\u094d\u0926\u0915\u094b\u0936 \u092c\u0928\u093e\u090f\u0902","text":"<p>\u092a\u0942\u0930\u094d\u0923 \u0915\u094b\u0921: <pre><code>my_dict = {}\nmy_dict['name'] = 'Alice'\nmy_dict['age'] = 25\nprint(my_dict)\n</code></pre></p> <p>\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u0941\u0902\u091c\u0940-\u092e\u0942\u0932\u094d\u092f \u091c\u094b\u0921\u093c\u0947 \u0915\u0947 \u0938\u093e\u0925 \u090f\u0915 \u0936\u092c\u094d\u0926\u0915\u094b\u0936 \u092c\u0928\u093e\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter07/#17","title":"17. \u090f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u093e \u0917\u0941\u0923\u093e\u0902\u0915 \u091c\u094d\u091e\u093e\u0924 \u0915\u0930\u0947\u0902","text":"<p>\u092a\u0942\u0930\u094d\u0923 \u0915\u094b\u0921: <pre><code>def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(5))\n</code></pre></p> <p>\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u093e \u0917\u0941\u0923\u093e\u0902\u0915 \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter07/#_3","title":"\u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u092a\u094d\u0930\u093e\u092f\u094b\u0917\u093f\u0915 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0915\u0947 \u0932\u093f\u090f \u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940","text":"<p>\u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u092a\u094d\u0930\u093e\u092f\u094b\u0917\u093f\u0915 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0915\u0947 \u0905\u092a\u0928\u0947-\u0905\u092a\u0928\u0947 \u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 \u092a\u094d\u0930\u0936\u094d\u0928 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u0924\u093e\u0915\u093f \u0906\u092a\u0915\u0940 \u0938\u092e\u091d \u0915\u093e \u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0947\u0964 \u092f\u0939\u093e\u0902 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0915\u0947 \u0932\u093f\u090f \u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 \u092a\u094d\u0930\u0936\u094d\u0928 \u0939\u0948\u0902:</p>"},{"location":"hi/chapters/chapter07/#1-hello-computer-world_1","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 1: \"Hello computer world!\" \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0902","text":"<ol> <li>Python \u092e\u0947\u0902 \u0906\u0909\u091f\u092a\u0941\u091f \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?</li> <li>Python \u092e\u0947\u0902 \u091f\u0947\u0915\u094d\u0938\u094d\u091f \u0915\u094b \u0915\u0948\u0938\u0947 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0902?</li> <li>Python \u092e\u0947\u0902 \u090f\u0915 \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0915\u094b \u0907\u0902\u0917\u0940\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u091a\u093f\u0928\u094d\u0939 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?</li> <li>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: <code>print()</code> \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0906\u092a\u0915\u094b \u090f\u0915 \u0932\u093e\u0907\u092c\u094d\u0930\u0947\u0930\u0940 \u0906\u092f\u093e\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u0948\u0964</li> <li><code>print(\"Hello computer world!\")</code> \u0915\u094d\u092f\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0926\u0947\u0917\u093e?</li> </ol>"},{"location":"hi/chapters/chapter07/#2_1","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 2: \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u090f\u0901 \u091c\u094b\u0921\u093c\u0947\u0902","text":"<ol> <li>Python \u092e\u0947\u0902 \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u0911\u092a\u0930\u0947\u091f\u0930 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?</li> <li>Python \u092e\u0947\u0902 \u090f\u0915 \u091a\u0930 \u0915\u094b \u090f\u0915 \u092e\u093e\u0928 \u0905\u0938\u093e\u0907\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0948\u0938\u0947 \u0915\u0930\u0947\u0902?</li> <li><code>print(5 + 3)</code> \u0915\u094d\u092f\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0926\u0947\u0917\u093e?</li> <li>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: Python \u092e\u0947\u0902 \u0935\u0947\u0930\u093f\u090f\u092c\u0932\u094d\u0938 \u0915\u094b \u0909\u0928\u0915\u0947 \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u0947 \u0938\u093e\u0925 \u0918\u094b\u0937\u093f\u0924 \u0915\u0930\u0928\u093e \u0906\u0935\u0936\u094d\u092f\u0915 \u0939\u0948\u0964</li> <li><code>num1 = 5</code> \u0914\u0930 <code>num2 = 7</code> \u0915\u0947 \u092a\u0930\u093f\u0923\u093e\u092e\u0938\u094d\u0935\u0930\u0942\u092a <code>print(num1 + num2)</code> \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e?</li> </ol>"},{"location":"hi/chapters/chapter07/#3_1","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 3: \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u093e \u0905\u0902\u0924\u0930 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0902","text":"<ol> <li>Python \u092e\u0947\u0902 \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u0918\u091f\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u0911\u092a\u0930\u0947\u091f\u0930 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?</li> <li><code>print(10 - 3)</code> \u0915\u094d\u092f\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0926\u0947\u0917\u093e?</li> <li>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: <code>10 - 5</code> \u090f\u0915 \u092e\u093e\u0928\u094d\u092f Python \u0905\u092d\u093f\u0935\u094d\u092f\u0915\u094d\u0924\u093f \u0939\u0948\u0964</li> <li>\u092f\u0926\u093f <code>num1 = 15</code> \u0914\u0930 <code>num2 = 5</code>, \u0924\u094b <code>print(num1 - num2)</code> \u0915\u094d\u092f\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0926\u0947\u0917\u093e?</li> <li><code>print(20 - 10)</code> \u0915\u093e \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u094d\u092f\u093e \u0939\u0948?</li> </ol>"},{"location":"hi/chapters/chapter07/#4_1","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 4: \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u092e\u0947\u0902 \u0938\u0947 \u092c\u0921\u093c\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u091c\u094d\u091e\u093e\u0924 \u0915\u0930\u0947\u0902","text":"<ol> <li>Python \u092e\u0947\u0902 \u090f\u0915 \u0936\u0930\u094d\u0924\u0940\u092f \u0915\u0925\u0928 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u0915\u0940\u0935\u0930\u094d\u0921 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?</li> <li>Python \u092e\u0947\u0902 \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u0940 \u0924\u0941\u0932\u0928\u093e \u0915\u0948\u0938\u0947 \u0915\u0930\u0947\u0902 \u0924\u093e\u0915\u093f \u092f\u0939 \u091c\u093e\u0901\u091a\u093e \u091c\u093e \u0938\u0915\u0947 \u0915\u093f \u090f\u0915 \u092c\u0921\u093c\u0940 \u0939\u0948?</li> <li>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: \u090f\u0915 <code>if</code> \u0915\u0925\u0928 \u0915\u0947 \u092c\u093e\u0926 <code>else</code> \u092c\u094d\u0932\u0949\u0915 \u0906\u0935\u0936\u094d\u092f\u0915 \u0939\u0948\u0964</li> <li>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e:    <pre><code>if 10 &gt; 5:\n    print(\"Larger\")\nelse:\n    print(\"Smaller\")\n</code></pre></li> <li><code>15 &gt; 20</code> \u0915\u0940 \u0924\u0941\u0932\u0928\u093e \u0915\u093e \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u094d\u092f\u093e \u0939\u0948?</li> </ol>"},{"location":"hi/chapters/chapter07/#5_1","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 5: \u0935\u0930\u094d\u0917\u092e\u0942\u0932 \u091c\u094d\u091e\u093e\u0924 \u0915\u0930\u0947\u0902","text":"<ol> <li>\u0915\u093f\u0938\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u093e \u0935\u0930\u094d\u0917\u092e\u0942\u0932 \u091c\u094d\u091e\u093e\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e Python \u092e\u0949\u0921\u094d\u092f\u0942\u0932 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?</li> <li>Python \u092e\u0947\u0902 \u0935\u0930\u094d\u0917\u092e\u0942\u0932 \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?</li> <li>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: <code>sqrt()</code> \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0947\u0935\u0932 <code>math</code> \u092e\u0949\u0921\u094d\u092f\u0942\u0932 \u0906\u092f\u093e\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u092c\u093e\u0926 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964</li> <li><code>math.sqrt(25)</code> \u0915\u094d\u092f\u093e \u0932\u094c\u091f\u093e\u090f\u0917\u093e?</li> <li>\u092f\u0926\u093f <code>num = 36</code>, \u0924\u094b <code>math.sqrt(num)</code> \u0915\u094d\u092f\u093e \u0932\u094c\u091f\u093e\u090f\u0917\u093e?</li> </ol>"},{"location":"hi/chapters/chapter07/#6_1","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 6: \u0926\u094b \u091a\u0930 \u0938\u094d\u0935\u0948\u092a \u0915\u0930\u0947\u0902","text":"<ol> <li>Python \u092e\u0947\u0902 \u0926\u094b \u0935\u0947\u0930\u093f\u090f\u092c\u0932\u094d\u0938 \u0915\u0947 \u092e\u093e\u0928 \u0915\u094b \u0938\u094d\u0935\u0948\u092a \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0948\u0938\u0947 \u0915\u0930\u0947\u0902?</li> <li><code>a, b = 10, 20</code> \u0915\u0947 \u092c\u093e\u0926 <code>a, b = b, a</code> \u0915\u0947 \u0932\u093f\u090f <code>a</code> \u0914\u0930 <code>b</code> \u0915\u094d\u092f\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0926\u0947\u0902\u0917\u0947?</li> <li>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: <code>swap</code> \u092b\u093c\u0902\u0915\u094d\u0936\u0928 Python \u092e\u0947\u0902 \u0905\u0902\u0924\u0930\u094d\u0928\u093f\u0939\u093f\u0924 \u0939\u0948\u0964</li> <li>Python \u092e\u0947\u0902 <code>a, b = b, a</code> \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948?</li> <li><code>a = 5</code> \u0914\u0930 <code>b = 10</code> \u0915\u094b \u0938\u094d\u0935\u0948\u092a \u0915\u0930\u0928\u0947 \u0915\u093e \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u094d\u092f\u093e \u0939\u0948?</li> </ol>"},{"location":"hi/chapters/chapter07/#7_2","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 7: \u0915\u093f\u0932\u094b\u092e\u0940\u091f\u0930 \u0915\u094b \u092e\u0940\u0932 \u092e\u0947\u0902 \u092c\u0926\u0932\u0947\u0902","text":"<ol> <li>\u0915\u093f\u0932\u094b\u092e\u0940\u091f\u0930 \u0938\u0947 \u092e\u0940\u0932 \u092e\u0947\u0902 \u092c\u0926\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u0930\u0942\u092a\u093e\u0902\u0924\u0930\u0923 \u0915\u093e\u0930\u0915 \u0939\u0948?</li> <li>Python \u092e\u0947\u0902 \u0926\u094b \u0935\u0947\u0930\u093f\u090f\u092c\u0932\u094d\u0938 \u0915\u094b \u0917\u0941\u0923\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0948\u0938\u0947 \u0915\u0930\u0947\u0902?</li> <li><code>5 * 0.621371</code> \u0915\u094d\u092f\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0926\u0947\u0917\u093e?</li> <li>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: Python \u092e\u0947\u0902 \u0917\u0941\u0923\u093e \u0915\u0947 \u0932\u093f\u090f <code>*</code> \u0911\u092a\u0930\u0947\u091f\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</li> <li>10 \u0915\u093f\u0932\u094b\u092e\u0940\u091f\u0930 \u0915\u094b \u092e\u0940\u0932 \u092e\u0947\u0902 \u092c\u0926\u0932\u0928\u0947 \u0915\u093e \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u094d\u092f\u093e \u0939\u0948?</li> </ol>"},{"location":"hi/chapters/chapter07/#8_1","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 8: \u0938\u0947\u0932\u094d\u0938\u093f\u092f\u0938 \u0915\u094b \u092b\u093c\u093e\u0930\u0947\u0928\u0939\u093e\u0907\u091f \u092e\u0947\u0902 \u092c\u0926\u0932\u0947\u0902","text":"<ol> <li>\u0938\u0947\u0932\u094d\u0938\u093f\u092f\u0938 \u0915\u094b \u092b\u093c\u093e\u0930\u0947\u0928\u0939\u093e\u0907\u091f \u092e\u0947\u0902 \u092c\u0926\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0942\u0924\u094d\u0930 \u0915\u094d\u092f\u093e \u0939\u0948?</li> <li>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e:    <pre><code>celsius = 0\nfahrenheit = (celsius * 9/5) + 32\nprint(fahrenheit)\n</code></pre></li> <li>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: <code>(32 * 9/5) + 32</code> 32\u00b0C \u0915\u094b \u092b\u093c\u093e\u0930\u0947\u0928\u0939\u093e\u0907\u091f \u092e\u0947\u0902 \u092c\u0926\u0932 \u0926\u0947\u0917\u093e\u0964</li> <li>100\u00b0C \u0915\u094b \u092b\u093c\u093e\u0930\u0947\u0928\u0939\u093e\u0907\u091f \u092e\u0947\u0902 \u092c\u0926\u0932\u0928\u0947 \u0915\u093e \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u094d\u092f\u093e \u0939\u0948?</li> <li>-40\u00b0C \u0915\u093e \u092b\u093c\u093e\u0930\u0947\u0928\u0939\u093e\u0907\u091f \u0938\u092e\u0915\u0915\u094d\u0937 \u0915\u094d\u092f\u093e \u0939\u0948?</li> </ol>"},{"location":"hi/chapters/chapter07/#9-lcm_1","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 9: LCM \u091c\u094d\u091e\u093e\u0924 \u0915\u0930\u0947\u0902","text":"<ol> <li>LCM \u0915\u093e \u0915\u094d\u092f\u093e \u0905\u0930\u094d\u0925 \u0939\u0948?</li> <li>Python \u092e\u0947\u0902 \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u093e LCM \u0915\u0948\u0938\u0947 \u091c\u094d\u091e\u093e\u0924 \u0915\u0930\u0947\u0902?</li> <li>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: 4 \u0914\u0930 6 \u0915\u093e LCM 12 \u0939\u0948\u0964</li> <li><code>find_lcm(3, 5)</code> \u0915\u094d\u092f\u093e \u0932\u094c\u091f\u093e\u090f\u0917\u093e?</li> <li>8 \u0914\u0930 12 \u0915\u093e LCM \u0915\u094d\u092f\u093e \u0939\u0948?</li> </ol>"},{"location":"hi/chapters/chapter07/#10-hcf_1","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 10: HCF \u091c\u094d\u091e\u093e\u0924 \u0915\u0930\u0947\u0902","text":"<ol> <li>HCF \u0915\u093e \u0915\u094d\u092f\u093e \u0905\u0930\u094d\u0925 \u0939\u0948?</li> <li>HCF \u0915\u093e \u090f\u0915 \u0914\u0930 \u0928\u093e\u092e \u0915\u094d\u092f\u093e \u0939\u0948?</li> <li>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: 12 \u0914\u0930 18 \u0915\u093e HCF 6 \u0939\u0948\u0964</li> <li><code>find_hcf(8, 12)</code> \u0915\u094d\u092f\u093e \u0932\u094c\u091f\u093e\u090f\u0917\u093e?</li> <li>15 \u0914\u0930 20 \u0915\u093e HCF \u0915\u094d\u092f\u093e \u0939\u0948?</li> </ol>"},{"location":"hi/chapters/chapter07/#11","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 11: \u090f\u0915 \u0935\u093e\u0907\u0932 \u0932\u0942\u092a \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u092a\u0939\u0932\u0947 \u0926\u0938 \u092a\u094d\u0930\u093e\u0915\u0943\u0924\u093f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e\u090f\u0901 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0902","text":"<ol> <li>Python \u092e\u0947\u0902 <code>while</code> \u0932\u0942\u092a \u0915\u0940 \u0938\u093f\u0902\u091f\u0948\u0915\u094d\u0938 \u0915\u094d\u092f\u093e \u0939\u0948?</li> <li>\u0935\u093e\u0907\u0932 \u0932\u0942\u092a \u0915\u0947 \u0905\u0902\u0926\u0930 \u090f\u0915 \u0935\u0947\u0930\u093f\u090f\u092c\u0932 \u0915\u094b \u0915\u0948\u0938\u0947 \u092c\u0922\u093c\u093e\u090f\u0902?</li> <li>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: \u090f\u0915 \u0935\u093e\u0907\u0932 \u0932\u0942\u092a \u092e\u0947\u0902 \u0936\u0930\u094d\u0924 \u0939\u092e\u0947\u0936\u093e <code>True</code> \u0939\u094b\u0928\u0940 \u091a\u093e\u0939\u093f\u090f \u0924\u093e\u0915\u093f \u0935\u0939 \u091a\u0932\u0947\u0964</li> <li>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e:    <pre><code>i = 1\nwhile i &lt;= 3:\n    print(i)\n    i += 1\n</code></pre></li> <li>\u092a\u0939\u0932\u0947 \u0926\u0938 \u092a\u094d\u0930\u093e\u0915\u0943\u0924\u093f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e\u090f\u0901 \u0915\u094d\u092f\u093e \u0939\u0948\u0902?</li> </ol>"},{"location":"hi/chapters/chapter07/#12-python","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 12: 'PYTHON' \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u092e\u0947\u0902 \u0935\u0930\u094d\u0923 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0902 \u090f\u0915 \u092b\u0949\u0930 \u0932\u0942\u092a \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947","text":"<ol> <li>Python \u092e\u0947\u0902 <code>for</code> \u0932\u0942\u092a \u0915\u0940 \u0938\u093f\u0902\u091f\u0948\u0915\u094d\u0938 \u0915\u094d\u092f\u093e \u0939\u0948?</li> <li>Python \u092e\u0947\u0902 \u090f\u0915 \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u092e\u0947\u0902</li> </ol> <p>\u0935\u0930\u094d\u0923\u094b\u0902 \u0915\u094b \u0915\u0948\u0938\u0947 \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930\u0947\u0902? 3. \u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: <code>for char in \"hello\":</code> \u0932\u0942\u092a <code>h</code>, <code>e</code>, <code>l</code>, <code>l</code>, <code>o</code> \u0915\u0947 \u0932\u093f\u090f \u091a\u0932\u0947\u0917\u093e\u0964 4. \u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e:    <pre><code>for char in \"PYTHON\":\n    print(char)\n</code></pre> 5. \"HELLO\" \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0915\u0947 \u0938\u092d\u0940 \u0935\u0930\u094d\u0923 \u0915\u094d\u092f\u093e \u0939\u0948\u0902?</p>"},{"location":"hi/chapters/chapter07/#13_1","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 13: \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0926\u094d\u0935\u093e\u0930\u093e \u0907\u0928\u092a\u0941\u091f \u0915\u093f\u090f \u0917\u090f \u0928\u0902\u092c\u0930 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u092a\u0948\u091f\u0930\u094d\u0928 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0902","text":"<ol> <li>Python \u092e\u0947\u0902 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0938\u0947 \u0907\u0928\u092a\u0941\u091f \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?</li> <li>\u092a\u0948\u091f\u0930\u094d\u0928 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0932\u0942\u092a \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0948\u0938\u0947 \u0915\u0930\u0947\u0902?</li> <li>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: <code>print('*' * 5)</code> 5 \u0924\u093e\u0930\u0947 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0917\u093e\u0964</li> <li>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e:    <pre><code>for i in range(1, 4):\n    print('*' * i)\n</code></pre></li> <li>\u092f\u0926\u093f \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0928\u0947 4 \u0907\u0928\u092a\u0941\u091f \u0915\u093f\u092f\u093e, \u0924\u094b \u092a\u0948\u091f\u0930\u094d\u0928 \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e?</li> </ol>"},{"location":"hi/chapters/chapter07/#14-_1","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 14: \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e-\u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0906\u092f\u0924 \u0915\u093e \u0915\u094d\u0937\u0947\u0924\u094d\u0930\u092b\u0932 \u0914\u0930 \u092a\u0930\u093f\u092e\u093e\u0923 \u091c\u094d\u091e\u093e\u0924 \u0915\u0930\u0947\u0902","text":"<ol> <li>\u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e-\u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u0915\u0940\u0935\u0930\u094d\u0921 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?</li> <li>\u090f\u0915 \u0906\u092f\u0924 \u0915\u093e \u0915\u094d\u0937\u0947\u0924\u094d\u0930\u092b\u0932 \u0915\u0948\u0938\u0947 \u091c\u094d\u091e\u093e\u0924 \u0915\u0930\u0947\u0902?</li> <li>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0938\u0947 \u0932\u094c\u091f\u093e\u090f \u0917\u090f \u0915\u0908 \u092e\u093e\u0928\u094b\u0902 \u0915\u094b \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u091f\u094d\u092f\u0942\u092a\u0932 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</li> <li><code>calculate_rectangle(5, 3)</code> \u0915\u094d\u092f\u093e \u0932\u094c\u091f\u093e\u090f\u0917\u093e?</li> <li>\u092f\u0926\u093f \u0906\u092f\u0924 \u0915\u0940 \u0932\u0902\u092c\u093e\u0908 10 \u0914\u0930 \u091a\u094c\u0921\u093c\u093e\u0908 5 \u0939\u094b, \u0924\u094b \u0909\u0938\u0915\u093e \u0915\u094d\u0937\u0947\u0924\u094d\u0930\u092b\u0932 \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e?</li> </ol>"},{"location":"hi/chapters/chapter07/#15_1","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 15: \u090f\u0915 \u0938\u0942\u091a\u0940 \u092e\u0947\u0902 \u0924\u0924\u094d\u0935 \u091c\u094b\u0921\u093c\u0947\u0902","text":"<ol> <li>Python \u092e\u0947\u0902 \u090f\u0915 \u0938\u0942\u091a\u0940 \u092e\u0947\u0902 \u0924\u0924\u094d\u0935 \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u0940 \u0935\u093f\u0927\u093f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?</li> <li>\u090f\u0915 \u0938\u0942\u091a\u0940 \u092e\u0947\u0902 \u0924\u0924\u094d\u0935 \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0947 \u092c\u093e\u0926 \u0909\u0938\u0915\u0940 \u0932\u0902\u092c\u093e\u0908 \u0915\u0948\u0938\u0947 \u091c\u094d\u091e\u093e\u0924 \u0915\u0930\u0947\u0902?</li> <li>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: <code>my_list.append(4)</code> \u0932\u093f\u0938\u094d\u091f \u092e\u0947\u0902 4 \u091c\u094b\u0921\u093c \u0926\u0947\u0917\u093e\u0964</li> <li>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e:    <pre><code>my_list = [1, 2, 3]\nmy_list.append(4)\nprint(my_list)\n</code></pre></li> <li>\u092f\u0926\u093f <code>my_list = [1, 2, 3, 4]</code>, \u0924\u094b <code>my_list.append(5)</code> \u0915\u093e \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e?</li> </ol>"},{"location":"hi/chapters/chapter07/#16_1","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 16: \u090f\u0915 \u0936\u092c\u094d\u0926\u0915\u094b\u0936 \u092c\u0928\u093e\u090f\u0902","text":"<ol> <li>Python \u092e\u0947\u0902 \u090f\u0915 \u0936\u092c\u094d\u0926\u0915\u094b\u0936 \u092e\u0947\u0902 \u0915\u0941\u0902\u091c\u0940-\u092e\u0942\u0932\u094d\u092f \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u0940 \u0935\u093f\u0927\u093f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?</li> <li>\u0936\u092c\u094d\u0926\u0915\u094b\u0936 \u0938\u0947 \u090f\u0915 \u0915\u0941\u0902\u091c\u0940 \u0915\u093e \u092e\u093e\u0928 \u0915\u0948\u0938\u0947 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0947\u0902?</li> <li>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: \u090f\u0915 \u0936\u092c\u094d\u0926\u0915\u094b\u0936 \u092e\u0947\u0902 \u0938\u092d\u0940 \u0915\u0941\u0902\u091c\u093f\u092f\u093e\u0901 \u0905\u0926\u094d\u0935\u093f\u0924\u0940\u092f \u0939\u094b\u0928\u0940 \u091a\u093e\u0939\u093f\u090f\u0964</li> <li>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e:    <pre><code>my_dict = {'name': 'Alice', 'age': 25}\nprint(my_dict['name'])\n</code></pre></li> <li>\u092f\u0926\u093f <code>my_dict = {'fruit': 'apple', 'color': 'red'}</code>, \u0924\u094b <code>my_dict['fruit']</code> \u0915\u093e \u092e\u093e\u0928 \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e?</li> </ol>"},{"location":"hi/chapters/chapter07/#17_1","title":"\u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 17: \u090f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u093e \u0917\u0941\u0923\u093e\u0902\u0915 \u091c\u094d\u091e\u093e\u0924 \u0915\u0930\u0947\u0902","text":"<ol> <li>Python \u092e\u0947\u0902 \u0917\u0941\u0923\u093e\u0902\u0915 \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u0926\u0943\u0937\u094d\u091f\u093f\u0915\u094b\u0923 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?</li> <li>\u0917\u0941\u0923\u093e\u0902\u0915 \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0932\u093f\u0916\u093e \u0917\u092f\u093e \u0939\u0948?</li> <li>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: \u0917\u0941\u0923\u093e\u0902\u0915 \u0915\u0947\u0935\u0932 \u0938\u0915\u093e\u0930\u093e\u0924\u094d\u092e\u0915 \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u0947 \u0932\u093f\u090f \u0939\u094b\u0924\u093e \u0939\u0948\u0964</li> <li>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e:    <pre><code>print(factorial(4))\n</code></pre></li> <li>6 \u0915\u093e \u0917\u0941\u0923\u093e\u0902\u0915 \u0915\u094d\u092f\u093e \u0939\u0948?</li> </ol>"},{"location":"hi/chapters/chapter07/#_4","title":"\u0938\u092d\u0940 \u0935\u094d\u092f\u093e\u0935\u0939\u093e\u0930\u093f\u0915 \u092a\u0930\u093f\u092f\u094b\u091c\u0928\u093e\u0913\u0902 \u0915\u0947 \u0932\u093f\u090f \u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 \u0909\u0924\u094d\u0924\u0930","text":"<p>\u0909\u0924\u094d\u0924\u0930 1: 1. <code>print()</code> 2. <code>print(\"text\")</code> 3. \u0909\u0926\u094d\u0927\u0930\u0923 (<code>'</code> \u092f\u093e <code>\"</code>) 4. False 5. Hello computer world!</p> <p>\u0909\u0924\u094d\u0924\u0930 2: 1. <code>+</code> 2. <code>=</code> \u0911\u092a\u0930\u0947\u091f\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e (\u091c\u0948\u0938\u0947, <code>num1 = 5</code>) 3. 8 4. False 5. 12</p> <p>\u0909\u0924\u094d\u0924\u0930 3: 1. <code>-</code> 2. 7 3. True 4. 10 5. 10</p> <p>\u0909\u0924\u094d\u0924\u0930 4: 1. <code>if</code> 2. \u0924\u0941\u0932\u0928\u093e \u0911\u092a\u0930\u0947\u091f\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e (<code>&gt;</code>, <code>&lt;</code>, \u0906\u0926\u093f) 3. False 4. Larger 5. False</p> <p>\u0909\u0924\u094d\u0924\u0930 5: 1. <code>math</code> 2. <code>math.sqrt()</code> 3. True 4. 5.0 5. 6.0</p> <p>\u0909\u0924\u094d\u0924\u0930 6: 1. <code>a, b = b, a</code> 2. <code>a = 20</code>, <code>b = 10</code> 3. False 4. <code>a</code> \u0914\u0930 <code>b</code> \u0915\u0947 \u092e\u093e\u0928\u094b\u0902 \u0915\u093e \u0905\u0926\u0932\u093e-\u092c\u0926\u0932\u0940 \u0915\u0930\u0924\u093e \u0939\u0948 5. <code>a = 10</code>, <code>b = 5</code></p> <p>\u0909\u0924\u094d\u0924\u0930 7: 1. 0.621371 2. <code>*</code> \u0911\u092a\u0930\u0947\u091f\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e (\u091c\u0948\u0938\u0947, <code>km * 0.621371</code>) 3. 3.106855 4. True 5. 6.21371 miles</p> <p>\u0909\u0924\u094d\u0924\u0930 8: 1. <code>(Celsius * 9/5) + 32</code> 2. 32.0 3. True 4. 212\u00b0F 5. -40\u00b0F</p> <p>\u0909\u0924\u094d\u0924\u0930 9: 1. Least Common Multiple 2. \u0938\u092c\u0938\u0947 \u091b\u094b\u091f\u0947 \u0938\u093e\u092e\u093e\u0928\u094d\u092f \u0917\u0941\u0923\u0928\u0916\u0902\u0921 \u0915\u094b \u0916\u094b\u091c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0932\u0942\u092a \u092f\u093e \u0917\u0923\u093f\u0924\u0940\u092f \u0938\u0942\u0924\u094d\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e 3. True 4. 15 5. 24</p> <p>\u0909\u0924\u094d\u0924\u0930 10: 1. Highest Common Factor 2. Greatest Common Divisor (GCD) 3. True 4. 4 5. 5</p> <p>\u0909\u0924\u094d\u0924\u0930 11: 1. <code>while condition:</code> 2. <code>i += 1</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e 3. False 4. 1 2 3 5. 1, 2, 3, 4, 5, 6, 7, 8, 9, 10</p> <p>\u0909\u0924\u094d\u0924\u0930 12: 1. <code>for element in sequence:</code> 2. <code>for</code> \u0932\u0942\u092a \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e (\u091c\u0948\u0938\u0947, <code>for char in string</code>) 3. True 4. P Y T H O N 5. P, Y, T, H, O, N</p> <p>\u0909\u0924\u094d\u0924\u0930 13: 1. <code>input()</code> 2. <code>for</code> \u0932\u0942\u092a \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e (\u091c\u0948\u0938\u0947, <code>for i in range(n)</code>) 3. True 4.      <pre><code>*\n**\n***\n</code></pre> 5.      <pre><code>*\n**\n***\n****\n</code></pre></p> <p>\u0909\u0924\u094d\u0924\u0930 14: 1. <code>def</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e (\u091c\u0948\u0938\u0947, <code>def function_name():</code>) 2. <code>length * breadth</code> 3. True 4. (15, 16) 5. 30</p> <p>\u0909\u0924\u094d\u0924\u0930 15: 1. <code>append()</code> 2. <code>[]</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e 3. True 4. <code>[1, 2, 3, 4]</code> 5. <code>[10, 20, 5]</code></p> <p>\u0909\u0924\u094d\u0924\u0930 16: 1. \u0915\u0930\u094d\u0932\u0940 \u092c\u094d\u0930\u0947\u0938\u0947\u0938 <code>{}</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e (\u091c\u0948\u0938\u0947, <code>my_dict = {}</code>) 2. Dictionary 3. True 4. Alice 5. <code>dict[key] = value</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e</p> <p>\u0909\u0924\u094d\u0924\u0930 17: 1. <code>n! = n * (n-1) * (n-2) * ... * 1</code> 2. <code>def</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e \u0914\u0930 \u092b\u0902\u0915\u094d\u0936\u0928 \u0915\u094b \u0909\u0938\u0915\u0947 \u0905\u0902\u0926\u0930 \u0915\u0949\u0932 \u0915\u0930\u0928\u093e 3. True 4. 120 5. 720</p> <p>\u092f\u0939 \u0907\u0915\u093e\u0908 7 \u092e\u0947\u0902 \u0938\u092d\u0940 \u0935\u094d\u092f\u093e\u0935\u0939\u093e\u0930\u093f\u0915 \u092a\u0930\u093f\u092f\u094b\u091c\u0928\u093e\u0913\u0902 \u0915\u0947 \u0932\u093f\u090f \u092a\u094d\u0930\u0936\u094d\u0928\u093e\u0935\u0932\u0940 \u0915\u094b \u092a\u0942\u0930\u093e \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u092f\u0947 \u092a\u094d\u0930\u0936\u094d\u0928 \u0914\u0930 \u0909\u0924\u094d\u0924\u0930 \u0906\u092a\u0915\u094b \u0907\u0938 \u0907\u0915\u093e\u0908 \u092e\u0947\u0902 \u0915\u0935\u0930 \u0915\u0940 \u0917\u0908 \u092a\u094d\u0930\u092e\u0941\u0916 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u0905\u0935\u0927\u093e\u0930\u0923\u093e\u0913\u0902 \u0915\u094b \u0938\u092e\u091d\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0947\u0902\u0917\u0947\u0964</p>"},{"location":"hi/chapters/contents/","title":"\u0939\u093e\u0908 \u0938\u094d\u0915\u0942\u0932 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u093e\u0907\u0902\u0938: \u091c\u093c\u0940\u0930\u094b \u0938\u0947 \u092e\u091c\u093c\u0947\u0926\u093e\u0930 \u0924\u0915!","text":""},{"location":"hi/chapters/contents/#python","title":"\u092a\u093e\u0920\u094d\u092f\u0915\u094d\u0930\u092e \u0938\u093e\u092e\u0917\u094d\u0930\u0940: \u0939\u093e\u0908 \u0938\u094d\u0915\u0942\u0932 \u091b\u093e\u0924\u094d\u0930\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u093e\u0907\u0902\u0938 \u0914\u0930 Python","text":""},{"location":"hi/chapters/contents/#1","title":"\u0907\u0915\u093e\u0908 1: \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u093f\u0938\u094d\u091f\u092e","text":"<ul> <li>\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u093e \u092a\u0930\u093f\u091a\u092f: Central Processing Unit (CPU), I/O devices, \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u093e \u0935\u093f\u0915\u093e\u0938, \u0921\u0947\u091f\u093e \u0914\u0930 \u091c\u093e\u0928\u0915\u093e\u0930\u0940, \u0921\u0947\u091f\u093e \u0915\u0947 \u092a\u094d\u0930\u0915\u093e\u0930, \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u0947 \u0915\u093e\u0930\u094d\u092f\u093e\u0924\u094d\u092e\u0915 \u0918\u091f\u0915 \u0914\u0930 \u0909\u0928\u0915\u0940 \u0906\u092a\u0938 \u092e\u0947\u0902 \u091c\u0941\u0921\u093c\u093e\u0935\u0964</li> <li>\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092e\u0947\u092e\u094b\u0930\u0940: \u092e\u0947\u092e\u094b\u0930\u0940 \u0915\u0940 \u0907\u0915\u093e\u0907\u092f\u093e\u0901, \u092e\u0947\u092e\u094b\u0930\u0940 \u0915\u0947 \u092a\u094d\u0930\u0915\u093e\u0930 (Primary, Cache, \u0914\u0930 Secondary)\u0964</li> <li>\u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930: \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930\u094b\u0902 \u0915\u093e \u0935\u093f\u0915\u093e\u0938 \u0914\u0930 \u0935\u093f\u0936\u0947\u0937\u0924\u093e\u090f\u0901\u0964</li> <li>\u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930: \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f \u0914\u0930 \u092a\u094d\u0930\u0915\u093e\u0930 (System \u0914\u0930 Application \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930), Language translators, Device drivers, \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u091f\u0942\u0932\u094d\u0938, \u0938\u093e\u092e\u093e\u0928\u094d\u092f \u0914\u0930 \u0935\u093f\u0936\u0947\u0937 \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930\u0964</li> <li>\u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u092d\u093e\u0937\u093e\u0913\u0902 \u0915\u093e \u0935\u0930\u094d\u0917\u0940\u0915\u0930\u0923: High-level language, Machine language\u0964</li> <li>\u0911\u092a\u0930\u0947\u091f\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e (OS): OS \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e, OS \u0915\u0947 \u0915\u093e\u0930\u094d\u092f\u0964</li> <li>\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940: \u0921\u0947\u091f\u093e, \u091c\u093e\u0928\u0915\u093e\u0930\u0940, \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092e\u0947\u092e\u094b\u0930\u0940, \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930, \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930, Generic Software, Specific Purpose Software, High-Level Language, Machine Language, Operating System, Device Drivers\u0964</li> </ul>"},{"location":"hi/chapters/contents/#2","title":"\u0907\u0915\u093e\u0908 2: \u090f\u0928\u0915\u094b\u0921\u093f\u0902\u0917 \u0938\u094d\u0915\u0940\u092e \u0914\u0930 \u0928\u0902\u092c\u0930 \u0938\u093f\u0938\u094d\u091f\u092e\u094d\u0938","text":"<ul> <li>\u090f\u0928\u0915\u094b\u0921\u093f\u0902\u0917 \u0938\u094d\u0915\u0940\u092e: American Standard Code for Information Interchange (ASCII), UNICODE\u0964</li> <li>\u0928\u0902\u092c\u0930 \u0938\u093f\u0938\u094d\u091f\u092e\u094d\u0938: Decimal, Binary, Octal, \u0914\u0930 Hexadecimal, \u0928\u0902\u092c\u0930 \u0938\u093f\u0938\u094d\u091f\u092e\u094d\u0938 \u0915\u0947 \u092c\u0940\u091a \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928 (\u092b\u094d\u0930\u0948\u0915\u094d\u0936\u0928\u0932 \u092d\u093e\u0917\u094b\u0902 \u0915\u094b \u091b\u094b\u0921\u093c\u0915\u0930)\u0964</li> <li>\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940: \u090f\u0928\u0915\u094b\u0921\u093f\u0902\u0917, ASCII, UNICODE, Decimal, Binary, Octal, Hexadecimal\u0964</li> </ul>"},{"location":"hi/chapters/contents/#3","title":"\u0907\u0915\u093e\u0908 3: \u0909\u092d\u0930\u0924\u0947 \u0939\u0941\u090f \u0930\u0941\u091d\u093e\u0928","text":"<ul> <li>Artificial Intelligence, Machine Learning, Natural Language Processing, Robotics, Big Data, Internet of Things (IoT), Sensors, Smart Cities, Cloud Computing, Grid Computing, Blockchain Technology, 5G Network, E-Commerce \u0915\u093e \u092a\u0930\u093f\u091a\u092f\u0964</li> <li>\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940: Artificial Intelligence, Machine Learning, Natural Language Processing, Robotics, Big Data, Internet of Things, Sensors, Blockchain, 5G, E-Commerce\u0964</li> </ul>"},{"location":"hi/chapters/contents/#4","title":"\u0907\u0915\u093e\u0908 4: \u0938\u092e\u0938\u094d\u092f\u093e \u0938\u092e\u093e\u0927\u093e\u0928","text":"<ul> <li>\u0938\u092e\u0938\u094d\u092f\u093e \u0938\u092e\u093e\u0927\u093e\u0928 \u0915\u093e \u092a\u0930\u093f\u091a\u092f: \u0938\u092e\u0938\u094d\u092f\u093e-\u0938\u092e\u093e\u0927\u093e\u0928 \u091a\u0915\u094d\u0930, \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923, \u090f\u0932\u094d\u0917\u094b\u0930\u093f\u0926\u092e \u0921\u093f\u091c\u093e\u0907\u0928 \u0915\u0930\u0928\u093e, \u0915\u094b\u0921\u093f\u0902\u0917 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0915\u093e\u0930\u094d\u092f\u093e\u0928\u094d\u0935\u092f\u0928, \u0938\u092e\u093e\u0927\u093e\u0928 \u0915\u093e \u092a\u0930\u0940\u0915\u094d\u0937\u0923\u0964</li> <li>\u090f\u0932\u094d\u0917\u094b\u0930\u093f\u0926\u092e: \u090f\u0932\u094d\u0917\u094b\u0930\u093f\u0926\u092e \u0915\u094d\u092f\u093e \u0939\u0948, \u0938\u092e\u0938\u094d\u092f\u093e \u0938\u092e\u093e\u0927\u093e\u0928 \u092e\u0947\u0902 \u090f\u0932\u094d\u0917\u094b\u0930\u093f\u0926\u092e \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e, flowcharts \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u090f\u0932\u094d\u0917\u094b\u0930\u093f\u0926\u092e \u0915\u093e \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u0928\u0964</li> <li>\u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917: \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u0940 \u0905\u0935\u0927\u093e\u0930\u0923\u093e, \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0928\u0947 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e\u0964</li> <li>\u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u0938\u0902\u0930\u091a\u0928\u093e\u090f\u0901: Sequence, Selection, \u0914\u0930 Iteration\u0964</li> <li>\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940: \u0938\u092e\u0938\u094d\u092f\u093e \u0938\u092e\u093e\u0927\u093e\u0928, \u090f\u0932\u094d\u0917\u094b\u0930\u093f\u0926\u092e, \u0915\u094b\u0921\u093f\u0902\u0917, Flowchart, Sequence, Selection, Iteration\u0964</li> </ul>"},{"location":"hi/chapters/contents/#5-python","title":"\u0907\u0915\u093e\u0908 5: Python \u0915\u0947 \u0938\u093e\u0925 \u0936\u0941\u0930\u0941\u0906\u0924 \u0915\u0930\u0928\u093e","text":""},{"location":"hi/chapters/contents/#python_1","title":"Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u0915\u0940 \u092e\u0942\u0932 \u092c\u093e\u0924\u0947\u0902","text":"<ul> <li>Python \u0915\u093e \u092a\u0930\u093f\u091a\u092f, Python \u0915\u0940 \u0935\u093f\u0936\u0947\u0937\u0924\u093e\u090f\u0901, \u0907\u0902\u091f\u0930\u0948\u0915\u094d\u091f\u093f\u0935 \u092e\u094b\u0921 \u0914\u0930 \u0938\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u091f \u092e\u094b\u0921 \u092e\u0947\u0902 Python interpreter \u0915\u0947 \u0938\u093e\u0925 \u0915\u093e\u0930\u094d\u092f \u0915\u0930\u0928\u093e, \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u0940 \u0938\u0902\u0930\u091a\u0928\u093e, Identifiers, Keywords, Constants, Variables, \u0911\u092a\u0930\u0947\u091f\u0930 \u0915\u0947 \u092a\u094d\u0930\u0915\u093e\u0930, \u0911\u092a\u0930\u0947\u091f\u0930 \u0915\u0940 \u092a\u094d\u0930\u093e\u0925\u092e\u093f\u0915\u0924\u093e, \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u0915\u093e\u0930, Statements, Expressions, \u092e\u0942\u0932\u094d\u092f\u093e\u0902\u0915\u0928, Comments, Input \u0914\u0930 Output statements, \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u0915\u093e\u0930 \u0930\u0942\u092a\u093e\u0902\u0924\u0930\u0923, Debugging\u0964</li> <li>\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940: Interpreter, Identifiers, Keywords, Constants, Variables, Operators, Data types, Expressions, Comments, Conversion\u0964</li> </ul>"},{"location":"hi/chapters/contents/#5a-flow-of-control-functions","title":"\u0907\u0915\u093e\u0908 5a: Flow of Control \u0914\u0930 Functions","text":"<ul> <li>Control Structures: Sequence, Selection (if, if-else, nested if), \u0914\u0930 Repetition (for, while, loops, break, continue)\u0964</li> <li>Functions: Functions \u0915\u093e \u092a\u0930\u093f\u091a\u092f, Functions \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e, User-defined functions, Built-in functions\u0964</li> <li>\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940: Sequence, Selection, Repetition, Iteration, If statement, If-Else statement, For statement, While statement, Break statement, Continue statement, Functions, User-defined functions, Built-in functions\u0964</li> </ul>"},{"location":"hi/chapters/contents/#5b-strings-lists","title":"\u0907\u0915\u093e\u0908 5b: Strings \u0914\u0930 Lists","text":"<ul> <li>Strings: Strings \u0915\u093e \u092a\u0930\u093f\u091a\u092f, Strings \u0915\u094b Initialize \u0915\u0930\u0928\u093e, Strings \u0924\u0915 \u092a\u0939\u0941\u0901\u091a, String operations\u0964</li> <li>Lists: Lists \u0915\u093e \u092a\u0930\u093f\u091a\u092f, Lists \u092c\u0928\u093e\u0928\u093e, Initialize \u0915\u0930\u0928\u093e, Traversing \u0915\u0930\u0928\u093e, \u0914\u0930 Lists \u0915\u094b Manipulate \u0915\u0930\u0928\u093e\u0964</li> <li>\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940: String, Initialization, Access, String operations, List, Initialization, Traversing, Manipulation\u0964</li> </ul>"},{"location":"hi/chapters/contents/#5c-tuples-dictionary","title":"\u0907\u0915\u093e\u0908 5c: Tuples \u0914\u0930 Dictionary","text":"<ul> <li>Tuples: Tuples \u0915\u093e \u092a\u0930\u093f\u091a\u092f, Tuples \u092c\u0928\u093e\u0928\u093e, Initialize \u0915\u0930\u0928\u093e, \u0924\u0924\u094d\u0935\u094b\u0902 \u0924\u0915 \u092a\u0939\u0941\u0901\u091a, Tuples \u092a\u0930 \u0938\u0902\u091a\u093e\u0932\u0928\u0964</li> <li>Dictionary: Dictionary \u0915\u093e \u092a\u0930\u093f\u091a\u092f, Key-Value Pair \u0915\u0940 \u0905\u0935\u0927\u093e\u0930\u0923\u093e, Mutability, Dictionary \u092c\u0928\u093e\u0928\u093e, Initialize \u0915\u0930\u0928\u093e, Dictionary \u0938\u0902\u091a\u093e\u0932\u0928\u0964</li> <li>\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940: Tuple, Dictionary, Key-Value Pair, Mutability\u0964</li> </ul>"},{"location":"hi/chapters/contents/#6","title":"\u0907\u0915\u093e\u0908 6: \u0938\u093e\u092e\u093e\u091c\u093f\u0915 \u092a\u094d\u0930\u092d\u093e\u0935","text":"<ul> <li>Digital Footprints: Digital footprints \u0915\u093e \u092a\u0930\u093f\u091a\u092f, \u0928\u0947\u091f \u0938\u0930\u094d\u092b\u093f\u0902\u0917 \u0936\u093f\u0937\u094d\u091f\u093e\u091a\u093e\u0930, \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e \u0938\u0902\u091a\u093e\u0930 \u0936\u093f\u0937\u094d\u091f\u093e\u091a\u093e\u0930, Intellectual Property Rights (IPR), Cyber-crime, Cyber laws, Hacking, Phishing, Cyberbullying, \u092d\u093e\u0930\u0924\u0940\u092f IT Act, \u0938\u093e\u0907\u092c\u0930 \u0905\u092a\u0930\u093e\u0927 \u0915\u094b \u0930\u094b\u0915\u0928\u093e\u0964</li> <li>\u0938\u094d\u0935\u093e\u0938\u094d\u0925\u094d\u092f \u092a\u0930 \u092a\u094d\u0930\u092d\u093e\u0935: \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u0909\u092a\u092f\u094b\u0917 \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0938\u094d\u0935\u093e\u0938\u094d\u0925\u094d\u092f \u0938\u0902\u092c\u0902\u0927\u0940 \u092e\u0941\u0926\u094d\u0926\u094b\u0902 \u0915\u0947 \u092a\u094d\u0930\u0924\u093f \u091c\u093e\u0917\u0930\u0942\u0915\u0924\u093e (\u091c\u0948\u0938\u0947 \u0906\u0901\u0916\u094b\u0902 \u092a\u0930 \u092a\u094d\u0930\u092d\u093e\u0935, \u0936\u093e\u0930\u0940\u0930\u093f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e\u090f\u0901)\u0964</li> <li>\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940: Digital Footprint, Etiquette, Net surfing, Social Media, Hacking, Cracking, Intellectual Property Rights (IPR), Cyber-crime, Cyber law, Phishing, Bullying, Physiological\u0964</li> </ul>"},{"location":"hi/chapters/contents/#7","title":"\u0907\u0915\u093e\u0908 7: \u0938\u0941\u091d\u093e\u0908 \u0917\u0908 \u0935\u094d\u092f\u093e\u0935\u0939\u093e\u0930\u093f\u0915 \u092a\u0930\u093f\u092f\u094b\u091c\u0928\u093e\u090f\u0901","text":"<ol> <li>\u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902 \u091c\u094b \u201cHello computer world!\u201d \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0964</li> <li>\u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902\u0964</li> <li>\u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u0947 \u0905\u0902\u0924\u0930 \u0915\u094b \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902\u0964</li> <li>\u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u092e\u0947\u0902 \u0938\u0947 \u092c\u0921\u093c\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u0922\u0942\u0902\u0922\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902\u0964</li> <li>\u0935\u0930\u094d\u0917\u092e\u0942\u0932 \u0928\u093f\u0915\u093e\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902\u0964</li> <li>\u0926\u094b \u0935\u0947\u0930\u093f\u090f\u092c\u0932\u094d\u0938 \u0915\u094b Swap \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902\u0964</li> <li>\u0915\u093f\u0932\u094b\u092e\u0940\u091f\u0930 \u0915\u094b \u092e\u0940\u0932 \u092e\u0947\u0902 \u092c\u0926\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902\u0964</li> <li>\u0938\u0947\u0932\u094d\u0938\u093f\u092f\u0938 \u0915\u094b \u092b\u093c\u093e\u0930\u0947\u0928\u0939\u093e\u0907\u091f \u092e\u0947\u0902 \u092c\u0926\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902\u0964</li> <li>LCM \u0916\u094b\u091c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902\u0964</li> <li>HCF \u0916\u094b\u091c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902\u0964</li> <li>\u090f\u0915 While Loop \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u092a\u0939\u0932\u0947 \u0926\u0938 \u092a\u094d\u0930\u093e\u0915\u0943\u0924\u093f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902\u0964</li> <li>\u090f\u0915 For Loop \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u2018PYTHON\u2019 \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0915\u0947 \u0905\u0915\u094d\u0937\u0930\u094b\u0902 \u0915\u094b \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902\u0964</li> <li>\u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0926\u094d\u0935\u093e\u0930\u093e \u0907\u0928\u092a\u0941\u091f \u0915\u0940 \u0917\u0908 \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 Pattern \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902\u0964</li> <li>Rectangle \u0915\u0947 \u0915\u094d\u0937\u0947\u0924\u094d\u0930\u092b\u0932 \u0914\u0930 \u092a\u0930\u093f\u0927\u093f \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f User-Defined Functions \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902\u0964</li> <li>\u090f\u0915 \u0932\u093f\u0938\u094d\u091f \u092e\u0947\u0902 \u090f\u0915 \u0924\u0924\u094d\u0935 \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902\u0964</li> <li>\u090f\u0915 Dictionary \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902\u0964</li> <li>\u0915\u093f\u0938\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u093e Factorial \u0928\u093f\u0915\u093e\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902\u0964</li> </ol>"},{"location":"hi/chapters/contents/#_2","title":"\u092a\u094d\u0930\u0936\u094d\u0928 \u092c\u0948\u0902\u0915","text":""},{"location":"hi/chapters/contents/#_3","title":"\u092a\u094d\u0930\u0936\u094d\u0928 \u092c\u0948\u0902\u0915 \u0915\u0947 \u0909\u0924\u094d\u0924\u0930","text":""},{"location":"hi/chapters/contents/#faq","title":"\u0905\u0915\u094d\u0938\u0930 \u092a\u0942\u091b\u0947 \u091c\u093e\u0928\u0947 \u0935\u093e\u0932\u0947 \u092a\u094d\u0930\u0936\u094d\u0928 (FAQ)","text":""},{"location":"hi/chapters/faq/","title":"\u0905\u0915\u094d\u0938\u0930 \u092a\u0942\u091b\u0947 \u091c\u093e\u0928\u0947 \u0935\u093e\u0932\u0947 \u092a\u094d\u0930\u0936\u094d\u0928","text":"<ul> <li>\u0905\u0915\u094d\u0938\u0930 \u092a\u0942\u091b\u0947 \u091c\u093e\u0928\u0947 \u0935\u093e\u0932\u0947 \u092a\u094d\u0930\u0936\u094d\u0928</li> <li>Python Jupyter Notebooks \u091a\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0935\u093f\u0938\u094d\u0924\u0943\u0924 \u0917\u093e\u0907\u0921</li> <li>Windows \u0915\u0947 \u0932\u093f\u090f \u091a\u0930\u0923<ul> <li>\u091a\u0930\u0923 1: <code>pyenv-win</code> (Python Version Manager) install \u0915\u0930\u0947\u0902</li> <li>\u091a\u0930\u0923 2: <code>pyenv-win</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f Python \u0938\u0902\u0938\u094d\u0915\u0930\u0923 install \u0915\u0930\u0947\u0902</li> <li>\u091a\u0930\u0923 3: \u090f\u0915 \u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u090f\u0928\u0935\u093e\u092f\u0930\u0928\u092e\u0947\u0902\u091f \u092c\u0928\u093e\u090f\u0902 \u0914\u0930 \u0938\u0915\u094d\u0930\u093f\u092f \u0915\u0930\u0947\u0902</li> <li>\u091a\u0930\u0923 4: JupyterLab \u0914\u0930 \u092e\u093e\u0928\u0915 library install \u0915\u0930\u0947\u0902</li> <li>\u091a\u0930\u0923 5: \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092e\u0947\u0902 JupyterLab \u091a\u0932\u093e\u090f\u0902</li> <li>\u091a\u0930\u0923 6: \u091f\u0930\u094d\u092e\u093f\u0928\u0932 \u0938\u0947 <code>.py</code> \u092b\u093c\u093e\u0907\u0932\u0947\u0902 \u091a\u0932\u093e\u090f\u0902</li> </ul> </li> <li>Mac \u0915\u0947 \u0932\u093f\u090f \u091a\u0930\u0923<ul> <li>\u091a\u0930\u0923 1: <code>pyenv</code> (Python Version Manager) install \u0915\u0930\u0947\u0902</li> <li>\u091a\u0930\u0923 2: <code>pyenv</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f Python \u0938\u0902\u0938\u094d\u0915\u0930\u0923 install \u0915\u0930\u0947\u0902</li> <li>\u091a\u0930\u0923 3: \u090f\u0915 \u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u090f\u0928\u0935\u093e\u092f\u0930\u0928\u092e\u0947\u0902\u091f \u092c\u0928\u093e\u090f\u0902 \u0914\u0930 \u0938\u0915\u094d\u0930\u093f\u092f \u0915\u0930\u0947\u0902</li> <li>\u091a\u0930\u0923 4: JupyterLab \u0914\u0930 \u092e\u093e\u0928\u0915 library install \u0915\u0930\u0947\u0902</li> <li>\u091a\u0930\u0923 5: \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092e\u0947\u0902 JupyterLab \u091a\u0932\u093e\u090f\u0902</li> <li>\u091a\u0930\u0923 6: \u091f\u0930\u094d\u092e\u093f\u0928\u0932 \u0938\u0947 <code>.py</code> \u092b\u093c\u093e\u0907\u0932\u0947\u0902 \u091a\u0932\u093e\u090f\u0902</li> </ul> </li> <li>Google Colab \u092e\u0947\u0902 \u0928\u094b\u091f\u092c\u0941\u0915 \u091a\u0932\u093e\u0928\u093e<ul> <li>\u091a\u0930\u0923 1: \u090f\u0915 Google \u0916\u093e\u0924\u093e \u092c\u0928\u093e\u090f\u0901</li> <li>\u091a\u0930\u0923 2: Google Colab \u0924\u0915 \u092a\u0939\u0941\u0901\u091a\u0947\u0902</li> <li>\u091a\u0930\u0923 3: \u090f\u0915 \u0928\u0908 \u0928\u094b\u091f\u092c\u0941\u0915 \u092c\u0928\u093e\u090f\u0901</li> <li>\u091a\u0930\u0923 4: Colab \u092e\u0947\u0902 \u0921\u0947\u091f\u093e\u0938\u0947\u091f \u0906\u092f\u093e\u0924 \u0915\u0930\u0928\u093e \u0914\u0930 \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e</li> <li>\u091a\u0930\u0923 5: Colab \u0915\u0947 \u0938\u093e\u0925 Google Drive \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e</li> <li>\u091a\u0930\u0923 6: Colab \u092e\u0947\u0902 \u0905\u0924\u093f\u0930\u093f\u0915\u094d\u0924 library install \u0915\u0930\u0928\u093e</li> <li>\u091a\u0930\u0923 7: \u0928\u094b\u091f\u092c\u0941\u0915 \u0915\u094b \u0938\u0939\u0947\u091c\u0928\u093e \u0914\u0930 \u0938\u093e\u091d\u093e \u0915\u0930\u0928\u093e</li> </ul> </li> <li>\u0921\u0947\u091f\u093e \u0938\u094d\u0930\u094b\u0924\u094b\u0902 \u0914\u0930 \u0906\u0917\u0947 \u092a\u0922\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0902\u0926\u0930\u094d\u092d<ul> <li>\u0921\u0947\u091f\u093e \u0938\u094d\u0930\u094b\u0924</li> <li>\u0906\u0917\u0947 \u092a\u0922\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092e\u0941\u092b\u094d\u0924 \u0911\u0928\u0932\u093e\u0907\u0928 \u092a\u0941\u0938\u094d\u0924\u0915\u0947\u0902</li> <li>\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0935\u093f\u091c\u094d\u091e\u093e\u0928</li> </ul> </li> <li>FAQ \u0914\u0930 \u0938\u0902\u092d\u093e\u0935\u093f\u0924 \u0938\u092e\u0938\u094d\u092f\u093e\u090f\u0901<ul> <li>1. \u092a\u094d\u0930\u0936\u094d\u0928: \u092e\u0948\u0902 \u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u090f\u0928\u0935\u093e\u092f\u0930\u0928\u092e\u0947\u0902\u091f \u0915\u094b \u0915\u0948\u0938\u0947 \u0928\u093f\u0937\u094d\u0915\u094d\u0930\u093f\u092f \u0915\u0930\u0942\u0901?</li> <li>2. \u092a\u094d\u0930\u0936\u094d\u0928: \u0905\u0917\u0930 <code>pyenv</code> \u0915\u092e\u093e\u0902\u0921 \u092e\u093e\u0928\u094d\u092f\u0924\u093e \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0928\u0939\u0940\u0902 \u0939\u0948\u0902 \u0924\u094b \u0915\u094d\u092f\u093e \u0915\u0930\u0947\u0902?</li> <li>3. \u092a\u094d\u0930\u0936\u094d\u0928: \u0905\u0917\u0930 JupyterLab \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092e\u0947\u0902 \u0928\u0939\u0940\u0902 \u0916\u0941\u0932\u0924\u093e \u0939\u0948 \u0924\u094b \u0915\u094d\u092f\u093e \u0915\u0930\u0947\u0902?</li> <li>4. \u092a\u094d\u0930\u0936\u094d\u0928: \u092c\u093e\u0926 \u092e\u0947\u0902 \u0905\u0924\u093f\u0930\u093f\u0915\u094d\u0924 library \u0915\u0948\u0938\u0947 install \u0915\u0930\u0947\u0902?</li> <li>5. \u092a\u094d\u0930\u0936\u094d\u0928: \u092e\u0948\u0902 \u090f\u0915 \u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u090f\u0928\u0935\u093e\u092f\u0930\u0928\u092e\u0947\u0902\u091f \u0915\u094b \u0915\u0948\u0938\u0947 \u0939\u091f\u093e\u090a\u0901?</li> <li>6. \u092a\u094d\u0930\u0936\u094d\u0928: \u0905\u0917\u0930 \u092e\u0941\u091d\u0947 Mac \u092a\u0930 Homebrew install \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u0905\u0928\u0941\u092e\u0924\u093f \u0924\u094d\u0930\u0941\u091f\u093f\u092f\u093e\u0901 \u092e\u093f\u0932\u0924\u0940 \u0939\u0948\u0902 \u0924\u094b \u0915\u094d\u092f\u093e \u0915\u0930\u0947\u0902?</li> <li>7. \u092a\u094d\u0930\u0936\u094d\u0928: \u0915\u094d\u092f\u094b\u0902 <code>pyenv</code> Mac \u092a\u0930 Python \u0938\u0902\u0938\u094d\u0915\u0930\u0923 install \u0928\u0939\u0940\u0902 \u0915\u0930 \u0930\u0939\u093e \u0939\u0948?</li> </ul> </li> </ul>"},{"location":"hi/chapters/faq/#python-jupyter-notebooks","title":"Python Jupyter Notebooks \u091a\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0935\u093f\u0938\u094d\u0924\u0943\u0924 \u0917\u093e\u0907\u0921","text":"<p>\u092f\u0939\u093e\u0901 \u090f\u0915 \u0935\u093f\u0938\u094d\u0924\u0943\u0924 \u0917\u093e\u0907\u0921 \u0939\u0948 \u091c\u094b \u090f\u0915 \u092a\u094d\u0930\u093e\u0930\u0902\u092d\u093f\u0915 \u0935\u094d\u092f\u0915\u094d\u0924\u093f \u0915\u094b <code>pyenv-win</code> \u092f\u093e <code>pyenv</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 Windows \u0914\u0930 Mac \u092e\u0936\u0940\u0928\u094b\u0902 \u092a\u0930 Python Jupyter Notebooks \u091a\u0932\u093e\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0947\u0917\u093e, Python \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u090f\u0928\u0935\u093e\u092f\u0930\u0928\u092e\u0947\u0902\u091f \u0915\u0947 \u0932\u093f\u090f <code>venv</code>, \u0914\u0930 \u0905\u0928\u094d\u092f \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f\u0964</p>"},{"location":"hi/chapters/faq/#windows","title":"Windows \u0915\u0947 \u0932\u093f\u090f \u091a\u0930\u0923","text":""},{"location":"hi/chapters/faq/#1-pyenv-win-python-version-manager-install","title":"\u091a\u0930\u0923 1: <code>pyenv-win</code> (Python Version Manager) install \u0915\u0930\u0947\u0902","text":"<ol> <li>PowerShell \u0915\u094b \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093e\u092a\u0915 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0916\u094b\u0932\u0947\u0902:</li> <li> <p><code>Windows + X</code> \u0926\u092c\u093e\u090f\u0901 \u0914\u0930 Windows PowerShell (Admin) \u091a\u0941\u0928\u0947\u0902\u0964</p> </li> <li> <p><code>pyenv-win</code> install \u0915\u0930\u0947\u0902:    PowerShell \u092e\u0947\u0902, \u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u092e\u093e\u0902\u0921 \u091a\u0932\u093e\u090f\u0901:    <pre><code>Invoke-WebRequest -UseBasicParsing https://pyenv.run | Invoke-Expression\n</code></pre>    \u0938\u094d\u0925\u093e\u092a\u0928\u093e \u0915\u0947 \u092c\u093e\u0926, PowerShell \u0915\u094b \u092b\u093f\u0930 \u0938\u0947 \u091a\u093e\u0932\u0942 \u0915\u0930\u0947\u0902 \u0914\u0930 \u091c\u093e\u0901\u091a\u0947\u0902:    <pre><code>pyenv --version\n</code></pre></p> </li> </ol>"},{"location":"hi/chapters/faq/#2-pyenv-win-python-install","title":"\u091a\u0930\u0923 2: <code>pyenv-win</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f Python \u0938\u0902\u0938\u094d\u0915\u0930\u0923 install \u0915\u0930\u0947\u0902","text":"<ol> <li> <p>\u0909\u092a\u0932\u092c\u094d\u0927 Python \u0938\u0902\u0938\u094d\u0915\u0930\u0923\u094b\u0902 \u0915\u0940 \u0938\u0942\u091a\u0940 \u092c\u0928\u093e\u090f\u0902:    <pre><code>pyenv install --list\n</code></pre></p> </li> <li> <p>\u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0938\u0902\u0938\u094d\u0915\u0930\u0923 install \u0915\u0930\u0947\u0902 (\u091c\u0948\u0938\u0947, Python 3.10.5):    <pre><code>pyenv install 3.10.5\n</code></pre></p> </li> <li> <p>\u0935\u0948\u0936\u094d\u0935\u093f\u0915 Python \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0938\u0947\u091f \u0915\u0930\u0947\u0902:    <pre><code>pyenv global 3.10.5\n</code></pre></p> </li> <li> <p>Python \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0915\u0940 \u092a\u0941\u0937\u094d\u091f\u093f \u0915\u0930\u0947\u0902:    <pre><code>python --version\n</code></pre></p> </li> </ol>"},{"location":"hi/chapters/faq/#3","title":"\u091a\u0930\u0923 3: \u090f\u0915 \u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u090f\u0928\u0935\u093e\u092f\u0930\u0928\u092e\u0947\u0902\u091f \u092c\u0928\u093e\u090f\u0902 \u0914\u0930 \u0938\u0915\u094d\u0930\u093f\u092f \u0915\u0930\u0947\u0902","text":"<ol> <li> <p>\u0905\u092a\u0928\u0947 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0928\u0908 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u093f\u0915\u093e \u092c\u0928\u093e\u090f\u0902 (\u0935\u0948\u0915\u0932\u094d\u092a\u093f\u0915):    <pre><code>mkdir my_project\ncd my_project\n</code></pre></p> </li> <li> <p><code>venv</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u090f\u0928\u0935\u093e\u092f\u0930\u0928\u092e\u0947\u0902\u091f \u092c\u0928\u093e\u090f\u0902:    <pre><code>python -m venv venv\n</code></pre></p> </li> <li> <p>\u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u090f\u0928\u0935\u093e\u092f\u0930\u0928\u092e\u0947\u0902\u091f \u0915\u094b \u0938\u0915\u094d\u0930\u093f\u092f \u0915\u0930\u0947\u0902:    <pre><code>.\\venv\\Scripts\\activate\n</code></pre></p> </li> </ol>"},{"location":"hi/chapters/faq/#4-jupyterlab-library-install","title":"\u091a\u0930\u0923 4: JupyterLab \u0914\u0930 \u092e\u093e\u0928\u0915 library install \u0915\u0930\u0947\u0902","text":"<ol> <li>\u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u090f\u0928\u0935\u093e\u092f\u0930\u0928\u092e\u0947\u0902\u091f \u092e\u0947\u0902 JupyterLab \u0914\u0930 \u0906\u0935\u0936\u094d\u092f\u0915 library install \u0915\u0930\u0947\u0902:    <pre><code>pip install jupyterlab numpy pandas matplotlib\n</code></pre></li> </ol>"},{"location":"hi/chapters/faq/#5-jupyterlab","title":"\u091a\u0930\u0923 5: \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092e\u0947\u0902 JupyterLab \u091a\u0932\u093e\u090f\u0902","text":"<ol> <li>JupyterLab \u0936\u0941\u0930\u0942 \u0915\u0930\u0947\u0902:    <pre><code>jupyter lab\n</code></pre>    \u092f\u0939 \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u0906\u092a\u0915\u0947 \u0921\u093f\u092b\u093c\u0949\u0932\u094d\u091f \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092e\u0947\u0902 \u0916\u0941\u0932 \u091c\u093e\u090f\u0917\u093e\u0964</li> </ol>"},{"location":"hi/chapters/faq/#6-py","title":"\u091a\u0930\u0923 6: \u091f\u0930\u094d\u092e\u093f\u0928\u0932 \u0938\u0947 <code>.py</code> \u092b\u093c\u093e\u0907\u0932\u0947\u0902 \u091a\u0932\u093e\u090f\u0902","text":"<ol> <li><code>.py</code> \u092b\u093c\u093e\u0907\u0932\u0947\u0902 \u091a\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u091f\u0930\u094d\u092e\u093f\u0928\u0932 \u092e\u0947\u0902 \u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u092e\u093e\u0902\u0921 \u091a\u0932\u093e\u090f\u0901:    <pre><code>python my_script.py\n</code></pre></li> </ol>"},{"location":"hi/chapters/faq/#mac","title":"Mac \u0915\u0947 \u0932\u093f\u090f \u091a\u0930\u0923","text":""},{"location":"hi/chapters/faq/#1-pyenv-python-version-manager-install","title":"\u091a\u0930\u0923 1: <code>pyenv</code> (Python Version Manager) install \u0915\u0930\u0947\u0902","text":"<ol> <li> <p>Homebrew install \u0915\u0930\u0947\u0902 (\u0905\u0917\u0930 \u092a\u0939\u0932\u0947 \u0938\u0947 \u0928\u0939\u0940\u0902 \u0915\u093f\u092f\u093e \u0939\u0948):    <pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre></p> </li> <li> <p><code>pyenv</code> install \u0915\u0930\u0947\u0902:    <pre><code>brew install pyenv\n</code></pre></p> </li> <li> <p>\u0907\u0902\u0938\u094d\u091f\u0949\u0932\u0947\u0936\u0928 \u0915\u0940 \u092a\u0941\u0937\u094d\u091f\u093f \u0915\u0930\u0947\u0902:    <pre><code>pyenv --version\n</code></pre></p> </li> </ol>"},{"location":"hi/chapters/faq/#2-pyenv-python-install","title":"\u091a\u0930\u0923 2: <code>pyenv</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f Python \u0938\u0902\u0938\u094d\u0915\u0930\u0923 install \u0915\u0930\u0947\u0902","text":"<ol> <li> <p>\u0909\u092a\u0932\u092c\u094d\u0927 Python \u0938\u0902\u0938\u094d\u0915\u0930\u0923\u094b\u0902 \u0915\u0940 \u0938\u0942\u091a\u0940 \u092c\u0928\u093e\u090f\u0902:    <pre><code>pyenv install --list\n</code></pre></p> </li> <li> <p>\u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0938\u0902\u0938\u094d\u0915\u0930\u0923 install \u0915\u0930\u0947\u0902 (\u091c\u0948\u0938\u0947, Python 3.10.5):    <pre><code>pyenv install 3.10.5\n</code></pre></p> </li> <li> <p>\u0935\u0948\u0936\u094d\u0935\u093f\u0915 Python \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0938\u0947\u091f \u0915\u0930\u0947\u0902:    <pre><code>pyenv global 3.10.5\n</code></pre></p> </li> <li> <p>Python \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0915\u0940 \u092a\u0941\u0937\u094d\u091f\u093f \u0915\u0930\u0947\u0902:    <pre><code>python --version\n</code></pre></p> </li> </ol>"},{"location":"hi/chapters/faq/#3_1","title":"\u091a\u0930\u0923 3: \u090f\u0915 \u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u090f\u0928\u0935\u093e\u092f\u0930\u0928\u092e\u0947\u0902\u091f \u092c\u0928\u093e\u090f\u0902 \u0914\u0930 \u0938\u0915\u094d\u0930\u093f\u092f \u0915\u0930\u0947\u0902","text":"<ol> <li> <p>\u0905\u092a\u0928\u0947 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0928\u0908 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u093f\u0915\u093e \u092c\u0928\u093e\u090f\u0902 (\u0935\u0948\u0915\u0932\u094d\u092a\u093f\u0915):    <pre><code>mkdir my_project\ncd my_project\n</code></pre></p> </li> <li> <p><code>venv</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u090f\u0928\u0935\u093e\u092f\u0930\u0928\u092e\u0947\u0902\u091f \u092c\u0928\u093e\u090f\u0902:    <pre><code>python -m venv venv\n</code></pre></p> </li> <li> <p>\u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u090f\u0928\u0935\u093e\u092f\u0930\u0928\u092e\u0947\u0902\u091f \u0915\u094b \u0938\u0915\u094d\u0930\u093f\u092f \u0915\u0930\u0947\u0902:    <pre><code>source venv/bin/activate\n</code></pre></p> </li> </ol>"},{"location":"hi/chapters/faq/#4-jupyterlab-library-install_1","title":"\u091a\u0930\u0923 4: JupyterLab \u0914\u0930 \u092e\u093e\u0928\u0915 library install \u0915\u0930\u0947\u0902","text":"<ol> <li>\u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u090f\u0928\u0935\u093e\u092f\u0930\u0928\u092e\u0947\u0902\u091f \u092e\u0947\u0902 JupyterLab \u0914\u0930 \u0906\u0935\u0936\u094d\u092f\u0915 library install \u0915\u0930\u0947\u0902:    <pre><code>pip install jupyterlab numpy pandas matplotlib\n</code></pre></li> </ol>"},{"location":"hi/chapters/faq/#5-jupyterlab_1","title":"\u091a\u0930\u0923 5: \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092e\u0947\u0902 JupyterLab \u091a\u0932\u093e\u090f\u0902","text":"<ol> <li>JupyterLab \u0936\u0941\u0930\u0942 \u0915\u0930\u0947\u0902:    <pre><code>jupyter lab\n</code></pre>    \u092f\u0939 \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u0906\u092a\u0915\u0947 \u0921\u093f\u092b\u093c\u0949\u0932\u094d\u091f \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092e\u0947\u0902 \u0916\u0941\u0932 \u091c\u093e\u090f\u0917\u093e\u0964</li> </ol>"},{"location":"hi/chapters/faq/#6-py_1","title":"\u091a\u0930\u0923 6: \u091f\u0930\u094d\u092e\u093f\u0928\u0932 \u0938\u0947 <code>.py</code> \u092b\u093c\u093e\u0907\u0932\u0947\u0902 \u091a\u0932\u093e\u090f\u0902","text":"<ol> <li><code>.py</code> \u092b\u093c\u093e\u0907\u0932\u0947\u0902 \u091a\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u091f\u0930\u094d\u092e\u093f\u0928\u0932 \u092e\u0947\u0902 \u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u092e\u093e\u0902\u0921 \u091a\u0932\u093e\u090f\u0901:    <pre><code>python my_script.py\n</code></pre></li> </ol>"},{"location":"hi/chapters/faq/#google-colab","title":"Google Colab \u092e\u0947\u0902 \u0928\u094b\u091f\u092c\u0941\u0915 \u091a\u0932\u093e\u0928\u093e","text":""},{"location":"hi/chapters/faq/#1-google","title":"\u091a\u0930\u0923 1: \u090f\u0915 Google \u0916\u093e\u0924\u093e \u092c\u0928\u093e\u090f\u0901","text":"<ol> <li>\u092f\u0926\u093f \u0906\u092a\u0915\u0947 \u092a\u093e\u0938 \u092a\u0939\u0932\u0947 \u0938\u0947 Google \u0916\u093e\u0924\u093e \u0928\u0939\u0940\u0902 \u0939\u0948, \u0924\u094b \u092f\u0939\u093e\u0901 \u090f\u0915 \u092c\u0928\u093e\u090f\u0902\u0964</li> </ol>"},{"location":"hi/chapters/faq/#2-google-colab","title":"\u091a\u0930\u0923 2: Google Colab \u0924\u0915 \u092a\u0939\u0941\u0901\u091a\u0947\u0902","text":"<ol> <li>Google Colab \u092a\u0930 \u091c\u093e\u090f\u0901\u0964</li> </ol>"},{"location":"hi/chapters/faq/#3_2","title":"\u091a\u0930\u0923 3: \u090f\u0915 \u0928\u0908 \u0928\u094b\u091f\u092c\u0941\u0915 \u092c\u0928\u093e\u090f\u0901","text":"<ol> <li>\"\u0928\u0908 \u0928\u094b\u091f\u092c\u0941\u0915\" \u092a\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902\u0964</li> </ol>"},{"location":"hi/chapters/faq/#4-colab","title":"\u091a\u0930\u0923 4: Colab \u092e\u0947\u0902 \u0921\u0947\u091f\u093e\u0938\u0947\u091f \u0906\u092f\u093e\u0924 \u0915\u0930\u0928\u093e \u0914\u0930 \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e","text":"<ol> <li>\u092b\u093c\u093e\u0907\u0932\u094b\u0902 \u0915\u094b \u0905\u092a\u0932\u094b\u0921 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f:    <pre><code>from google.colab import files\nuploaded = files.upload()\n</code></pre></li> </ol>"},{"location":"hi/chapters/faq/#5-colab-google-drive","title":"\u091a\u0930\u0923 5: Colab \u0915\u0947 \u0938\u093e\u0925 Google Drive \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e","text":"<ol> <li>Google Drive \u0915\u094b \u092e\u093e\u0909\u0902\u091f \u0915\u0930\u0947\u0902:    <pre><code>from google.colab import drive\ndrive.mount('/content/drive')\n</code></pre></li> </ol>"},{"location":"hi/chapters/faq/#6-colab-library-install","title":"\u091a\u0930\u0923 6: Colab \u092e\u0947\u0902 \u0905\u0924\u093f\u0930\u093f\u0915\u094d\u0924 library install \u0915\u0930\u0928\u093e","text":"<ol> <li>\u0905\u0924\u093f\u0930\u093f\u0915\u094d\u0924 library install \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f:    <pre><code>!pip install &lt;library_name&gt;\n</code></pre></li> </ol>"},{"location":"hi/chapters/faq/#7","title":"\u091a\u0930\u0923 7: \u0928\u094b\u091f\u092c\u0941\u0915 \u0915\u094b \u0938\u0939\u0947\u091c\u0928\u093e \u0914\u0930 \u0938\u093e\u091d\u093e \u0915\u0930\u0928\u093e","text":"<ol> <li>\u0905\u092a\u0928\u0947 \u0928\u094b\u091f\u092c\u0941\u0915 \u0915\u094b Google Drive \u092e\u0947\u0902 \u0938\u0939\u0947\u091c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092b\u093c\u093e\u0907\u0932 \u092e\u0947\u0928\u0942 \u092a\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902 \u0914\u0930 \"\u0938\u0939\u0947\u091c\u0947\u0902\" \u091a\u0941\u0928\u0947\u0902\u0964</li> <li>\u0938\u093e\u091d\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \"\u0938\u093e\u091d\u093e \u0915\u0930\u0947\u0902\" \u092c\u091f\u0928 \u092a\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902 \u0914\u0930 \u0932\u094b\u0917\u094b\u0902 \u0915\u094b \u0906\u092e\u0902\u0924\u094d\u0930\u093f\u0924 \u0915\u0930\u0947\u0902 \u092f\u093e \u090f\u0915 \u0932\u093f\u0902\u0915 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0947\u0902\u0964</li> </ol>"},{"location":"hi/chapters/faq/#_2","title":"\u0921\u0947\u091f\u093e \u0938\u094d\u0930\u094b\u0924\u094b\u0902 \u0914\u0930 \u0906\u0917\u0947 \u092a\u0922\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0902\u0926\u0930\u094d\u092d","text":""},{"location":"hi/chapters/faq/#_3","title":"\u0921\u0947\u091f\u093e \u0938\u094d\u0930\u094b\u0924","text":"<ul> <li>Kaggle Datasets</li> <li>UCI Machine Learning Repository</li> <li>Data.gov</li> </ul>"},{"location":"hi/chapters/faq/#_4","title":"\u0906\u0917\u0947 \u092a\u0922\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092e\u0941\u092b\u094d\u0924 \u0911\u0928\u0932\u093e\u0907\u0928 \u092a\u0941\u0938\u094d\u0924\u0915\u0947\u0902","text":"<ul> <li>Python for Data Analysis by Wes McKinney</li> <li>Think Python: How to Think Like a Computer Scientist</li> <li>Automate the Boring Stuff with Python</li> <li>Python Documentation</li> <li>W3Schools Python</li> <li>Real Python</li> </ul>"},{"location":"hi/chapters/faq/#_5","title":"\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0935\u093f\u091c\u094d\u091e\u093e\u0928","text":"<ul> <li>Open Source CS with Python</li> <li>MIT Computer Science</li> </ul>"},{"location":"hi/chapters/faq/#faq","title":"FAQ \u0914\u0930 \u0938\u0902\u092d\u093e\u0935\u093f\u0924 \u0938\u092e\u0938\u094d\u092f\u093e\u090f\u0901","text":""},{"location":"hi/chapters/faq/#1","title":"1. \u092a\u094d\u0930\u0936\u094d\u0928: \u092e\u0948\u0902 \u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u090f\u0928\u0935\u093e\u092f\u0930\u0928\u092e\u0947\u0902\u091f \u0915\u094b \u0915\u0948\u0938\u0947 \u0928\u093f\u0937\u094d\u0915\u094d\u0930\u093f\u092f \u0915\u0930\u0942\u0901?","text":"<ul> <li>\u0928\u093f\u0937\u094d\u0915\u094d\u0930\u093f\u092f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u091f\u0930\u094d\u092e\u093f\u0928\u0932 \u092e\u0947\u0902 \u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u092e\u093e\u0902\u0921 \u091a\u0932\u093e\u090f\u0901:   <pre><code>deactivate\n</code></pre></li> </ul>"},{"location":"hi/chapters/faq/#2-pyenv","title":"2. \u092a\u094d\u0930\u0936\u094d\u0928: \u0905\u0917\u0930 <code>pyenv</code> \u0915\u092e\u093e\u0902\u0921 \u092e\u093e\u0928\u094d\u092f\u0924\u093e \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0928\u0939\u0940\u0902 \u0939\u0948\u0902 \u0924\u094b \u0915\u094d\u092f\u093e \u0915\u0930\u0947\u0902?","text":"<ul> <li>\u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0947\u0902 \u0915\u093f \u0906\u092a\u0928\u0947 <code>pyenv</code> \u0915\u094b \u0938\u0939\u0940 \u0922\u0902\u0917 \u0938\u0947 install \u0915\u093f\u092f\u093e \u0939\u0948 \u0914\u0930 \u0906\u092a\u0915\u0940 \u0936\u0947\u0932 \u092a\u094d\u0930\u094b\u092b\u093c\u093e\u0907\u0932 \u092b\u093c\u093e\u0907\u0932 \u092e\u0947\u0902 \u0906\u0935\u0936\u094d\u092f\u0915 \u092a\u0925 \u0938\u0947\u091f\u093f\u0902\u0917\u094d\u0938 \u091c\u094b\u0921\u093c\u0940 \u0917\u0908 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/faq/#3-jupyterlab","title":"3. \u092a\u094d\u0930\u0936\u094d\u0928: \u0905\u0917\u0930 JupyterLab \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092e\u0947\u0902 \u0928\u0939\u0940\u0902 \u0916\u0941\u0932\u0924\u093e \u0939\u0948 \u0924\u094b \u0915\u094d\u092f\u093e \u0915\u0930\u0947\u0902?","text":"<ul> <li>\u0905\u092a\u0928\u0947 \u091f\u0930\u094d\u092e\u093f\u0928\u0932 \u092e\u0947\u0902 URL \u0915\u093e \u092e\u0948\u0928\u094d\u092f\u0941\u0905\u0932 \u0930\u0942\u092a \u0938\u0947 \u0915\u0949\u092a\u0940 \u0914\u0930 \u092a\u0947\u0938\u094d\u091f \u0915\u0930\u0947\u0902 \u091c\u094b \u091f\u0930\u094d\u092e\u093f\u0928\u0932 \u092a\u0930 \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u093f\u0924 \u0939\u094b\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/faq/#4-library-install","title":"4. \u092a\u094d\u0930\u0936\u094d\u0928: \u092c\u093e\u0926 \u092e\u0947\u0902 \u0905\u0924\u093f\u0930\u093f\u0915\u094d\u0924 library \u0915\u0948\u0938\u0947 install \u0915\u0930\u0947\u0902?","text":"<ul> <li>\u0905\u092a\u0928\u0947 \u0938\u0915\u094d\u0930\u093f\u092f \u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u090f\u0928\u0935\u093e\u092f\u0930\u0928\u092e\u0947\u0902\u091f \u092e\u0947\u0902 \u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u092e\u093e\u0902\u0921 \u091a\u0932\u093e\u090f\u0901:   <pre><code>pip install &lt;library_name&gt;\n</code></pre></li> </ul>"},{"location":"hi/chapters/faq/#5","title":"5. \u092a\u094d\u0930\u0936\u094d\u0928: \u092e\u0948\u0902 \u090f\u0915 \u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u090f\u0928\u0935\u093e\u092f\u0930\u0928\u092e\u0947\u0902\u091f \u0915\u094b \u0915\u0948\u0938\u0947 \u0939\u091f\u093e\u090a\u0901?","text":"<ul> <li>\u0935\u0930\u094d\u091a\u0941\u0905\u0932 \u090f\u0928\u0935\u093e\u092f\u0930\u0928\u092e\u0947\u0902\u091f \u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u0915\u094b \u0939\u091f\u093e\u090f\u0901:   <pre><code>rm -rf venv\n</code></pre></li> </ul>"},{"location":"hi/chapters/faq/#6-mac-homebrew-install","title":"6. \u092a\u094d\u0930\u0936\u094d\u0928: \u0905\u0917\u0930 \u092e\u0941\u091d\u0947 Mac \u092a\u0930 Homebrew install \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u0905\u0928\u0941\u092e\u0924\u093f \u0924\u094d\u0930\u0941\u091f\u093f\u092f\u093e\u0901 \u092e\u093f\u0932\u0924\u0940 \u0939\u0948\u0902 \u0924\u094b \u0915\u094d\u092f\u093e \u0915\u0930\u0947\u0902?","text":"<ul> <li><code>sudo</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 Homebrew \u0915\u094b install \u0915\u0930\u0928\u0947 \u0915\u093e \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902, \u092f\u093e \u0905\u092a\u0928\u0940 \u092b\u093c\u093e\u0907\u0932 \u0905\u0928\u0941\u092e\u0924\u093f\u092f\u093e\u0901 \u0938\u092e\u093e\u092f\u094b\u091c\u093f\u0924 \u0915\u0930\u0947\u0902\u0964</li> </ul>"},{"location":"hi/chapters/faq/#7-pyenv-mac-python-install","title":"7. \u092a\u094d\u0930\u0936\u094d\u0928: \u0915\u094d\u092f\u094b\u0902 <code>pyenv</code> Mac \u092a\u0930 Python \u0938\u0902\u0938\u094d\u0915\u0930\u0923 install \u0928\u0939\u0940\u0902 \u0915\u0930 \u0930\u0939\u093e \u0939\u0948?","text":"<ul> <li>\u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0947\u0902 \u0915\u093f \u0906\u092a\u0915\u0947 \u092a\u093e\u0938 Xcode Command Line Tools install \u0939\u0948\u0902:   <pre><code>xcode-select --install\n</code></pre></li> </ul>"},{"location":"hi/chapters/qbank/","title":"\u092a\u094d\u0930\u0936\u094d\u0928 \u092c\u0948\u0902\u0915: Computer Science \u0914\u0930 Python \u0939\u093e\u0908 \u0938\u094d\u0915\u0942\u0932 \u0915\u0947 \u0932\u093f\u090f","text":""},{"location":"hi/chapters/qbank/#unit-1-computer-system","title":"Unit 1: Computer System","text":"<ol> <li> <p>CPU \u0915\u094b \u0905\u0915\u094d\u0938\u0930 \u0915\u093f\u0938 \u0928\u093e\u092e \u0938\u0947 \u091c\u093e\u0928\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u093e \u0926\u093f\u0932     b) \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u093e \u092e\u0938\u094d\u0924\u093f\u0937\u094d\u0915     c) \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u093e \u0938\u0902\u0917\u094d\u0930\u0939\u0923     d) \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0940 \u092a\u093e\u0935\u0930 \u0938\u092a\u094d\u0932\u093e\u0908  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e \u0907\u0928\u092a\u0941\u091f \u0921\u093f\u0935\u093e\u0907\u0938 \u0939\u0948?     a) \u092e\u0949\u0928\u093f\u091f\u0930     b) \u0915\u0940\u092c\u094b\u0930\u094d\u0921     c) \u092a\u094d\u0930\u093f\u0902\u091f\u0930     d) \u0938\u094d\u092a\u0940\u0915\u0930  </p> </li> <li> <p>\u0915\u093f\u0938 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u0940 \u092e\u0947\u092e\u094b\u0930\u0940 \u0935\u094b\u0932\u093e\u091f\u093e\u0907\u0932 \u0939\u094b\u0924\u0940 \u0939\u0948?     a) Primary Memory (RAM)     b) Secondary Memory (Hard Drive)     c) Cache Memory     d) ROM  </p> </li> <li> <p>\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0940 \u092a\u0939\u0932\u0940 \u092a\u0940\u0922\u093c\u0940 \u0928\u0947 \u0915\u093f\u0938 \u0924\u0915\u0928\u0940\u0915 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e?     a) Transistors     b) Microprocessors     c) Vacuum tubes     d) Integrated Circuits  </p> </li> <li> <p>\u0938\u093f\u0938\u094d\u091f\u092e \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0915\u093e \u092e\u0941\u0916\u094d\u092f \u0915\u093e\u0930\u094d\u092f \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0917\u0923\u0928\u093e\u090f\u0901 \u0915\u0930\u0928\u093e     b) \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0915\u094b \u091a\u0932\u093e\u0928\u093e \u0914\u0930 \u0938\u0902\u0938\u093e\u0927\u0928\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0915\u0930\u0928\u093e     c) \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u093e \u092e\u0928\u094b\u0930\u0902\u091c\u0928 \u0915\u0930\u0928\u093e     d) \u0928\u090f \u092b\u093c\u093e\u0907\u0932\u0947\u0902 \u092c\u0928\u093e\u0928\u093e  </p> </li> <li> <p>\u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0940 \u0915\u093f\u0938 \u092a\u0940\u0922\u093c\u0940 \u092e\u0947\u0902 \u092a\u0947\u0936 \u0915\u093f\u092f\u093e \u0917\u092f\u093e?     a) \u092a\u0939\u0932\u0940 \u092a\u0940\u0922\u093c\u0940     b) \u0926\u0942\u0938\u0930\u0940 \u092a\u0940\u0922\u093c\u0940     c) \u0924\u0940\u0938\u0930\u0940 \u092a\u0940\u0922\u093c\u0940     d) \u091a\u094c\u0925\u0940 \u092a\u0940\u0922\u093c\u0940  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e \u0911\u092a\u0930\u0947\u091f\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u093e \u092a\u094d\u0930\u0915\u093e\u0930 \u0928\u0939\u0940\u0902 \u0939\u0948?     a) Linux     b) Windows     c) Java     d) macOS  </p> </li> <li> <p>\u0915\u093f\u0938 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0915\u094b \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0914\u0930 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u094b \u0938\u094d\u0935\u092f\u0902 \u091a\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) Application software     b) System software     c) Specific software     d) Programming software  </p> </li> <li> <p>CPU \u0906\u0930\u094d\u0915\u093f\u091f\u0947\u0915\u094d\u091a\u0930 \u092e\u0947\u0902 ALU \u0915\u093e \u092a\u0942\u0930\u094d\u0923 \u0930\u0942\u092a \u0915\u094d\u092f\u093e \u0939\u0948?     a) Arithmetic Learning Unit     b) Arithmetic Logic Unit     c) Algorithm Logic Unit     d) Arithmetic Language Unit  </p> </li> <li> <p>\u0921\u093f\u0935\u093e\u0907\u0938 \u0921\u094d\u0930\u093e\u0907\u0935\u0930 \u0915\u0940 \u092d\u0942\u092e\u093f\u0915\u093e \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0921\u0947\u091f\u093e \u0938\u0902\u0917\u094d\u0930\u0939\u093f\u0924 \u0915\u0930\u0928\u093e     b) \u092a\u093e\u0935\u0930 \u0938\u092a\u094d\u0932\u093e\u0908 \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u093e     c) OS \u0915\u094b \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0921\u093f\u0935\u093e\u0907\u0938 \u0915\u0947 \u0938\u093e\u0925 \u0938\u0902\u0935\u093e\u0926 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0928\u093e     d) \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u0915\u0940 \u0938\u0941\u0930\u0915\u094d\u0937\u093e \u0915\u0930\u0928\u093e  </p> </li> <li> <p>Microsoft Word \u0915\u093f\u0938 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0939\u0948?     a) System software     b) Generic software     c) Specific software     d) Device driver  </p> </li> <li> <p>\u0911\u092a\u0930\u0947\u091f\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e \u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e \u0915\u093e\u0930\u094d\u092f \u0915\u0930\u0924\u093e \u0939\u0948?     a) \u0917\u0923\u0928\u093e\u090f\u0901 \u0915\u0930\u0928\u093e     b) \u092e\u0947\u092e\u094b\u0930\u0940 \u0915\u093e \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0915\u0930\u0928\u093e     c) \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0928\u093e     d) \u0906\u0915\u093e\u0930 \u092c\u0928\u093e\u0928\u093e  </p> </li> <li> <p>\u0915\u094c\u0928 \u0938\u0940 \u092d\u093e\u0937\u093e \u092e\u0936\u0940\u0928 \u0915\u0940 \u092e\u0942\u0932 \u092d\u093e\u0937\u093e \u0915\u0947 \u0938\u092c\u0938\u0947 \u0915\u0930\u0940\u092c \u0939\u0948?     a) High-level language     b) Assembly language     c) Machine language     d) Markup language  </p> </li> <li> <p>\u0938\u0902\u0915\u094d\u0937\u093f\u092a\u094d\u0924\u093e\u0915\u094d\u0937\u0930 \"RAM\" \u0915\u093e \u092a\u0942\u0930\u093e \u0930\u0942\u092a \u0939\u0948:     a) Random Access Machine     b) Read Access Memory     c) Random Access Memory     d) Readable and Accessible Memory  </p> </li> <li> <p>\u0938\u091a \u092f\u093e \u091d\u0942\u0920: Secondary storage \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u0940 \u0935\u094b\u0932\u093e\u091f\u093e\u0907\u0932 \u092e\u0947\u092e\u094b\u0930\u0940 \u0939\u0948\u0964  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e \u090f\u0915 peripheral \u0921\u093f\u0935\u093e\u0907\u0938 \u0939\u0948?     a) CPU     b) \u0915\u0940\u092c\u094b\u0930\u094d\u0921     c) RAM     d) ROM  </p> </li> <li> <p>\u092e\u0947\u092e\u094b\u0930\u0940 \u0939\u093e\u092f\u0930\u093e\u0930\u094d\u0915\u0940 \u092e\u0947\u0902, \u0915\u094c\u0928 \u0938\u0940 \u092e\u0947\u092e\u094b\u0930\u0940 \u0938\u092c\u0938\u0947 \u0924\u0947\u091c \u0939\u0948?     a) Cache memory     b) RAM     c) Hard Disk     d) ROM  </p> </li> <li> <p>\u0916\u093e\u0932\u0940 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u092a\u0939\u0932\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0928\u0947 \u0905\u092a\u0928\u0947 \u092a\u094d\u0930\u093e\u0925\u092e\u093f\u0915 \u092e\u0947\u092e\u094b\u0930\u0940 \u0938\u0902\u0917\u094d\u0930\u0939\u0923 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 __ \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e\u0964     a) Vacuum tubes     b) Punched cards     c) Transistors     d) Magnetic tapes  </p> </li> <li> <p>\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u093f\u0938\u094d\u091f\u092e \u092e\u0947\u0902 \"\u092c\u0942\u091f\u093f\u0902\u0917\" \u0936\u092c\u094d\u0926 \u0915\u093e \u0915\u094d\u092f\u093e \u0905\u0930\u094d\u0925 \u0939\u0948?     a) \u0911\u092a\u0930\u0947\u091f\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u094b \u092a\u0941\u0928\u0903 \u092a\u094d\u0930\u093e\u0930\u0902\u092d \u0915\u0930\u0928\u093e     b) \u092e\u0947\u092e\u094b\u0930\u0940 \u092e\u0947\u0902 \u0911\u092a\u0930\u0947\u091f\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u094b \u0932\u094b\u0921 \u0915\u0930\u0928\u093e     c) \u0928\u090f \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0915\u094b \u0938\u094d\u0925\u093e\u092a\u093f\u0924 \u0915\u0930\u0928\u093e     d) \u0939\u093e\u0930\u094d\u0921 \u0921\u094d\u0930\u093e\u0907\u0935 \u0915\u094b \u092b\u0949\u0930\u094d\u092e\u0947\u091f \u0915\u0930\u0928\u093e  </p> </li> <li> <p>\u0938\u091a \u092f\u093e \u091d\u0942\u0920: ROM \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u0940 \u0928\u0949\u0928-\u0935\u094b\u0932\u093e\u091f\u093e\u0907\u0932 \u092e\u0947\u092e\u094b\u0930\u0940 \u0939\u0948\u0964  </p> </li> </ol>"},{"location":"hi/chapters/qbank/#unit-2-encoding-schemes-number-systems","title":"Unit 2: Encoding Schemes \u0914\u0930 Number Systems","text":"<ol> <li> <p>ASCII \u0915\u093e \u092a\u0942\u0930\u094d\u0923 \u0930\u0942\u092a \u0915\u094d\u092f\u093e \u0939\u0948?     a) American Standard Code for Internet Interchange     b) American Standard Code for Information Interchange     c) Advanced Symbol Code for Internet Information     d) Application System Code for Internet  </p> </li> <li> <p>\u092e\u093e\u0928\u0915 ASCII \u092e\u0947\u0902 \u0915\u093f\u0924\u0928\u0947 \u092c\u093f\u091f\u094d\u0938 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) 8     b) 7     c) 16     d) 32  </p> </li> <li> <p>\u0915\u094c\u0928 \u0938\u093e \u090f\u0928\u094d\u0915\u094b\u0921\u093f\u0902\u0917 \u0938\u094d\u0915\u0940\u092e \u0915\u0908 \u092d\u093e\u0937\u093e\u0913\u0902 \u0915\u0947 \u0915\u0948\u0930\u0947\u0915\u094d\u091f\u0930\u094d\u0938 \u0915\u093e \u0938\u092e\u0930\u094d\u0925\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0921\u093f\u091c\u093c\u093e\u0907\u0928 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948, \u091c\u093f\u0938\u092e\u0947\u0902 \u0907\u092e\u094b\u091c\u0940 \u092d\u0940 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902?     a) ASCII     b) Unicode     c) Base64     d) Hexadecimal  </p> </li> <li> <p>\u0938\u091a \u092f\u093e \u091d\u0942\u0920: \u0926\u0936\u092e\u0932\u0935 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u092e\u0947\u0902, \u0939\u092e \u0906\u0927\u093e\u0930 10 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964  </p> </li> <li> <p>\u092c\u093e\u0907\u0928\u0930\u0940 \u0928\u0902\u092c\u0930 \u0938\u093f\u0938\u094d\u091f\u092e \u092e\u0947\u0902 \u0915\u093f\u0924\u0928\u0947 \u0905\u0902\u0915 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902?     a) 2     b) 8     c) 10     d) 16  </p> </li> <li> <p>\u092c\u093e\u0907\u0928\u0930\u0940 \u0938\u0902\u0916\u094d\u092f\u093e <code>1011</code> \u0915\u094b \u0926\u0936\u092e\u0932\u0935 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0947\u0902\u0964     a) 9     b) 11     c) 13     d) 15  </p> </li> <li> <p>\u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u0915\u093e \u0906\u0927\u093e\u0930 \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0906\u0927\u093e\u0930 2     b) \u0906\u0927\u093e\u0930 8     c) \u0906\u0927\u093e\u0930 10     d) \u0906\u0927\u093e\u0930 16  </p> </li> <li> <p>\u0926\u0936\u092e\u0932\u0935 \u0938\u0902\u0916\u094d\u092f\u093e <code>15</code> \u0915\u094b \u092c\u093e\u0907\u0928\u0930\u0940 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0947\u0902\u0964     a) 1101     b) 1001     c) 1111     d) 1011  </p> </li> <li> <p>\u0938\u091a \u092f\u093e \u091d\u0942\u0920: \u0911\u0915\u094d\u091f\u0932 \u0928\u0902\u092c\u0930 \u0938\u093f\u0938\u094d\u091f\u092e \u0906\u0927\u093e\u0930 16 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>\u0926\u0936\u092e\u0932\u0935 \u0938\u0902\u0916\u094d\u092f\u093e <code>255</code> \u0915\u093e \u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u094d\u092f\u093e \u0939\u0948?     a) A1     b) FF     c) 1F     d) AF  </p> </li> <li> <p><code>A3</code> \u0915\u094b \u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u0938\u0947 \u0926\u0936\u092e\u0932\u0935 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0947\u0902\u0964     a) 256     b) 128     c) 163     d) 213  </p> </li> <li> <p>\u0916\u093e\u0932\u0940 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: 'A' \u0905\u0915\u094d\u0937\u0930 \u0915\u0947 \u0932\u093f\u090f ASCII \u0935\u0930\u094d\u0923 \u0915\u094b\u0921 ____ \u0939\u0948\u0964     a) 64     b) 65     c) 66     d) 67  </p> </li> <li> <p>\u092c\u093e\u0907\u0928\u0930\u0940 \u092e\u0947\u0902, <code>1010</code> \u0915\u093e \u0926\u0936\u092e\u0932\u0935 \u092e\u0947\u0902 \u0915\u094d\u092f\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0939\u0948?     a) 5     b) 8     c) 10     d) 12  </p> </li> <li> <p>\u0915\u094c\u0928 \u0938\u093e \u090f\u0928\u094d\u0915\u094b\u0921\u093f\u0902\u0917 \u0938\u094d\u0915\u0940\u092e \u0935\u0947\u092c \u0914\u0930 \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u093f\u092f\u094b\u0902 \u092e\u0947\u0902 \u0915\u0908 \u092d\u093e\u0937\u093e\u0913\u0902 \u0915\u094b \u0938\u0902\u092d\u093e\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0935\u094d\u092f\u093e\u092a\u0915 \u0930\u0942\u092a \u0938\u0947 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) ASCII     b) Base64     c) Unicode     d) ISO-8859-1  </p> </li> <li> <p>\u0926\u0936\u092e\u0932\u0935 \u0938\u0902\u0916\u094d\u092f\u093e <code>16</code> \u0915\u093e \u0911\u0915\u094d\u091f\u0932 \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u094d\u092f\u093e \u0939\u0948?     a) 12     b) 16     c) 20     d) 21  </p> </li> <li> <p>\u092e\u093e\u0928\u0915 ASCII \u0915\u093f\u0924\u0928\u0947 \u0938\u0902\u092d\u093e\u0935\u093f\u0924 \u0915\u0948\u0930\u0947\u0915\u094d\u091f\u0930\u094d\u0938 \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948?     a) 64     b) 128     c) 256     d) 512  </p> </li> <li> <p>\u0938\u091a \u092f\u093e \u091d\u0942\u0920: \u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u0938\u093f\u0938\u094d\u091f\u092e \u092e\u0947\u0902, A-F \u0905\u0915\u094d\u0937\u0930 \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 10-15 \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964  </p> </li> <li> <p>\u0916\u093e\u0932\u0940 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u092c\u093e\u0907\u0928\u0930\u0940 \u0928\u0902\u092c\u0930 \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u0947\u0935\u0932 \u0905\u0902\u0915\u094b\u0902 _ \u0914\u0930 _ \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p><code>1100</code> \u0915\u094b \u092c\u093e\u0907\u0928\u0930\u0940 \u0938\u0947 \u0939\u0947\u0915\u094d\u0938\u093e\u0921\u0947\u0938\u093f\u092e\u0932 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0947\u0902\u0964     a) C     b) F     c) A     d) D  </p> </li> <li> <p><code>10101</code> \u0915\u094b \u092c\u093e\u0907\u0928\u0930\u0940 \u0938\u0947 \u0926\u0936\u092e\u0932\u0935 \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0947\u0902\u0964     a) 25     b) 21     c) 23     d) 19  </p> </li> </ol>"},{"location":"hi/chapters/qbank/#unit-3-emerging-trends","title":"Unit 3: Emerging Trends","text":"<ol> <li> <p>Artificial Intelligence (AI) \u092e\u0941\u0916\u094d\u092f \u0930\u0942\u092a \u0938\u0947 \u0915\u093f\u0938 \u092c\u093e\u0924 \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u0948?     a) \u092d\u094c\u0924\u093f\u0915 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917     b) \u092e\u0936\u0940\u0928 \u0932\u0930\u094d\u0928\u093f\u0902\u0917     c) \u092e\u093e\u0928\u0935 \u092c\u0941\u0926\u094d\u0927\u093f\u092e\u0924\u094d\u0924\u093e \u0915\u093e \u0905\u0928\u0941\u0915\u0930\u0923     d) \u0921\u093f\u091c\u093f\u091f\u0932 \u0907\u092e\u0947\u091c\u093f\u0902\u0917  </p> </li> <li> <p>\u0938\u091a \u092f\u093e \u091d\u0942\u0920: \u092e\u0936\u0940\u0928 \u0932\u0930\u094d\u0928\u093f\u0902\u0917, \u0906\u0930\u094d\u091f\u093f\u092b\u093f\u0936\u093f\u092f\u0932 \u0907\u0902\u091f\u0947\u0932\u093f\u091c\u0947\u0902\u0938 \u0915\u093e \u090f\u0915 \u0909\u092a\u0938\u092e\u0942\u0939 \u0939\u0948\u0964  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e AI \u0915\u093e \u090f\u0915 \u0909\u0926\u093e\u0939\u0930\u0923 \u0939\u0948 \u091c\u094b \u0926\u0948\u0928\u093f\u0915 \u091c\u0940\u0935\u0928 \u092e\u0947\u0902 \u092a\u093e\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) \u090f\u0915 \u0915\u0948\u0932\u0915\u0941\u0932\u0947\u091f\u0930     b) \u0935\u0949\u092f\u0938 \u0905\u0938\u093f\u0938\u094d\u091f\u0947\u0902\u091f \u091c\u0948\u0938\u0947 Siri     c) \u090f\u0915 \u0938\u093e\u092e\u093e\u0928\u094d\u092f \u0932\u093e\u0907\u091f \u0938\u094d\u0935\u093f\u091a     d) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094b\u0908 \u0928\u0939\u0940\u0902  </p> </li> <li> <p>IoT \u0915\u093e \u092a\u0942\u0930\u093e \u0930\u0942\u092a \u0915\u094d\u092f\u093e \u0939\u0948?     a) Internet of Technology     b) Internet of Things     c) Interconnection of Technologies     d) Information on Things  </p> </li> <li> <p>\u0938\u091a \u092f\u093e \u091d\u0942\u0920: Big Data \u091b\u094b\u091f\u0947 \u0938\u0902\u0930\u091a\u093f\u0924 \u0921\u0947\u091f\u093e \u0938\u0947\u091f\u094b\u0902 \u0915\u094b \u0938\u0902\u0926\u0930\u094d\u092d\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u094b \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u0906\u0938\u093e\u0928 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e \u0935\u093f\u0936\u093e\u0932 \u092e\u093e\u0924\u094d\u0930\u093e \u092e\u0947\u0902 \u0905\u0938\u0902\u0930\u091a\u093f\u0924 \u0921\u0947\u091f\u093e \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0914\u0930 \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) Big Data     b) AI     c) Blockchain     d) Sensors  </p> </li> <li> <p>\u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0938\u093f\u091f\u0940 \u0915\u093e \u092e\u0941\u0916\u094d\u092f \u0932\u0915\u094d\u0937\u094d\u092f \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0905\u0927\u093f\u0915 \u0928\u094c\u0915\u0930\u093f\u092f\u093e\u0901 \u092c\u0928\u093e\u0928\u093e     b) \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0936\u0939\u0930\u094b\u0902 \u0915\u094b \u0905\u0927\u093f\u0915 \u0938\u094d\u0925\u093e\u092f\u0940 \u0914\u0930 \u0915\u0941\u0936\u0932 \u092c\u0928\u093e\u0928\u093e     c) \u0938\u092d\u0940 \u092e\u093e\u0928\u0935 \u0936\u094d\u0930\u092e\u093f\u0915\u094b\u0902 \u0915\u094b \u0930\u094b\u092c\u094b\u091f \u0938\u0947 \u092c\u0926\u0932\u0928\u093e     d) \u0936\u0939\u0930\u094b\u0902 \u0915\u094b \u092c\u0921\u093c\u093e \u0914\u0930 \u0905\u0927\u093f\u0915 \u091c\u0928\u0938\u0902\u0916\u094d\u092f\u093e \u0935\u093e\u0932\u093e \u092c\u0928\u093e\u0928\u093e  </p> </li> <li> <p>Blockchain \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u0915\u093f\u0938 \u0915\u094d\u0937\u0947\u0924\u094d\u0930 \u092e\u0947\u0902 \u0909\u092a\u092f\u094b\u0917 \u0915\u0947 \u0932\u093f\u090f \u0938\u092c\u0938\u0947 \u0905\u0927\u093f\u0915 \u091c\u093e\u0928\u0940 \u091c\u093e\u0924\u0940 \u0939\u0948?     a) \u0935\u093f\u0924\u094d\u0924\u0940\u092f \u0932\u0947\u0928-\u0926\u0947\u0928 \u0914\u0930 \u0915\u094d\u0930\u093f\u092a\u094d\u091f\u094b\u0915\u094d\u092f\u0942\u0930\u0947\u0902\u0938\u0940     b) \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e \u092a\u094d\u0932\u0947\u091f\u092b\u093c\u0949\u0930\u094d\u092e     c) \u0905\u0902\u0924\u0930\u093f\u0915\u094d\u0937 \u0905\u0928\u094d\u0935\u0947\u0937\u0923     d) \u092a\u093e\u0930\u0902\u092a\u0930\u093f\u0915 \u0921\u0947\u091f\u093e \u092d\u0902\u0921\u093e\u0930\u0923 \u092a\u094d\u0930\u0923\u093e\u0932\u0940  </p> </li> <li> <p>\u0938\u091a \u092f\u093e \u091d\u0942\u0920: \u0930\u094b\u092c\u094b\u091f\u093f\u0915\u094d\u0938 \u0909\u0938 \u0915\u094d\u0937\u0947\u0924\u094d\u0930 \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u0948 \u091c\u094b \u0930\u094b\u092c\u094b\u091f\u094b\u0902 \u0915\u094b \u0921\u093f\u091c\u093e\u0907\u0928 \u0914\u0930 \u092c\u0928\u093e\u0928\u0947 \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u0948\u0964  </p> </li> <li> <p>\u0915\u094c\u0928 \u0938\u0940 \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u0915\u094b \u0924\u0947\u091c\u093c, \u0905\u0927\u093f\u0915 \u0935\u093f\u0936\u094d\u0935\u0938\u0928\u0940\u092f \u092e\u094b\u092c\u093e\u0907\u0932 \u0915\u0928\u0947\u0915\u094d\u0936\u0928\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0905\u0917\u0932\u0940 \u092a\u0940\u0922\u093c\u0940 \u092e\u093e\u0928\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) 3G     b) 4G     c) 5G     d) Wi-Fi  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e IoT \u0915\u093e \u0909\u0926\u093e\u0939\u0930\u0923 \u0928\u0939\u0940\u0902 \u0939\u0948?     a) \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0930\u0947\u092b\u094d\u0930\u093f\u091c\u0930\u0947\u091f\u0930     b) \u092b\u093f\u091f\u0928\u0947\u0938 \u091f\u094d\u0930\u0948\u0915\u0930     c) \u0932\u0948\u092a\u091f\u0949\u092a     d) \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0925\u0930\u094d\u092e\u094b\u0938\u094d\u091f\u0947\u091f  </p> </li> <li> <p>\u0916\u093e\u0932\u0940 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u090f\u0915 \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0938\u093f\u091f\u0940 ____ \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0940 \u0939\u0948 \u0924\u093e\u0915\u093f \u0936\u0939\u0930\u0940 \u091c\u0940\u0935\u0928 \u0914\u0930 \u0938\u094d\u0925\u093f\u0930\u0924\u093e \u092e\u0947\u0902 \u0938\u0941\u0927\u093e\u0930 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0947\u0964     a) \u092e\u0936\u0940\u0928 \u0932\u0930\u094d\u0928\u093f\u0902\u0917     b) Blockchain     c) IoT \u0914\u0930 \u0938\u0947\u0902\u0938\u0930     d) \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e  </p> </li> <li> <p>\u0915\u094c\u0928 \u0938\u093e \u0936\u092c\u094d\u0926 \u0921\u0947\u091f\u093e \u0938\u0947 \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u0938\u0940\u0916\u0928\u0947 \u0914\u0930 \u0938\u092e\u092f \u0915\u0947 \u0938\u093e\u0925 \u0938\u0941\u0927\u093e\u0930 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092e\u0936\u0940\u0928\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u0947 \u0915\u094b \u0938\u0902\u0926\u0930\u094d\u092d\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948?     a) Artificial Intelligence     b) Machine Learning     c) Blockchain     d) Cloud Computing  </p> </li> <li> <p>\u0938\u091a \u092f\u093e \u091d\u0942\u0920: Cloud computing \u092e\u0947\u0902 \u0906\u092a\u0915\u094b \u0905\u092a\u0928\u093e \u0938\u093e\u0930\u093e \u0921\u0947\u091f\u093e \u0905\u092a\u0928\u0947 \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u092a\u0930 \u0938\u094d\u091f\u094b\u0930 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u094b\u0924\u0940 \u0939\u0948\u0964  </p> </li> <li> <p>\"\u092b\u093f\u0936\u093f\u0902\u0917\" \u0936\u092c\u094d\u0926 \u0915\u093e \u0915\u094d\u092f\u093e \u0905\u0930\u094d\u0925 \u0939\u0948?     a) \u091d\u0940\u0932 \u092e\u0947\u0902 \u0905\u0938\u0932\u0940 \u092e\u091b\u0932\u093f\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u092e\u091b\u0932\u0940 \u092a\u0915\u0921\u093c\u0928\u093e     b) \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u091a\u0941\u0930\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0928\u0915\u0932\u0940 \u0908\u092e\u0947\u0932 \u092d\u0947\u091c\u0928\u093e     c) AI \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0935\u094d\u092f\u0935\u0939\u093e\u0930 \u0915\u0940 \u0928\u093f\u0917\u0930\u093e\u0928\u0940 \u0915\u0930\u0928\u093e     d) \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0905\u0928\u0941\u092f\u093e\u092f\u093f\u092f\u094b\u0902 \u0915\u094b \u0907\u0915\u091f\u094d\u0920\u093e \u0915\u0930\u0928\u093e  </p> </li> <li> <p>\u0916\u093e\u0932\u0940 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Blockchain \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u0921\u093f\u091c\u093f\u091f\u0932 \u0932\u0947\u0928-\u0926\u0947\u0928 \u092e\u0947\u0902 ____ \u0938\u0941\u0930\u0915\u094d\u0937\u093e \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u091c\u093e\u0928\u0940 \u091c\u093e\u0924\u0940 \u0939\u0948\u0964     a) \u0915\u092e\u091c\u094b\u0930     b) \u0914\u0938\u0924     c) \u092e\u091c\u092c\u0942\u0924     d) \u0905\u0938\u094d\u0924\u093f\u0924\u094d\u0935\u0939\u0940\u0928  </p> </li> <li> <p>Cloud computing \u0915\u093e \u092e\u0941\u0916\u094d\u092f \u0909\u092a\u092f\u094b\u0917 \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0935\u093f\u0915\u0938\u093f\u0924 \u0915\u0930\u0928\u093e     b) \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0921\u0947\u091f\u093e \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0914\u0930 \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930\u0928\u093e     c) \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e \u0916\u093e\u0924\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0915\u0930\u0928\u093e     d) IoT \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u0915\u093e \u0928\u093f\u0930\u094d\u092e\u093e\u0923 \u0915\u0930\u0928\u093e  </p> </li> <li> <p>\u0938\u091a \u092f\u093e \u091d\u0942\u0920: \u0930\u094b\u092c\u094b\u091f\u093f\u0915\u094d\u0938 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0947\u0935\u0932 \u0914\u0926\u094d\u092f\u094b\u0917\u093f\u0915 \u0938\u0947\u091f\u093f\u0902\u0917\u094d\u0938 \u092e\u0947\u0902 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>5G \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u0915\u0940 \u090f\u0915 \u092e\u0941\u0916\u094d\u092f \u0935\u093f\u0936\u0947\u0937\u0924\u093e \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0909\u091a\u094d\u091a \u0917\u0924\u093f \u0914\u0930 \u0915\u092e \u0935\u093f\u0932\u0902\u092c\u0924\u093e     b) \u0927\u0940\u092e\u0940 \u0915\u0928\u0947\u0915\u094d\u0936\u0928 \u0938\u094d\u092a\u0940\u0921     c) \u0921\u0947\u091f\u093e \u0938\u0941\u0930\u0915\u094d\u0937\u093e \u092e\u0947\u0902 \u0915\u092e\u0940     d) \u0938\u0940\u092e\u093f\u0924 \u0921\u093f\u0935\u093e\u0907\u0938 \u0915\u0928\u0947\u0915\u094d\u091f\u093f\u0935\u093f\u091f\u0940  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e \u0915\u094d\u0937\u0947\u0924\u094d\u0930 \u0938\u094d\u0935\u093e\u092f\u0924\u094d\u0924 \u092e\u0936\u0940\u0928\u094b\u0902 \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u0948?     a) Blockchain     b) Robotics     c) Cloud computing     d) AI  </p> </li> </ol>"},{"location":"hi/chapters/qbank/#unit-4-problem-solving","title":"Unit 4: Problem Solving","text":"<ol> <li> <p>\u0938\u092e\u0938\u094d\u092f\u093e-\u0938\u092e\u093e\u0927\u093e\u0928 \u091a\u0915\u094d\u0930 \u092e\u0947\u0902 \u092a\u0939\u0932\u093e \u0915\u0926\u092e \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0938\u092e\u093e\u0927\u093e\u0928 \u0915\u093e \u092a\u0930\u0940\u0915\u094d\u0937\u0923     b) \u090f\u0915 algorithm \u0921\u093f\u091c\u093e\u0907\u0928 \u0915\u0930\u0928\u093e     c) \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0928\u093e     d) \u0915\u094b\u0921 \u0932\u093f\u0916\u0928\u093e  </p> </li> <li> <p>algorithm \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930     b) \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u0939\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0926\u092e-\u0926\u0930-\u0915\u0926\u092e \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e     c) \u090f\u0915 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u092d\u093e\u0937\u093e     d) \u090f\u0915 \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0918\u091f\u0915  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: \u090f\u0915 flowchart \u0915\u093e \u0909\u092a\u092f\u094b\u0917 algorithm \u0915\u093e \u0926\u0943\u0936\u094d\u092f \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>flowchart \u092e\u0947\u0902 \u0915\u094c\u0928 \u0938\u093e \u092a\u094d\u0930\u0924\u0940\u0915 \u0928\u093f\u0930\u094d\u0923\u092f \u092c\u093f\u0902\u0926\u0941 \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u093e \u0939\u0948?     a) \u0906\u092f\u0924     b) \u0905\u0902\u0921\u093e\u0915\u093e\u0930     c) \u0939\u0940\u0930\u093e     d) \u0935\u0943\u0924\u094d\u0924  </p> </li> <li> <p>\u0938\u092e\u0938\u094d\u092f\u093e-\u0938\u092e\u093e\u0927\u093e\u0928 \u092e\u0947\u0902 algorithm \u0915\u093e \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0921\u0947\u091f\u093e \u0915\u094b \u0926\u0943\u0936\u094d\u092f \u0930\u0942\u092a \u0938\u0947 \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u093f\u0924 \u0915\u0930\u0928\u093e     b) \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u0924\u093e\u0930\u094d\u0915\u093f\u0915 \u091a\u0930\u0923\u094b\u0902 \u092e\u0947\u0902 \u0935\u093f\u092d\u093e\u091c\u093f\u0924 \u0915\u0930\u0928\u093e     c) \u0906\u0909\u091f\u092a\u0941\u091f \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0928\u093e     d) \u090f\u0915 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0932\u093f\u0916\u0928\u093e  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: \u090f\u0915 algorithm \u0915\u094b \u0939\u092e\u0947\u0936\u093e \u0915\u094b\u0921 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0932\u093e\u0917\u0942 \u0915\u093f\u092f\u093e \u091c\u093e\u0928\u093e \u091a\u093e\u0939\u093f\u090f\u0964  </p> </li> <li> <p>\u0915\u094c\u0928 \u0938\u093e \u0928\u093f\u0930\u094d\u092e\u093e\u0923 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u0947 \u0905\u0928\u0941\u0915\u094d\u0930\u092e \u092e\u0947\u0902 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948?     a) \u091a\u092f\u0928     b) \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f     c) \u0905\u0928\u0941\u0915\u094d\u0930\u092e     d) \u092b\u093c\u0902\u0915\u094d\u0936\u0928  </p> </li> <li> <p>\u0915\u094c\u0928 \u0938\u093e \u0915\u0925\u0928 \u0906\u092a\u0915\u094b \u090f\u0915 \u0938\u094d\u0925\u093f\u0924\u093f \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0926\u094b \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u0947 \u092c\u0940\u091a \u091a\u092f\u0928 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948?     a) While loop     b) If-else statement     c) Break statement     d) Function  </p> </li> <li> <p>\u0915\u094c\u0928 \u0938\u093e \u0928\u093f\u0930\u094d\u092e\u093e\u0923 \u0915\u094b\u0921 \u0915\u0947 \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u0915\u094b \u0926\u094b\u0939\u0930\u093e\u0924\u093e \u0939\u0948?     a) Iteration     b) \u0905\u0928\u0941\u0915\u094d\u0930\u092e     c) If statement     d) \u091a\u092f\u0928  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: <code>while</code> loop \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u094b\u0921 \u0915\u0947 \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u0915\u094b \u0905\u0928\u093f\u0936\u094d\u091a\u093f\u0924\u0915\u093e\u0932 \u0915\u0947 \u0932\u093f\u090f \u0926\u094b\u0939\u0930\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u091c\u092c \u0924\u0915 \u0915\u093f \u090f\u0915 \u0938\u094d\u0925\u093f\u0924\u093f \u092a\u0942\u0930\u0940 \u0928\u0939\u0940\u0902 \u0939\u094b\u0924\u0940\u0964  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u090f\u0915 ____ \u090f\u0915 \u091a\u0930\u0923-\u0926\u0930-\u091a\u0930\u0923 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0939\u0948 \u091c\u094b \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u092e\u0947\u0902 \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u0939\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u0940 \u091c\u093e\u0924\u0940 \u0939\u0948\u0964     a) Flowchart     b) Function     c) Algorithm     d) \u0905\u0928\u0941\u0915\u094d\u0930\u092e  </p> </li> <li> <p>\u0938\u092e\u0938\u094d\u092f\u093e-\u0938\u092e\u093e\u0927\u093e\u0928 \u091a\u0915\u094d\u0930 \u092e\u0947\u0902 \u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u0915\u093e \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0938\u092e\u093e\u0927\u093e\u0928 \u0915\u0940 \u092a\u094d\u0930\u092d\u093e\u0935\u0936\u0940\u0932\u0924\u093e \u0915\u093e \u092e\u0942\u0932\u094d\u092f\u093e\u0902\u0915\u0928 \u0915\u0930\u0928\u093e     b) algorithm \u0915\u093e \u0921\u093f\u091c\u093c\u093e\u0907\u0928 \u0915\u0930\u0928\u093e     c) \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0928\u093e     d) \u092a\u0930\u093f\u0923\u093e\u092e \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0928\u093e  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e \u090f\u0915 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u0928\u093f\u0930\u094d\u092e\u093e\u0923 \u0928\u0939\u0940\u0902 \u0939\u0948?     a) \u0905\u0928\u0941\u0915\u094d\u0930\u092e     b) \u091a\u092f\u0928     c) \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f     d) Debugging  </p> </li> <li> <p>Python \u092e\u0947\u0902 \u0936\u0930\u094d\u0924\u094b\u0902 \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u0915\u0925\u0928 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) for loop     b) if statement     c) print statement     d) def statement  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: \u090f\u0915 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f \u0928\u093f\u0930\u094d\u092e\u093e\u0923 \u0915\u094b \u092d\u0940 loop \u0915\u0939\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: ____ \u0915\u0925\u0928 \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u0915\u094b\u0921 \u0915\u094b \u0915\u0947\u0935\u0932 \u0924\u092c \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948 \u091c\u092c \u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0938\u094d\u0925\u093f\u0924\u093f \u0938\u0924\u094d\u092f \u0939\u094b\u0964     a) While     b) Break     c) If     d) Continue  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e Python \u092e\u0947\u0902 \u091a\u092f\u0928 \u0915\u0925\u0928 \u0915\u093e \u0909\u0926\u093e\u0939\u0930\u0923 \u0939\u0948?     a) if-else     b) for loop     c) while loop     d) return  </p> </li> <li> <p><code>if-else</code> \u0915\u0925\u0928 \u0915\u093e \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u090f\u0915 \u0938\u0942\u091a\u0940 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f \u0915\u0930\u0928\u093e     b) \u090f\u0915 \u0938\u094d\u0925\u093f\u0924\u093f \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0926\u094b \u0935\u093f\u0915\u0932\u094d\u092a\u094b\u0902 \u0915\u0947 \u092c\u0940\u091a \u091a\u092f\u0928 \u0915\u0930\u0928\u093e     c) \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u092c\u0928\u093e\u0928\u093e     d) \u0906\u0909\u091f\u092a\u0941\u091f \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0928\u093e  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: <code>for</code> loop \u0906\u092a\u0915\u094b \u090f\u0915 \u0928\u093f\u0930\u094d\u0926\u093f\u0937\u094d\u091f \u0938\u0902\u0916\u094d\u092f\u093e \u092e\u0947\u0902 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0915\u094b\u0921 \u0915\u0947 \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u0915\u094b \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u090f\u0915 flowchart \u0915\u093e \u0909\u092a\u092f\u094b\u0917 algorithm \u0915\u094b ____ \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     a) \u0932\u093e\u0917\u0942 \u0915\u0930\u0928\u093e     b) \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u093e     c) \u0926\u0943\u0936\u094d\u092f\u0924\u093e     d) Debug  </p> </li> </ol>"},{"location":"hi/chapters/qbank/#unit-5a-flow-of-control-and-functions","title":"Unit 5a: Flow of Control and Functions","text":"<ol> <li> <p>Python \u092e\u0947\u0902 \u0921\u093f\u092b\u093c\u0949\u0932\u094d\u091f \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u0923 \u092a\u094d\u0930\u0935\u093e\u0939 \u0938\u0902\u0930\u091a\u0928\u093e \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0905\u0928\u0941\u0915\u094d\u0930\u092e     b) \u091a\u092f\u0928     c) \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f     d) \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f  </p> </li> <li> <p>Python \u092e\u0947\u0902 \u090f\u0915 loop \u0915\u094b \u0938\u092e\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u0915\u0925\u0928 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) Continue     b) Break     c) Return     d) Pass  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: <code>while</code> loop \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0924\u092c \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u091c\u092c \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f\u092f\u094b\u0902 \u0915\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u091c\u094d\u091e\u093e\u0924 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964  </p> </li> <li> <p><code>continue</code> \u0915\u0925\u0928 \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948?     a) \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f \u0915\u094b \u0938\u092e\u093e\u092a\u094d\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u0905\u0917\u0932\u0947 \u092a\u0930 \u091c\u093e\u0924\u093e \u0939\u0948     b) \u092a\u0942\u0930\u0940 \u0924\u0930\u0939 \u0938\u0947 loop \u0915\u094b \u0938\u092e\u093e\u092a\u094d\u0924 \u0915\u0930\u0924\u093e \u0939\u0948     c) \u0938\u092d\u0940 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f\u092f\u094b\u0902 \u0915\u094b \u091b\u094b\u0921\u093c \u0926\u0947\u0924\u093e \u0939\u0948     d) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094b\u0908 \u0928\u0939\u0940\u0902  </p> </li> <li> <p>Python \u092e\u0947\u0902 \u090f\u0915 \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u094b \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u0915\u0941\u0902\u091c\u0940\u0936\u092c\u094d\u0926 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) function     b) def     c) for     d) while  </p> </li> <li> <p>\u0915\u093f\u0938 loop \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0924\u092c \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u091c\u092c \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f\u092f\u094b\u0902 \u0915\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u0939\u0932\u0947 \u0938\u0947 \u091c\u094d\u091e\u093e\u0924 \u0939\u094b?     a) while loop     b) for loop     c) if statement     d) switch  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Python \u092e\u0947\u0902 \u090f\u0915 \u092b\u093c\u0902\u0915\u094d\u0936\u0928 ____ \u0915\u0941\u0902\u091c\u0940\u0936\u092c\u094d\u0926 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     a) return     b) def     c) function     d) loop  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: Python \u092e\u0947\u0902 \u090f\u0915 \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u0908 \u092e\u093e\u0928 \u0932\u094c\u091f \u0938\u0915\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>\u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u092e\u0947\u0902 <code>return</code> \u0915\u0925\u0928 \u0915\u093e \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0938\u0947 \u092c\u093e\u0939\u0930 \u0928\u093f\u0915\u0932\u0928\u093e \u0914\u0930 \u090f\u0915 \u092e\u093e\u0928 \u0932\u094c\u091f\u093e\u0928\u093e     b) \u090f\u0915 loop \u0938\u0947 \u092c\u093e\u0939\u0930 \u0928\u093f\u0915\u0932\u0928\u093e     c) \u090f\u0915 \u0938\u0902\u0926\u0947\u0936 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0928\u093e     d) \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u094b \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0928\u093e  </p> </li> <li> <p>\u0915\u094c\u0928 \u0938\u093e \u0915\u0925\u0928 \u0915\u094b\u0921 \u0915\u0947 \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u0915\u094b \u092c\u093e\u0930-\u092c\u093e\u0930 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948?     a) If statement     b) Function     c) Loop     d) Return  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: <code>if-else</code> \u0915\u0925\u0928 Python \u092e\u0947\u0902 ____ \u0915\u093e \u090f\u0915 \u0909\u0926\u093e\u0939\u0930\u0923 \u0939\u0948\u0964     a) \u0905\u0928\u0941\u0915\u094d\u0930\u092e     b) \u091a\u092f\u0928     c) \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f     d) \u0932\u0942\u092a\u093f\u0902\u0917  </p> </li> <li> <p>Python \u092e\u0947\u0902 <code>break</code> \u0915\u0925\u0928 \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948?     a) \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u094b \u0938\u092e\u093e\u092a\u094d\u0924 \u0915\u0930\u0924\u093e \u0939\u0948     b) \u092a\u0942\u0930\u0940 \u0924\u0930\u0939 \u0938\u0947 loop \u0915\u094b \u0938\u092e\u093e\u092a\u094d\u0924 \u0915\u0930\u0924\u093e \u0939\u0948     c) \u0905\u0917\u0932\u0940 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f \u0915\u0947 \u0932\u093f\u090f \u091c\u093e\u0930\u0940 \u0930\u0916\u0924\u093e \u0939\u0948     d) \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u094b \u0930\u094b\u0915\u0924\u093e \u0939\u0948  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u092c\u0921\u093c\u0947 \u0938\u092e\u0938\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u091b\u094b\u091f\u0947, \u092a\u094d\u0930\u092c\u0902\u0927\u0928\u0940\u092f \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u092e\u0947\u0902 \u0935\u093f\u092d\u093e\u091c\u093f\u0924 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964  </p> </li> <li> <p>Python \u092e\u0947\u0902 \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u094b \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u093e \u0938\u0939\u0940 \u0938\u093f\u0902\u091f\u0948\u0915\u094d\u0938 \u0915\u094d\u092f\u093e \u0939\u0948?     a) def function_name():     b) function function_name():     c) return function_name():     d) def function_name[]  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: ____ loop \u090f\u0915 \u0928\u093f\u0930\u094d\u0926\u093f\u0937\u094d\u091f \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u0947 \u0932\u093f\u090f \u0915\u094b\u0921 \u0915\u0947 \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u0915\u094b \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964     a) while     b) for     c) if-else     d) function  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e Python \u092e\u0947\u0902 \u0932\u0942\u092a \u0938\u0902\u0930\u091a\u0928\u093e \u0915\u093e \u090f\u0915 \u0909\u0926\u093e\u0939\u0930\u0923 \u0928\u0939\u0940\u0902 \u0939\u0948?     a) for loop     b) if-else statement     c) while loop     d) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094b\u0908 \u0928\u0939\u0940\u0902  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: <code>if</code> \u0915\u0925\u0928 \u0915\u094b \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u0947 \u092d\u0940\u0924\u0930 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e? <pre><code>for i in range(3):\n    print(i)\n</code></pre>     a) 1, 2, 3     b) 0, 1, 2     c) 0, 1, 2, 3     d) 1, 2  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Python \u092e\u0947\u0902 loop \u0938\u0947 \u092c\u093e\u0939\u0930 \u0928\u093f\u0915\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f ____ \u0915\u0925\u0928 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     a) return     b) break     c) continue     d) def  </p> </li> <li> <p>Python loops \u092e\u0947\u0902 <code>continue</code> \u0915\u0925\u0928 \u0915\u093e \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f \u0915\u0947 \u0936\u0947\u0937 \u092d\u093e\u0917 \u0915\u094b \u091b\u094b\u0921\u093c \u0926\u0947\u0928\u093e \u0914\u0930 \u0905\u0917\u0932\u0947 \u092a\u0930 \u091c\u093e\u0928\u093e     b) \u092a\u0942\u0930\u0940 \u0924\u0930\u0939 \u0938\u0947 loop \u0915\u094b \u0924\u094b\u0921\u093c\u0928\u093e     c) \u090f\u0915 \u0928\u092f\u093e \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0928\u093e     d) \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u094b \u0938\u092e\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u093e  </p> </li> </ol>"},{"location":"hi/chapters/qbank/#unit-5b-strings-and-lists","title":"Unit 5b: Strings and Lists","text":"<ol> <li> <p>Python \u092e\u0947\u0902 \u090f\u0915 string \u0915\u0948\u0938\u0947 \u092c\u0928\u093e\u0908 \u091c\u093e\u0924\u0940 \u0939\u0948?     a) \u091a\u094c\u0915\u094b\u0930 \u092c\u094d\u0930\u0948\u0915\u0947\u091f\u094d\u0938 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947     b) \u0915\u0930\u094d\u0932\u0940 \u092c\u094d\u0930\u0948\u0915\u0947\u091f\u094d\u0938 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947     c) \u0909\u0926\u094d\u0927\u0930\u0923 \u091a\u093f\u0939\u094d\u0928\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947     d) \u0915\u094b\u0908 \u0935\u093f\u0936\u0947\u0937 \u0938\u093f\u0902\u091f\u0948\u0915\u094d\u0938 \u0928\u0939\u0940\u0902 \u0939\u0948  </p> </li> <li> <p>\u0915\u094c\u0928 \u0938\u093e \u0935\u093f\u0927\u093f \u090f\u0915 string \u092e\u0947\u0902 \u0938\u092d\u0940 \u0905\u0915\u094d\u0937\u0930\u094b\u0902 \u0915\u094b \u091b\u094b\u091f\u0947 \u0905\u0915\u094d\u0937\u0930\u094b\u0902 \u092e\u0947\u0902 \u092c\u0926\u0932\u0924\u0940 \u0939\u0948?     a) lower()     b) upper()     c) title()     d) capitalize()  </p> </li> <li> <p>Python \u092e\u0947\u0902 list \u0915\u094b \u0915\u0948\u0938\u0947 \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) \u0915\u094b\u0937\u094d\u0920\u0915\u094b\u0902 \u092e\u0947\u0902     b) \u0915\u0930\u094d\u0932\u0940 \u092c\u094d\u0930\u0948\u0915\u0947\u091f\u094d\u0938 \u092e\u0947\u0902     c) \u091a\u094c\u0915\u094b\u0930 \u092c\u094d\u0930\u0948\u0915\u0947\u091f\u094d\u0938 \u092e\u0947\u0902     d) \u0909\u0926\u094d\u0927\u0930\u0923 \u091a\u093f\u0939\u094d\u0928\u094b\u0902 \u092e\u0947\u0902  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: \u090f\u0915 string \u0915\u094b index \u0926\u094d\u0935\u093e\u0930\u093e \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>Python \u092e\u0947\u0902 list \u092e\u0947\u0902 \u0924\u0924\u094d\u0935\u094b\u0902 \u0915\u094b \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u0940 \u0935\u093f\u0927\u093f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) append()     b) add()     c) insert()     d) extend()  </p> </li> <li> <p>\u0915\u094c\u0928 \u0938\u093e \u0935\u093f\u0927\u093f \u090f\u0915 string \u092e\u0947\u0902 \u0938\u092d\u0940 \u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928\u094b\u0902 \u0915\u094b \u0939\u091f\u093e \u0926\u0947\u0924\u0940 \u0939\u0948?     a) strip()     b) trim()     c) clear()     d) remove()  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: Python \u092e\u0947\u0902 strings \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f \u0939\u094b\u0924\u0940 \u0939\u0948\u0902\u0964  </p> </li> <li> <p>Python \u092e\u0947\u0902 \u090f\u0915 list \u0915\u0940 \u0932\u0902\u092c\u093e\u0908 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u0940 \u0935\u093f\u0927\u093f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) count()     b) length()     c) len()     d) size()  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Python \u092e\u0947\u0902 \u090f\u0915 list ____ \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u0947 \u0924\u0924\u094d\u0935\u094b\u0902 \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u093f\u0924 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948\u0964     a) \u0915\u0947\u0935\u0932 \u090f\u0915     b) \u0915\u0947\u0935\u0932 \u0938\u0902\u0916\u094d\u092f\u093e     c) \u0935\u093f\u092d\u093f\u0928\u094d\u0928     d) \u0915\u094b\u0908 \u0928\u0939\u0940\u0902  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e string slicing \u0915\u093e \u0909\u0926\u093e\u0939\u0930\u0923 \u0928\u0939\u0940\u0902 \u0939\u0948?     a) my_string[0:5]     b) my_string[-1]     c) my_string[5:]     d) my_string[5][3]  </p> </li> <li> <p>Python \u092e\u0947\u0902 \u090f\u0915 list \u0915\u094b \u0938\u0949\u0930\u094d\u091f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u0940 \u0935\u093f\u0927\u093f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) order()     b) sort()     c) arrange()     d) organize()  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: Python \u092e\u0947\u0902 \u090f\u0915 list \u0915\u094b nested lists \u092e\u0947\u0902 \u0938\u0902\u0917\u094d\u0930\u0939\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>\u090f\u0915 string \u092e\u0947\u0902 \u0938\u0947 \u092a\u0939\u0932\u0947 \u0905\u0915\u094d\u0937\u0930 \u0915\u094b \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u0940 syntax \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) string[0]     b) string(0)     c) string{0}     d) string.0  </p> </li> <li> <p>Python \u092e\u0947\u0902 list \u0915\u0947 \u092d\u0940\u0924\u0930 \u090f\u0915 \u0924\u0924\u094d\u0935 \u0915\u094b \u0939\u091f\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u0940 \u0935\u093f\u0927\u093f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) delete()     b) remove()     c) discard()     d) pop()  </p> </li> <li> <p>\u0915\u094c\u0928 \u0938\u093e string \u0935\u093f\u0927\u093f \u090f\u0915 substring \u0915\u0940 \u0909\u092a\u0938\u094d\u0925\u093f\u0924\u093f \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0924\u093e \u0939\u0948?     a) contains()     b) find()     c) locate()     d) index()  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: Python \u092e\u0947\u0902 list \u0915\u0947 \u092d\u0940\u0924\u0930 \u090f\u0915 \u0924\u0924\u094d\u0935 \u0915\u0940 \u0938\u094d\u0925\u093f\u0924\u093f \u0915\u094b \u092a\u093e\u0928\u093e \u0938\u0902\u092d\u0935 \u0928\u0939\u0940\u0902 \u0939\u0948\u0964  </p> </li> <li> <p>\u090f\u0915 string \u0915\u094b uppercase \u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u0940 \u0935\u093f\u0927\u093f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) upper()     b) capitalize()     c) title()     d) convert()  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Python \u092e\u0947\u0902 list \u0915\u094b ____ \u0926\u094d\u0935\u093e\u0930\u093e \u091a\u093f\u0924\u094d\u0930\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     a) ()     b) {}     c) []     d) \"\"  </p> </li> <li> <p>Python \u092e\u0947\u0902 list \u0915\u0947 \u0924\u0924\u094d\u0935\u094b\u0902 \u0915\u094b \u0909\u0932\u091f\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u0940 \u0935\u093f\u0927\u093f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) reverse()     b) flip()     c) invert()     d) change()  </p> </li> <li> <p>\u0938\u0939\u0940 \u092f\u093e \u0917\u0932\u0924: Python \u092e\u0947\u0902 strings \u0915\u094b \u092c\u0926\u0932\u0928\u093e \u0938\u0902\u092d\u0935 \u0939\u0948\u0964  </p> </li> </ol>"},{"location":"hi/chapters/qbank/#unit-5c-tuples-dictionaries","title":"Unit 5c: Tuples \u0914\u0930 Dictionaries","text":"<ol> <li> <p>\u0906\u092a Python \u092e\u0947\u0902 \u090f\u0915 tuple \u0915\u0948\u0938\u0947 \u092c\u0928\u093e\u0924\u0947 \u0939\u0948\u0902?     a) Square brackets \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947     b) Curly braces \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947     c) Parentheses \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947     d) Quotes \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947  </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: Python \u092e\u0947\u0902 tuples mutable \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e? <pre><code>my_tuple = (1, 2, 3)\nprint(my_tuple[1])\n</code></pre>     a) 1     b) 2     c) 3     d) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094b\u0908 \u0928\u0939\u0940\u0902  </p> </li> <li> <p>Python \u092e\u0947\u0902 key-value pair \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u093e \u0938\u0902\u092f\u094b\u091c\u0928     b) \u090f\u0915 dictionary \u092e\u0947\u0902 \u090f\u0915 key \u0914\u0930 \u0909\u0938\u0915\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 value \u0915\u093e \u0938\u0902\u092f\u094b\u091c\u0928     c) \u090f\u0915 \u0932\u0942\u092a     d) \u0926\u094b \u0924\u0924\u094d\u0935\u094b\u0902 \u0915\u093e tuple  </p> </li> <li> <p>dictionary \u092e\u0947\u0902 \u090f\u0915 \u0928\u092f\u093e key-value pair \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e method \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) append()     b) insert()     c) update()     d) add()  </p> </li> <li> <p>\u0916\u093e\u0932\u0940 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Python \u092e\u0947\u0902 tuples ____ \u0939\u094b\u0924\u0947 \u0939\u0948\u0902, \u0905\u0930\u094d\u0925\u093e\u0924\u094d \u0909\u0928\u0915\u0947 \u0915\u0902\u091f\u0947\u0902\u091f \u0915\u094b \u0928\u093f\u0930\u094d\u092e\u093e\u0923 \u0915\u0947 \u092c\u093e\u0926 \u092c\u0926\u0932\u093e \u0928\u0939\u0940\u0902 \u091c\u093e \u0938\u0915\u0924\u093e\u0964     a) Mutable     b) Immutable     c) Static     d) Dynamic  </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: \u090f\u0915 dictionary key \u0905\u0926\u094d\u0935\u093f\u0924\u0940\u092f \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f\u0964  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e? <pre><code>my_dict = {\"name\": \"Alice\", \"age\": 25}\nprint(my_dict[\"name\"])\n</code></pre>     a) Alice     b) 25     c) name     d) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094b\u0908 \u0928\u0939\u0940\u0902  </p> </li> <li> <p>\u0916\u093e\u0932\u0940 dictionary \u092c\u0928\u093e\u0928\u0947 \u0915\u093e \u0938\u0939\u0940 \u0924\u0930\u0940\u0915\u093e \u0915\u094d\u092f\u093e \u0939\u0948?     a) <code>[]</code>     b) <code>()</code>     c) <code>{}</code>     d) <code>\"\"</code> </p> </li> <li> <p>\u0916\u093e\u0932\u0940 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: <code>len()</code> function tuple \u092e\u0947\u0902 \u0924\u0924\u094d\u0935\u094b\u0902 \u0915\u0940 ____ \u0932\u094c\u091f\u093e\u0924\u093e \u0939\u0948\u0964     a) \u0915\u0941\u0932 \u0938\u0902\u0916\u094d\u092f\u093e     b) \u092a\u0939\u0932\u093e \u0924\u0924\u094d\u0935     c) \u0905\u0902\u0924\u093f\u092e \u0924\u0924\u094d\u0935     d) \u092f\u094b\u0917  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e Python \u092e\u0947\u0902 \u090f\u0915 \u092e\u093e\u0928\u094d\u092f tuple \u0939\u0948?     a) <code>(1, 2, 3)</code>     b) <code>[1, 2, 3]</code>     c) <code>{1, 2, 3}</code>     d) <code>\"1, 2, 3\"</code> </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: \u090f\u0915 dictionary key Python \u092e\u0947\u0902 \u090f\u0915 list \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e? <pre><code>my_tuple = (10, 20, 30, 40)\nprint(my_tuple[-1])\n</code></pre>     a) 10     b) 20     c) 40     d) 30  </p> </li> <li> <p>Python \u092e\u0947\u0902 dictionary \u0938\u0947 \u090f\u0915 \u0924\u0924\u094d\u0935 \u0939\u091f\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e method \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     a) pop()     b) append()     c) remove()     d) discard()  </p> </li> <li> <p>\u0916\u093e\u0932\u0940 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u090f\u0915 tuple \u090f\u0915 list \u0915\u0947 \u0938\u092e\u093e\u0928 \u0939\u0948 \u0932\u0947\u0915\u093f\u0928 ____ \u0939\u094b\u0924\u093e \u0939\u0948\u0964     a) Mutable     b) Immutable     c) \u092c\u0926\u0932\u0928\u0947 \u092f\u094b\u0917\u094d\u092f     d) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094b\u0908 \u0928\u0939\u0940\u0902  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u0948? <pre><code>my_dict = {\"name\": \"John\", \"age\": 30}\nprint(len(my_dict))\n</code></pre>     a) 1     b) 2     c) 3     d) 4  </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: Tuples \u0915\u0908 data types \u0915\u094b \u0938\u094d\u091f\u094b\u0930 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u094d\u092f\u093e \u0939\u0948? <pre><code>my_dict = {\"name\": \"John\", \"age\": 30}\nmy_dict[\"age\"] = 31\nprint(my_dict[\"age\"])\n</code></pre>     a) 30     b) 31     c) Error     d) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094b\u0908 \u0928\u0939\u0940\u0902  </p> </li> <li> <p>\u0906\u092a tuple \u0915\u0947 \u092a\u0939\u0932\u0947 \u0924\u0924\u094d\u0935 \u0915\u094b \u0915\u0948\u0938\u0947 \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902?     a) tuple[0]     b) tuple[1]     c) tuple[-1]     d) tuple.first()  </p> </li> <li> <p>\u0916\u093e\u0932\u0940 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: dictionary \u092e\u0947\u0902 ____ method \u0938\u092d\u0940 keys \u0915\u0940 \u0938\u0942\u091a\u0940 \u0932\u094c\u091f\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     a) keys()     b) items()     c) values()     d) pop()  </p> </li> </ol>"},{"location":"hi/chapters/qbank/#unit-6","title":"Unit 6: \u0938\u093e\u092e\u093e\u091c\u093f\u0915 \u092a\u094d\u0930\u092d\u093e\u0935","text":"<ol> <li> <p>Digital footprint \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0906\u092a\u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e \u0915\u0939\u093e\u0902 \u0915\u0939\u093e\u0902 \u0917\u090f \u0909\u0938\u0915\u093e \u092d\u094c\u0924\u093f\u0915 \u0928\u093f\u0936\u093e\u0928     b) \u0906\u092a\u0915\u0940 \u0911\u0928\u0932\u093e\u0907\u0928 \u0917\u0924\u093f\u0935\u093f\u0927\u093f\u092f\u094b\u0902 \u0926\u094d\u0935\u093e\u0930\u093e \u091b\u094b\u0921\u093c\u093e \u0917\u092f\u093e \u0921\u0947\u091f\u093e \u0915\u093e \u091f\u094d\u0930\u0947\u0932     c) \u0906\u092a\u0915\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0940 \u0938\u0941\u0930\u0915\u094d\u0937\u093e \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0935\u093f\u0927\u093f     d) \u090f\u0915 \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e  </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: Phishing \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e cybercrime \u0939\u0948 \u091c\u093f\u0938\u092e\u0947\u0902 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u094b \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u092a\u094d\u0930\u0915\u091f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0927\u094b\u0916\u093e \u0926\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>\u092d\u093e\u0930\u0924\u0940\u092f IT \u0905\u0927\u093f\u0928\u093f\u092f\u092e \u0915\u093e \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u094b \u0935\u093f\u0928\u093f\u092f\u092e\u093f\u0924 \u0915\u0930\u0928\u093e     b) \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u094b cybercrime \u0938\u0947 \u092c\u091a\u093e\u0928\u093e     c) \u0921\u0947\u091f\u093e \u092d\u0902\u0921\u093e\u0930\u0923 \u092c\u0922\u093c\u093e\u0928\u093e     d) \u092b\u093c\u093e\u092f\u0930\u0935\u0949\u0932 \u0938\u094d\u0925\u093e\u092a\u093f\u0924 \u0915\u0930\u0928\u093e  </p> </li> <li> <p>IPR \u0915\u093e \u092a\u0942\u0930\u093e \u0928\u093e\u092e \u0915\u094d\u092f\u093e \u0939\u0948?     a) Intellectual Property Rights     b) Internet Privacy Rights     c) Information Processing Rules     d) Internet Protocol Registry  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e cybercrime \u0915\u093e \u0909\u0926\u093e\u0939\u0930\u0923 \u0928\u0939\u0940\u0902 \u0939\u0948?     a) Phishing     b) Cyberbullying     c) Hacking     d) Copyright infringement  </p> </li> <li> <p>\u0916\u093e\u0932\u0940 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Digital etiquette \u0915\u093e \u0905\u0930\u094d\u0925 \u0939\u0948 ____ \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u0909\u091a\u093f\u0924 \u0914\u0930 \u091c\u093f\u092e\u094d\u092e\u0947\u0926\u093e\u0930 \u0935\u094d\u092f\u0935\u0939\u093e\u0930\u0964     a) Cars     b) Social media     c) Schools     d) Roads  </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: \u0938\u094d\u0915\u094d\u0930\u0940\u0928 \u0926\u094d\u0935\u093e\u0930\u093e \u0909\u0924\u094d\u0938\u0930\u094d\u091c\u093f\u0924 \u0928\u0940\u0932\u093e \u092a\u094d\u0930\u0915\u093e\u0936 \u0928\u0940\u0902\u0926 \u0915\u0947 \u092a\u0948\u091f\u0930\u094d\u0928 \u092e\u0947\u0902 \u092c\u093e\u0927\u093e \u0921\u093e\u0932 \u0938\u0915\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e cyberbullying \u0915\u093e \u092a\u094d\u0930\u092d\u093e\u0935 \u0939\u0948?     a) \u0909\u0924\u094d\u092a\u093e\u0926\u0915\u0924\u093e \u092e\u0947\u0902 \u0935\u0943\u0926\u094d\u0927\u093f     b) \u092c\u0947\u0939\u0924\u0930 \u092e\u093e\u0928\u0938\u093f\u0915 \u0938\u094d\u0935\u093e\u0938\u094d\u0925\u094d\u092f     c) \u0909\u0924\u094d\u092a\u0940\u0921\u093c\u0928 \u0914\u0930 \u092d\u093e\u0935\u0928\u093e\u0924\u094d\u092e\u0915 \u0924\u0928\u093e\u0935     d) \u0938\u093e\u092e\u093e\u091c\u093f\u0915 \u0915\u094c\u0936\u0932 \u092e\u0947\u0902 \u0938\u0941\u0927\u093e\u0930  </p> </li> <li> <p>\u0924\u0915\u0928\u0940\u0915 \u0915\u0947 \u0932\u0902\u092c\u0947 \u0938\u092e\u092f \u0924\u0915 \u0909\u092a\u092f\u094b\u0917 \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u090f\u0915 \u0938\u093e\u092e\u093e\u0928\u094d\u092f \u0938\u094d\u0935\u093e\u0938\u094d\u0925\u094d\u092f \u091c\u094b\u0916\u093f\u092e \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u092a\u0940\u0920 \u092e\u0947\u0902 \u0926\u0930\u094d\u0926     b) \u0938\u093f\u0930\u0926\u0930\u094d\u0926     c) \u0906\u0901\u0916\u094b\u0902 \u092e\u0947\u0902 \u0924\u0928\u093e\u0935     d) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u0938\u092d\u0940  </p> </li> <li> <p>\u0916\u093e\u0932\u0940 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u092d\u093e\u0930\u0924 \u092e\u0947\u0902 ____ \u0905\u0927\u093f\u0928\u093f\u092f\u092e cybercrime \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u092e\u0941\u0926\u094d\u0926\u094b\u0902 \u0915\u094b \u0938\u0902\u092c\u094b\u0927\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964     a) IT     b) Digital Privacy     c) Copyright     d) Data Protection  </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: Hacking \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u093f\u0938\u094d\u091f\u092e \u092e\u0947\u0902 \u0905\u0928\u0927\u093f\u0915\u0943\u0924 \u092a\u094d\u0930\u0935\u0947\u0936 \u0939\u0948\u0964  </p> </li> <li> <p>\"Phishing\" \u0936\u092c\u094d\u0926 \u0915\u093e \u0915\u094d\u092f\u093e \u0905\u0930\u094d\u0925 \u0939\u0948?     a) \u090f\u0915 cybercrime \u091c\u0939\u093e\u0901 \u0939\u092e\u0932\u093e\u0935\u0930 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u094b \u0938\u0902\u0935\u0947\u0926\u0928\u0936\u0940\u0932 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0926\u0947\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0927\u094b\u0916\u093e \u0926\u0947\u0924\u0947 \u0939\u0948\u0902     b) \u091c\u0902\u0915 \u0908\u092e\u0947\u0932 \u092d\u0947\u091c\u0928\u093e     c) \u0911\u0928\u0932\u093e\u0907\u0928 \u0916\u0947\u0932 \u0916\u0947\u0932\u0928\u093e     d) \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0928\u093e  </p> </li> <li> <p>Intellectual Property Rights (IPR) \u0915\u093f\u0938 \u091a\u0940\u091c \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u0948?     a) \u092d\u094c\u0924\u093f\u0915 \u0938\u0902\u092a\u0924\u094d\u0924\u093f     b) \u092e\u0928 \u0915\u0940 \u0930\u091a\u0928\u093e\u090f\u0901     c) \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0921\u093f\u091c\u093c\u093e\u0907\u0928     d) \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u0938\u0941\u0930\u0915\u094d\u0937\u093e  </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e etiquette \u092e\u0947\u0902 \u0938\u092e\u094d\u092e\u093e\u0928\u091c\u0928\u0915 \u0939\u094b\u0928\u093e \u0914\u0930 \u0905\u092a\u092e\u093e\u0928\u091c\u0928\u0915 \u092d\u093e\u0937\u093e \u0938\u0947 \u092c\u091a\u0928\u093e \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0964  </p> </li> <li> <p>cybercrime \u0938\u0947 \u0916\u0941\u0926 \u0915\u094b \u092c\u091a\u093e\u0928\u0947 \u0915\u093e \u090f\u0915 \u0924\u0930\u0940\u0915\u093e \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u092e\u091c\u092c\u0942\u0924 \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e     b) \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u0921\u0947\u091f\u093e \u0915\u094b \u0938\u093e\u0930\u094d\u0935\u091c\u0928\u093f\u0915 \u0930\u0942\u092a \u0938\u0947 \u0938\u093e\u091d\u093e \u0915\u0930\u0928\u093e     c) phishing \u0908\u092e\u0947\u0932 \u0915\u0940 \u0905\u0928\u0926\u0947\u0916\u0940 \u0915\u0930\u0928\u093e     d) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094b\u0908 \u0928\u0939\u0940\u0902  </p> </li> <li> <p>\u0916\u093e\u0932\u0940 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u0932\u0902\u092c\u0947 \u0938\u092e\u092f \u0924\u0915 \u092c\u093f\u0928\u093e \u092c\u094d\u0930\u0947\u0915 \u0915\u0947 \u0924\u0915\u0928\u0940\u0915 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u0947 \u0938\u0947 ____ \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964     a) \u0926\u0943\u0937\u094d\u091f\u093f \u092e\u0947\u0902 \u0938\u0941\u0927\u093e\u0930     b) \u0936\u093e\u0930\u0940\u0930\u093f\u0915 \u0924\u0928\u093e\u0935 \u0914\u0930 \u0938\u094d\u0935\u093e\u0938\u094d\u0925\u094d\u092f \u0938\u092e\u0938\u094d\u092f\u093e\u090f\u0901     c) \u092e\u093e\u0928\u0938\u093f\u0915 \u0935\u093f\u0936\u094d\u0930\u093e\u092e     d) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094b\u0908 \u0928\u0939\u0940\u0902  </p> </li> <li> <p>\u0938\u094d\u0915\u094d\u0930\u0940\u0928 \u0915\u0947 \u0909\u092a\u092f\u094b\u0917 \u0915\u0947 \u0926\u094c\u0930\u093e\u0928 \u0906\u0901\u0916\u094b\u0902 \u0915\u0947 \u0924\u0928\u093e\u0935 \u0915\u094b \u0915\u092e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0928\u0941\u0936\u0902\u0938\u093f\u0924 \u0928\u093f\u092f\u092e \u0915\u094d\u092f\u093e \u0939\u0948?     a) 10-10-10 Rule     b) 20-20-20 Rule     c) 30-30-30 Rule     d) 40-40-40 Rule  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e cybercrime \u0915\u093e \u092a\u094d\u0930\u0915\u093e\u0930 \u0939\u0948?     a) Hacking     b) Phishing     c) Cyberbullying     d) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u0938\u092d\u0940  </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: Digital footprints \u0938\u094d\u0925\u093e\u092f\u0940 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0909\u0928\u094d\u0939\u0947\u0902 \u0939\u091f\u093e\u0928\u093e \u092e\u0941\u0936\u094d\u0915\u093f\u0932 \u0939\u094b\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>Intellectual property rights \u0915\u093e \u0932\u0915\u094d\u0937\u094d\u092f \u0915\u094d\u092f\u093e \u0939\u0948?     a) \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0909\u092a\u092f\u094b\u0917 \u0915\u094b \u0930\u094b\u0915\u0928\u093e     b) \u0930\u091a\u0928\u093e\u0915\u093e\u0930\u094b\u0902 \u0914\u0930 \u0928\u0935\u092a\u094d\u0930\u0935\u0930\u094d\u0924\u0915\u094b\u0902 \u0915\u0947 \u0905\u0927\u093f\u0915\u093e\u0930\u094b\u0902 \u0915\u0940 \u0930\u0915\u094d\u0937\u093e \u0915\u0930\u0928\u093e     c) \u0938\u0930\u0915\u093e\u0930\u0940 \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u0923 \u092c\u0922\u093c\u093e\u0928\u093e     d) \u0921\u0947\u091f\u093e \u092d\u0902\u0921\u093e\u0930\u0923 \u0915\u093e \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0915\u0930\u0928\u093e  </p> </li> </ol>"},{"location":"hi/chapters/qbank/#unit-7-practical-questions","title":"Unit 7: Practical Questions","text":"<ol> <li>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e? <pre><code>print(\"Hello computer world!\")\n</code></pre>     a) Hello computer world!     b) hello computer world     c) Hello Computer World!     d</li> </ol> <p>) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094b\u0908 \u0928\u0939\u0940\u0902  </p> <ol> <li> <p>Python \u092e\u0947\u0902 <code>5 + 7</code> \u0915\u093e \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u094d\u092f\u093e \u0939\u0948?     a) 12     b) 10     c) 13     d) 11  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e? <pre><code>num1 = 10\nnum2 = 5\nprint(num1 - num2)\n</code></pre>     a) 5     b) 15     c) -5     d) 0  </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: <code>math.sqrt()</code> function \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u090f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u093e \u0935\u0930\u094d\u0917\u092e\u0942\u0932 \u0928\u093f\u0915\u093e\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e? <pre><code>a = 5\nb = 10\na, b = b, a\nprint(a, b)\n</code></pre>     a) 5 10     b) 10 5     c) 0 0     d) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094b\u0908 \u0928\u0939\u0940\u0902  </p> </li> <li> <p>\u0915\u093f\u0932\u094b\u092e\u0940\u091f\u0930 \u0938\u0947 \u092e\u0940\u0932 \u092e\u0947\u0902 \u092c\u0926\u0932\u0928\u0947 \u0915\u093e \u0915\u093e\u0930\u0915 \u0915\u094d\u092f\u093e \u0939\u0948?     a) 0.621371     b) 1.60934     c) 1.1009     d) 0.50505  </p> </li> <li> <p>Celsius \u0915\u094b Fahrenheit \u092e\u0947\u0902 \u092c\u0926\u0932\u0928\u0947 \u0915\u093e \u0938\u0942\u0924\u094d\u0930 \u0915\u094d\u092f\u093e \u0939\u0948?     a) (Celsius * 9/5) + 32     b) (Celsius * 5/9) + 32     c) (Celsius - 32) * 9/5     d) (Celsius * 9/5) - 32  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f 4 \u0914\u0930 6 \u0915\u093e LCM \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e? <pre><code>print(find_lcm(4, 6))\n</code></pre>     a) 6     b) 12     c) 8     d) 24  </p> </li> <li> <p>\u0938\u0924\u094d\u092f \u092f\u093e \u0905\u0938\u0924\u094d\u092f: <code>while</code> \u0932\u0942\u092a \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u092a\u0939\u0932\u0947 10 \u092a\u094d\u0930\u093e\u0915\u0943\u0924\u093f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>\u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e? <pre><code>my_list = [1, 2, 3]\nmy_list.append(4)\nprint(my_list)\n</code></pre>     a) [1, 2, 3, 4]     b) [4, 3, 2, 1]     c) [1, 2, 4]     d) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094b\u0908 \u0928\u0939\u0940\u0902  </p> </li> </ol>"},{"location":"hi/chapters/qbank_ans/","title":"\u0909\u0924\u094d\u0924\u0930 \u092a\u0941\u0938\u094d\u0924\u093f\u0915\u093e: \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0935\u093f\u091c\u094d\u091e\u093e\u0928 \u0914\u0930 \u0921\u0947\u091f\u093e \u0935\u093f\u091c\u094d\u091e\u093e\u0928 \u0909\u091a\u094d\u091a \u0935\u093f\u0926\u094d\u092f\u093e\u0932\u092f \u0915\u0947 \u091b\u093e\u0924\u094d\u0930\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f","text":""},{"location":"hi/chapters/qbank_ans/#1","title":"\u092f\u0942\u0928\u093f\u091f 1: \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u093f\u0938\u094d\u091f\u092e","text":"<ol> <li> <p>b) \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u093e \u092e\u0938\u094d\u0924\u093f\u0937\u094d\u0915    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: CPU \u0915\u094b \u0905\u0915\u094d\u0938\u0930 \u092e\u0938\u094d\u0924\u093f\u0937\u094d\u0915 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0938\u0902\u0926\u0930\u094d\u092d\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u0915\u094d\u092f\u094b\u0902\u0915\u093f \u092f\u0939 \u0938\u092d\u0940 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u094b \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>b) \u0915\u0940\u092c\u094b\u0930\u094d\u0921    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0915\u0940\u092c\u094b\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092e\u0947\u0902 \u0921\u0947\u091f\u093e \u0907\u0928\u092a\u0941\u091f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>a) \u092a\u094d\u0930\u093e\u0925\u092e\u093f\u0915 \u092e\u0947\u092e\u094b\u0930\u0940 (RAM)    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: RAM \u0935\u093e\u0937\u094d\u092a\u0936\u0940\u0932 \u0939\u094b\u0924\u0940 \u0939\u0948, \u0905\u0930\u094d\u0925\u093e\u0924\u094d \u091c\u092c \u092a\u093e\u0935\u0930 \u092c\u0902\u0926 \u0939\u094b\u0924\u0940 \u0939\u0948 \u0924\u094b \u092f\u0939 \u0905\u092a\u0928\u093e \u0921\u0947\u091f\u093e \u0916\u094b \u0926\u0947\u0924\u0940 \u0939\u0948\u0964</p> </li> <li> <p>c) \u0935\u0948\u0915\u094d\u092f\u0942\u092e \u091f\u094d\u092f\u0942\u092c    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092a\u0939\u0932\u0947 \u092a\u0940\u0922\u093c\u0940 \u0915\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u092e\u0947\u0902 \u0938\u0930\u094d\u0915\u093f\u091f\u094d\u0930\u0940 \u0915\u0947 \u0932\u093f\u090f \u0935\u0948\u0915\u094d\u092f\u0942\u092e \u091f\u094d\u092f\u0942\u092c \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0925\u093e\u0964</p> </li> <li> <p>b) \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0915\u094b \u091a\u0932\u093e\u0928\u0947 \u0914\u0930 \u0938\u0902\u0938\u093e\u0927\u0928\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0938\u093f\u0938\u094d\u091f\u092e \u0938\u0949\u092b\u094d\u091f\u0935\u0947\u092f\u0930 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0947 \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0914\u0930 \u0905\u0928\u094d\u092f \u0938\u0902\u0938\u093e\u0927\u0928\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>d) \u091a\u094c\u0925\u0940 \u092a\u0940\u0922\u093c\u0940    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u091a\u094c\u0925\u0940 \u092a\u0940\u0922\u093c\u0940 \u0915\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u092e\u0947\u0902 \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092a\u094d\u0930\u094b\u0938\u0947\u0938\u0930 \u092a\u0947\u0936 \u0915\u093f\u090f \u0917\u090f \u0925\u0947\u0964</p> </li> <li> <p>c) Java    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Java \u090f\u0915 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u092d\u093e\u0937\u093e \u0939\u0948, \u0928 \u0915\u093f \u090f\u0915 \u0911\u092a\u0930\u0947\u091f\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e\u0964</p> </li> <li> <p>b) \u0938\u093f\u0938\u094d\u091f\u092e \u0938\u0949\u092b\u094d\u091f\u0935\u0947\u092f\u0930    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0938\u093f\u0938\u094d\u091f\u092e \u0938\u0949\u092b\u094d\u091f\u0935\u0947\u092f\u0930 \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0915\u093e \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0915\u0930\u0928\u0947 \u0914\u0930 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u091a\u0932\u093e\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>b) \u0905\u0902\u0915\u0917\u0923\u093f\u0924\u0940\u092f \u0924\u0930\u094d\u0915 \u0907\u0915\u093e\u0908    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: ALU CPU \u092e\u0947\u0902 \u0905\u0902\u0915\u0917\u0923\u093f\u0924\u0940\u092f \u0914\u0930 \u0924\u093e\u0930\u094d\u0915\u093f\u0915 \u0938\u0902\u091a\u093e\u0932\u0928 \u0915\u094b \u0938\u0902\u092d\u093e\u0932\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>c) OS \u0915\u0947 \u0938\u093e\u0925 \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u0915\u0947 \u0938\u0902\u091a\u093e\u0930 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0921\u093f\u0935\u093e\u0907\u0938 \u0921\u094d\u0930\u093e\u0907\u0935\u0930 OS \u0915\u0947 \u0932\u093f\u090f \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u0915\u0947 \u0938\u093e\u0925 \u092c\u093e\u0924\u091a\u0940\u0924 \u0915\u0930\u0928\u093e \u0906\u0935\u0936\u094d\u092f\u0915 \u0939\u0948\u0902\u0964</p> </li> <li> <p>b) \u0938\u093e\u092e\u093e\u0928\u094d\u092f \u0938\u0949\u092b\u094d\u091f\u0935\u0947\u092f\u0930     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Microsoft Word \u090f\u0915 \u0938\u093e\u092e\u093e\u0928\u094d\u092f \u092a\u094d\u0930\u092f\u094b\u091c\u0928 \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928 \u0939\u0948 \u091c\u094b \u0936\u092c\u094d\u0926 \u092a\u094d\u0930\u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>b) \u092e\u0947\u092e\u094b\u0930\u0940 \u0915\u093e \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0915\u0930\u0928\u093e     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: OS \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u0915\u0940 \u092e\u0947\u092e\u094b\u0930\u0940 \u0914\u0930 \u0938\u0902\u0938\u093e\u0927\u0928\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>c) \u092e\u0936\u0940\u0928 \u092d\u093e\u0937\u093e     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092e\u0936\u0940\u0928 \u092d\u093e\u0937\u093e \u092c\u093e\u0907\u0928\u0930\u0940 \u0915\u094b\u0921 \u0938\u0947 \u092c\u0928\u0940 \u0939\u094b\u0924\u0940 \u0939\u0948 \u091c\u093f\u0938\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u0940\u0927\u0947 \u0938\u092e\u091d \u0938\u0915\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>c) \u092f\u093e\u0926\u0943\u091a\u094d\u091b\u093f\u0915 \u0905\u092d\u093f\u0917\u092e \u092e\u0947\u092e\u094b\u0930\u0940</p> </li> <li> <p>False     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0926\u094d\u0935\u093f\u0924\u0940\u092f\u0915 \u0938\u0902\u0917\u094d\u0930\u0939\u0923 \u0917\u0948\u0930-\u0935\u093e\u0937\u094d\u092a\u0936\u0940\u0932 \u0939\u094b\u0924\u093e \u0939\u0948, \u0905\u0930\u094d\u0925\u093e\u0924\u094d \u0921\u0947\u091f\u093e \u092a\u093e\u0935\u0930 \u092c\u0902\u0926 \u0939\u094b\u0928\u0947 \u092a\u0930 \u092d\u0940 \u092c\u0928\u093e\u090f \u0930\u0916\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>b) \u0915\u0940\u092c\u094b\u0930\u094d\u0921     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0915\u0940\u092c\u094b\u0930\u094d\u0921 \u090f\u0915 \u092c\u093e\u0939\u0930\u0940 \u0909\u092a\u0915\u0930\u0923 \u0939\u0948 \u091c\u094b \u0907\u0928\u092a\u0941\u091f \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u0907\u0938\u0947 \u090f\u0915 \u092a\u0947\u0930\u093f\u092b\u0947\u0930\u0932 \u0921\u093f\u0935\u093e\u0907\u0938 \u0915\u0939\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>a) \u0915\u0948\u0936 \u092e\u0947\u092e\u094b\u0930\u0940     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0915\u0948\u0936 \u092e\u0947\u092e\u094b\u0930\u0940 \u092e\u0947\u092e\u094b\u0930\u0940 \u092a\u0926\u093e\u0928\u0941\u0915\u094d\u0930\u092e \u092e\u0947\u0902 \u0938\u092c\u0938\u0947 \u0924\u0947\u091c \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u0940 \u092e\u0947\u092e\u094b\u0930\u0940 \u0939\u0948\u0964</p> </li> <li> <p>b) \u092a\u0902\u091a \u0915\u093e\u0930\u094d\u0921     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092a\u094d\u0930\u093e\u0930\u0902\u092d\u093f\u0915 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0928\u0947 \u092e\u0947\u092e\u094b\u0930\u0940 \u0914\u0930 \u0907\u0928\u092a\u0941\u091f \u0915\u0947 \u0932\u093f\u090f \u092a\u0902\u091a \u0915\u093e\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e\u0964</p> </li> <li> <p>b) \u0911\u092a\u0930\u0947\u091f\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u094b \u092e\u0947\u092e\u094b\u0930\u0940 \u092e\u0947\u0902 \u0932\u094b\u0921 \u0915\u0930\u0928\u093e     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092c\u0942\u091f\u093f\u0902\u0917 \u090f\u0915 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0936\u0941\u0930\u0942 \u0915\u0930\u0928\u0947 \u0914\u0930 OS \u0932\u094b\u0921 \u0915\u0930\u0928\u0947 \u0915\u0940 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0915\u094b \u0938\u0902\u0926\u0930\u094d\u092d\u093f\u0924 \u0915\u0930\u0924\u0940 \u0939\u0948\u0964</p> </li> <li> <p>True     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: ROM \u0917\u0948\u0930-\u0935\u093e\u0937\u094d\u092a\u0936\u0940\u0932 \u0939\u0948, \u0905\u0930\u094d\u0925\u093e\u0924\u094d \u092f\u0939 \u092c\u093f\u0928\u093e \u092a\u093e\u0935\u0930 \u0915\u0947 \u092d\u0940 \u0921\u0947\u091f\u093e \u092c\u0928\u093e\u090f \u0930\u0916\u0924\u0940 \u0939\u0948\u0964</p> </li> </ol>"},{"location":"hi/chapters/qbank_ans/#2","title":"\u092f\u0942\u0928\u093f\u091f 2: \u090f\u0928\u094d\u0915\u094b\u0921\u093f\u0902\u0917 \u092f\u094b\u091c\u0928\u093e\u090f\u0901 \u0914\u0930 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u0940","text":"<ol> <li> <p>b) \u0905\u092e\u0947\u0930\u093f\u0915\u0940 \u092e\u093e\u0928\u0915 \u0915\u094b\u0921 \u0938\u0942\u091a\u0928\u093e \u0906\u0926\u093e\u0928-\u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0947 \u0932\u093f\u090f</p> </li> <li> <p>b) 7    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092e\u093e\u0928\u0915 ASCII 7 \u092c\u093f\u091f\u094d\u0938 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u093e \u0939\u0948, \u091c\u093f\u0938\u0938\u0947 128 \u0935\u0930\u094d\u0923\u094b\u0902 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u092e\u093f\u0932\u0924\u0940 \u0939\u0948\u0964</p> </li> <li> <p>b) Unicode    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Unicode \u0932\u0917\u092d\u0917 \u0939\u0930 \u092d\u093e\u0937\u093e \u0915\u0947 \u0935\u0930\u094d\u0923\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>True</p> </li> <li> <p>a) 2    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092c\u093e\u0907\u0928\u0930\u0940 \u0915\u0947\u0935\u0932 \u0926\u094b \u0905\u0902\u0915\u094b\u0902, 0 \u0914\u0930 1 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>b) 11    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092c\u093e\u0907\u0928\u0930\u0940 \u092e\u0947\u0902 <code>1011</code> \u0915\u093e \u0926\u0936\u092e\u0932\u0935 \u092e\u0947\u0902 11 \u0915\u0947 \u092c\u0930\u093e\u092c\u0930 \u0939\u0948\u0964</p> </li> <li> <p>d) \u092c\u0947\u0938 16</p> </li> <li> <p>c) 1111</p> </li> <li> <p>False    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0911\u0915\u094d\u091f\u0932 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u092c\u0947\u0938 8 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0940 \u0939\u0948, \u0928 \u0915\u093f 16 \u0915\u093e\u0964</p> </li> <li> <p>b) FF</p> </li> <li> <p>c) 163</p> </li> <li> <p>b) 65</p> </li> <li> <p>c) 10     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092c\u093e\u0907\u0928\u0930\u0940 \u092e\u0947\u0902 <code>1010</code> \u0915\u093e \u0926\u0936\u092e\u0932\u0935 \u092e\u0947\u0902 10 \u0915\u0947 \u092c\u0930\u093e\u092c\u0930 \u0939\u0948\u0964</p> </li> <li> <p>c) Unicode</p> </li> <li> <p>a) 12</p> </li> <li> <p>b) 128</p> </li> <li> <p>True</p> </li> <li> <p>0 \u0914\u0930 1     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092c\u093e\u0907\u0928\u0930\u0940 \u0915\u0947\u0935\u0932 0 \u0914\u0930 1 \u0905\u0902\u0915\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>a) C</p> </li> <li> <p>b) 21</p> </li> </ol>"},{"location":"hi/chapters/qbank_ans/#3","title":"\u092f\u0942\u0928\u093f\u091f 3: \u0909\u092d\u0930\u0924\u0940 \u092a\u094d\u0930\u0935\u0943\u0924\u094d\u0924\u093f\u092f\u093e\u0901","text":"<ol> <li> <p>c) \u092e\u093e\u0928\u0935 \u092c\u0941\u0926\u094d\u0927\u093f\u092e\u0924\u094d\u0924\u093e \u0915\u093e \u0905\u0928\u0941\u0915\u0930\u0923 \u0915\u0930\u0928\u093e</p> </li> <li> <p>True</p> </li> <li> <p>b) \u0935\u0949\u092f\u0938 \u0905\u0938\u093f\u0938\u094d\u091f\u0947\u0902\u091f \u091c\u0948\u0938\u0947 Siri    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0935\u0949\u092f\u0938 \u0905\u0938\u093f\u0938\u094d\u091f\u0947\u0902\u091f AI \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u0924\u093e\u0915\u093f \u0935\u0947 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u0947 \u0906\u0926\u0947\u0936\u094b\u0902 \u0915\u094b \u0938\u092e\u091d \u0938\u0915\u0947\u0902 \u0914\u0930 \u0909\u0928\u0915\u093e \u0909\u0924\u094d\u0924\u0930 \u0926\u0947 \u0938\u0915\u0947\u0902\u0964</p> </li> <li> <p>b) \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0911\u092b \u0925\u093f\u0902\u0917\u094d\u0938</p> </li> <li> <p>False    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092c\u093f\u0917 \u0921\u0947\u091f\u093e \u092c\u0921\u093c\u0947 \u092a\u0948\u092e\u093e\u0928\u0947 \u092a\u0930 \u0921\u0947\u091f\u093e \u0915\u093e \u0938\u0902\u0926\u0930\u094d\u092d \u0926\u0947\u0924\u093e \u0939\u0948 \u091c\u094b \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 \u0905\u0938\u0902\u0930\u091a\u093f\u0924 \u0914\u0930 \u092a\u093e\u0930\u0902\u092a\u0930\u093f\u0915 \u0924\u0930\u0940\u0915\u094b\u0902 \u0938\u0947 \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u0915\u0920\u093f\u0928 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>a) \u092c\u093f\u0917 \u0921\u0947\u091f\u093e</p> </li> <li> <p>b) \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0936\u0939\u0930\u094b\u0902 \u0915\u094b \u0905\u0927\u093f\u0915 \u0938\u0924\u0924 \u0914\u0930 \u0915\u0941\u0936\u0932 \u092c\u0928\u093e\u0928\u093e</p> </li> <li> <p>a) \u0935\u093f\u0924\u094d\u0924\u0940\u092f \u0932\u0947\u0928-\u0926\u0947\u0928 \u0914\u0930 \u0915\u094d\u0930\u093f\u092a\u094d\u091f\u094b\u0915\u0941\u0930\u0947\u0902\u0938\u0940</p> </li> <li> <p>True</p> </li> <li> <p>c) 5G</p> </li> <li> <p>c) \u0932\u0948\u092a\u091f\u0949\u092a     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0932\u0948\u092a\u091f\u0949\u092a \u0915\u094b IoT \u0909\u092a\u0915\u0930\u0923 \u0928\u0939\u0940\u0902 \u092e\u093e\u0928\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u091c\u092c\u0915\u093f \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0925\u0930\u094d\u092e\u094b\u0938\u094d\u091f\u0947\u091f \u0914\u0930 \u092b\u093f\u091f\u0928\u0947\u0938 \u091f\u094d\u0930\u0948\u0915\u0930 \u0939\u0948\u0902\u0964</p> </li> <li> <p>c) IoT \u0914\u0930 \u0938\u0947\u0902\u0938\u0930</p> </li> <li> <p>b) \u092e\u0936\u0940\u0928 \u0932\u0930\u094d\u0928\u093f\u0902\u0917     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092e\u0936\u0940\u0928 \u0932\u0930\u094d\u0928\u093f\u0902\u0917 \u092e\u0936\u0940\u0928\u094b\u0902 \u0915\u094b \u0921\u0947\u091f\u093e \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u0938\u0941\u0927\u093e\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0940 \u0939\u0948\u0964</p> </li> <li> <p>False     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0915\u094d\u0932\u093e\u0909\u0921 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u0906\u092a\u0915\u094b \u0921\u0947\u091f\u093e \u0915\u094b \u092c\u093e\u0939\u0930\u0940 \u0938\u0930\u094d\u0935\u0930\u094b\u0902 \u092a\u0930 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0940 \u0939\u0948, \u0928 \u0915\u093f \u0905\u092a\u0928\u0947 \u0938\u094d\u0935\u092f\u0902 \u0915\u0947 \u0939\u093e\u0930\u094d\u0921\u0935\u0947\u092f\u0930 \u092a\u0930\u0964</p> </li> <li> <p>b) \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u091a\u0941\u0930\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0928\u0915\u0932\u0940 \u0908\u092e\u0947\u0932 \u092d\u0947\u091c\u0928\u093e</p> </li> <li> <p>c) \u092e\u091c\u092c\u0942\u0924     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092c\u094d\u0932\u0949\u0915\u091a\u0947\u0928 \u0905\u092a\u0928\u0947 \u0935\u093f\u0915\u0947\u0928\u094d\u0926\u094d\u0930\u0940\u0915\u0943\u0924 \u0914\u0930 \u0915\u094d\u0930\u093f\u092a\u094d\u091f\u094b\u0917\u094d\u0930\u093e\u092b\u093f\u0915 \u0938\u094d\u0935\u092d\u093e\u0935 \u0915\u0947 \u0915\u093e\u0930\u0923 \u0905\u0924\u094d\u092f\u0927\u093f\u0915 \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0939\u0948\u0964</p> </li> <li> <p>b) \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u092a\u0930 \u0921\u0947\u091f\u093e \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0914\u0930 \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930\u0928\u093e</p> </li> <li> <p>False     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0930\u094b\u092c\u094b\u091f\u093f\u0915\u094d\u0938 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0915\u094d\u0937\u0947\u0924\u094d\u0930\u094b\u0902 \u092e\u0947\u0902 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u091c\u093f\u0938\u092e\u0947\u0902 \u0938\u094d\u0935\u093e\u0938\u094d\u0925\u094d\u092f \u0926\u0947\u0916\u092d\u093e\u0932, \u0936\u093f\u0915\u094d\u0937\u093e, \u0914\u0930 \u0918\u0930\u0947\u0932\u0942 \u0938\u094d\u0935\u091a\u093e\u0932\u0928 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902\u0964</p> </li> <li> <p>a) \u0909\u091a\u094d\u091a \u0917\u0924\u093f \u0914\u0930 \u0915\u092e \u0935\u093f\u0932\u0902\u092c\u0924\u093e</p> </li> <li> <p>b) \u0930\u094b\u092c\u094b\u091f\u093f\u0915\u094d\u0938</p> </li> </ol>"},{"location":"hi/chapters/qbank_ans/#4","title":"\u092f\u0942\u0928\u093f\u091f 4: \u0938\u092e\u0938\u094d\u092f\u093e \u0938\u092e\u093e\u0927\u093e\u0928","text":"<ol> <li> <p>c) \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0928\u093e</p> </li> <li> <p>b) \u0915\u093f\u0938\u0940 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u0939\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0915\u094d\u0930\u092e\u092c\u0926\u094d\u0927 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e</p> </li> <li> <p>True    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092b\u094d\u0932\u094b\u091a\u093e\u0930\u094d\u091f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u090f\u0932\u094d\u0917\u094b\u0930\u093f\u0926\u092e \u0915\u093e \u0926\u0943\u0936\u094d\u092f \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>c) \u0939\u0940\u0930\u093e    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092b\u094d\u0932\u094b\u091a\u093e\u0930\u094d\u091f \u092e\u0947\u0902 \u0939\u0940\u0930\u0947 \u0928\u093f\u0930\u094d\u0923\u092f \u092c\u093f\u0902\u0926\u0941\u0913\u0902 (\u0939\u093e\u0902/\u0928\u0939\u0940\u0902 \u092a\u094d\u0930\u0936\u094d\u0928) \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>b) \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u0924\u093e\u0930\u094d\u0915\u093f\u0915 \u091a\u0930\u0923\u094b\u0902 \u092e\u0947\u0902 \u0935\u093f\u092d\u093e\u091c\u093f\u0924 \u0915\u0930\u0928\u093e</p> </li> <li> <p>False    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u090f\u0932\u094d\u0917\u094b\u0930\u093f\u0926\u092e \u0915\u0947 \u0905\u0938\u094d\u0924\u093f\u0924\u094d\u0935 \u0915\u0947 \u0932\u093f\u090f \u0915\u094b\u0921 \u092e\u0947\u0902 \u0932\u093e\u0917\u0942 \u0939\u094b\u0928\u093e \u0906\u0935\u0936\u094d\u092f\u0915 \u0928\u0939\u0940\u0902 \u0939\u0948\u0964</p> </li> <li> <p>c) \u0905\u0928\u0941\u0915\u094d\u0930\u092e</p> </li> <li> <p>b) \u092f\u0926\u093f-\u0928\u0939\u0940\u0902 \u0915\u0925\u0928</p> </li> <li> <p>a) \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f</p> </li> <li> <p>True     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u090f\u0915 <code>while</code> \u0932\u0942\u092a \u0924\u092c \u0924\u0915 \u091a\u0932\u0924\u093e \u0939\u0948 \u091c\u092c \u0924\u0915 \u0928\u093f\u0930\u094d\u0926\u093f\u0937\u094d\u091f \u0936\u0930\u094d\u0924 \u0917\u0932\u0924 \u0928\u0939\u0940\u0902 \u0939\u094b \u091c\u093e\u0924\u0940\u0964</p> </li> <li> <p>c) \u090f\u0932\u094d\u0917\u094b\u0930\u093f\u0926\u092e</p> </li> <li> <p>a) \u0938\u092e\u093e\u0927\u093e\u0928 \u0915\u0940 \u0926\u0915\u094d\u0937\u0924\u093e \u0915\u093e \u092e\u0942\u0932\u094d\u092f\u093e\u0902\u0915\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f</p> </li> <li> <p>d) \u0921\u093f\u092c\u0917\u093f\u0902\u0917     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0921\u093f\u092c\u0917\u093f\u0902\u0917 \u0915\u094b\u0921 \u092e\u0947\u0902 \u0924\u094d\u0930\u0941\u091f\u093f\u092f\u094b\u0902 \u0915\u094b \u0916\u094b\u091c\u0928\u0947 \u0914\u0930 \u0920\u0940\u0915 \u0915\u0930\u0928\u0947 \u0915\u0940 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0939\u0948, \u092f\u0939 \u090f\u0915 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u0938\u0902\u0930\u091a\u0928\u093e \u0928\u0939\u0940\u0902 \u0939\u0948\u0964</p> </li> <li> <p>b) \u092f\u0926\u093f \u0915\u0925\u0928</p> </li> <li> <p>True</p> </li> <li> <p>c) \u092f\u0926\u093f</p> </li> <li> <p>a) \u092f\u0926\u093f-\u0928\u0939\u0940\u0902</p> </li> <li> <p>b) \u0915\u093f\u0938\u0940 \u0938\u094d\u0925\u093f\u0924\u093f \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0926\u094b \u0935\u093f\u0915\u0932\u094d\u092a\u094b\u0902 \u0915\u0947 \u092c\u0940\u091a \u091a\u092f\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f</p> </li> <li> <p>True</p> </li> <li> <p>c) \u0926\u0943\u0936\u094d\u092f \u091a\u093f\u0924\u094d\u0930\u0923</p> </li> </ol>"},{"location":"hi/chapters/qbank_ans/#5a","title":"\u092f\u0942\u0928\u093f\u091f 5a: \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u0923 \u092a\u094d\u0930\u0935\u093e\u0939 \u0914\u0930 \u092b\u093c\u0902\u0915\u094d\u0936\u0928","text":"<ol> <li> <p>a) \u0905\u0928\u0941\u0915\u094d\u0930\u092e    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0921\u093f\u092b\u093c\u0949\u0932\u094d\u091f \u0930\u0942\u092a \u0938\u0947, \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u092e\u0947\u0902 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u094b \u0905\u0928\u0941\u0915\u094d\u0930\u092e \u092e\u0947\u0902 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>b) \u092c\u094d\u0930\u0947\u0915</p> </li> <li> <p>\u0917\u0932\u0924    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>while</code> \u0932\u0942\u092a \u0938\u093e\u092e\u093e\u0928\u094d\u092f\u0924\u0903 \u0924\u092c \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u091c\u092c \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f\u092f\u094b\u0902 \u0915\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u0939\u0932\u0947 \u0938\u0947 \u091c\u094d\u091e\u093e\u0924 \u0928\u0939\u0940\u0902 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964</p> </li> <li> <p>a) \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f \u0915\u094b \u0938\u092e\u093e\u092a\u094d\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u0905\u0917\u0932\u0947 \u092a\u0930 \u091c\u093e\u0924\u093e \u0939\u0948</p> </li> <li> <p>b) def</p> </li> <li> <p>b) for \u0932\u0942\u092a</p> </li> <li> <p>b) def</p> </li> <li> <p>\u0938\u0924\u094d\u092f</p> </li> <li> <p>a) \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0938\u0947 \u092c\u093e\u0939\u0930 \u0928\u093f\u0915\u0932\u0928\u0947 \u0914\u0930 \u090f\u0915 \u092e\u093e\u0928 \u0935\u093e\u092a\u0938 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f</p> </li> <li> <p>c) \u0932\u0942\u092a</p> </li> <li> <p>b) \u091a\u092f\u0928</p> </li> <li> <p>b) \u0932\u0942\u092a \u0915\u094b \u092a\u0942\u0930\u0940 \u0924\u0930\u0939 \u0938\u0947 \u0938\u092e\u093e\u092a\u094d\u0924 \u0915\u0930\u0924\u093e \u0939\u0948</p> </li> <li> <p>\u0938\u0924\u094d\u092f</p> </li> <li> <p>a) def function_name():</p> </li> <li> <p>b) for</p> </li> <li> <p>b) if-else \u0938\u094d\u091f\u0947\u091f\u092e\u0947\u0902\u091f</p> </li> <li> <p>\u0938\u0924\u094d\u092f</p> </li> <li> <p>b) 0, 1, 2</p> </li> <li> <p>b) \u092c\u094d\u0930\u0947\u0915</p> </li> <li> <p>a) \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f \u0915\u093e \u092c\u093e\u0915\u0940 \u0939\u093f\u0938\u094d\u0938\u093e \u091b\u094b\u0921\u093c\u0947\u0902 \u0914\u0930 \u0905\u0917\u0932\u0947 \u092a\u0930 \u091c\u093e\u090f\u0901</p> </li> </ol>"},{"location":"hi/chapters/qbank_ans/#5b","title":"\u092f\u0942\u0928\u093f\u091f 5b: \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917\u094d\u0938 \u0914\u0930 \u0938\u0942\u091a\u093f\u092f\u093e\u0901","text":"<ol> <li> <p>c) \u0909\u0926\u094d\u0927\u0930\u0923\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e</p> </li> <li> <p>b) e    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0905\u0928\u0941\u0915\u094d\u0930\u092e\u093e\u0902\u0915 0 \u0938\u0947 \u0936\u0941\u0930\u0942 \u0939\u094b\u0924\u093e \u0939\u0948, \u0907\u0938\u0932\u093f\u090f \u0905\u0928\u0941\u0915\u094d\u0930\u092e\u093e\u0902\u0915 1 \u0926\u0942\u0938\u0930\u0947 \u0935\u0930\u094d\u0923 \u0915\u094b \u0938\u0902\u0926\u0930\u094d\u092d\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>\u0917\u0932\u0924    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Python \u092e\u0947\u0902 \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917\u094d\u0938 \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f \u0939\u094b\u0924\u0940 \u0939\u0948\u0902, \u0905\u0930\u094d\u0925\u093e\u0924\u094d \u0909\u0928\u094d\u0939\u0947\u0902 \u0928\u093f\u0930\u094d\u092e\u093e\u0923 \u0915\u0947 \u092c\u093e\u0926 \u092c\u0926\u0932 \u0928\u0939\u0940\u0902 \u0938\u0915\u0924\u0947\u0964</p> </li> <li> <p>a) <code>append()</code> \u0935\u093f\u0927\u093f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e</p> </li> <li> <p>a) 3</p> </li> <li> <p>a) \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f</p> </li> <li> <p>\u0938\u0924\u094d\u092f</p> </li> <li> <p>a) 0</p> </li> <li> <p>b) \u0938\u0942\u091a\u0940 \u0915\u0940 \u0932\u0902\u092c\u093e\u0908 \u0932\u094c\u091f\u093e\u0924\u093e \u0939\u0948</p> </li> <li> <p>b) -1</p> </li> <li> <p>a) <code>[1, 2, 3]</code></p> </li> <li> <p>\u0938\u0924\u094d\u092f</p> </li> <li> <p>b) th</p> </li> <li> <p>c) append()</p> </li> <li> <p>b) [10, 20, 30, 40, 50]</p> </li> <li> <p>c) \u0938\u092e\u093e\u092a\u094d\u0924\u093f</p> </li> <li> <p>\u0938\u0924\u094d\u092f</p> </li> <li> <p>b) \u0915\u0947\u0932\u093e</p> </li> <li> <p>d) \u0926\u094b\u0928\u094b\u0902 a \u0914\u0930 c</p> </li> <li> <p>b) \u0928\u093f\u0930\u094d\u0926\u093f\u0937\u094d\u091f</p> </li> </ol>"},{"location":"hi/chapters/qbank_ans/#5c","title":"\u092f\u0942\u0928\u093f\u091f 5c: \u091f\u094d\u092f\u0942\u092a\u0932\u094d\u0938 \u0914\u0930 \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940\u091c\u093c","text":"<ol> <li> <p>c) \u0917\u094b\u0932 \u0915\u094b\u0937\u094d\u0920\u0915\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e</p> </li> <li> <p>\u0917\u0932\u0924    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Python \u092e\u0947\u0902 \u091f\u094d\u092f\u0942\u092a\u0932\u094d\u0938 \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f \u0939\u094b\u0924\u0947 \u0939\u0948\u0902, \u0905\u0930\u094d\u0925\u093e\u0924\u094d \u0909\u0928\u094d\u0939\u0947\u0902 \u090f\u0915 \u092c\u093e\u0930 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u092c\u093e\u0926 \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0928\u0939\u0940\u0902 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e\u0964</p> </li> <li> <p>b) 2</p> </li> <li> <p>b) \u090f\u0915 \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u092e\u0947\u0902 \u090f\u0915 \u0915\u0941\u0902\u091c\u0940 \u0914\u0930 \u0907\u0938\u0915\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u092e\u093e\u0928 \u0915\u093e \u0938\u0902\u092f\u094b\u091c\u0928</p> </li> <li> <p>c) update()</p> </li> <li> <p>b) \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f</p> </li> <li> <p>\u0938\u0924\u094d\u092f</p> </li> <li> <p>a) \u0910\u0932\u093f\u0938</p> </li> <li> <p>c) <code>{}</code></p> </li> <li> <p>a) \u0915\u0941\u0932 \u0938\u0902\u0916\u094d\u092f\u093e</p> </li> <li> <p>a) <code>(1, 2, 3)</code></p> </li> <li> <p>\u0917\u0932\u0924     \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u0915\u0941\u0902\u091c\u0940 \u0915\u094b \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u0915\u093e\u0930\u094b\u0902 \u091c\u0948\u0938\u0947 \u0915\u093f \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917\u094d\u0938, \u092a\u0942\u0930\u094d\u0923\u093e\u0902\u0915, \u092f\u093e \u091f\u094d\u092f\u0942\u092a\u0932\u094d\u0938 \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f, \u0932\u0947\u0915\u093f\u0928 \u0938\u0942\u091a\u093f\u092f\u093e\u0901 \u0928\u0939\u0940\u0902\u0964</p> </li> <li> <p>c) 40</p> </li> <li> <p>a) pop()</p> </li> <li> <p>b) \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f</p> </li> <li> <p>b) 2</p> </li> <li> <p>\u0938\u0924\u094d\u092f</p> </li> <li> <p>b) 31</p> </li> <li> <p>a) tuple[0]</p> </li> <li> <p>a) keys()</p> </li> </ol>"},{"location":"hi/chapters/qbank_ans/#6","title":"\u092f\u0942\u0928\u093f\u091f 6: \u0938\u093e\u092e\u093e\u091c\u093f\u0915 \u092a\u094d\u0930\u092d\u093e\u0935","text":"<ol> <li> <p>b) \u0906\u092a\u0915\u0947 \u0911\u0928\u0932\u093e\u0907\u0928 \u0917\u0924\u093f\u0935\u093f\u0927\u093f\u092f\u094b\u0902 \u0926\u094d\u0935\u093e\u0930\u093e \u091b\u094b\u0921\u093c\u093e \u0917\u092f\u093e \u0921\u0947\u091f\u093e \u0915\u093e \u0928\u093f\u0936\u093e\u0928</p> </li> <li> <p>\u0938\u0924\u094d\u092f</p> </li> <li> <p>b) \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u094b \u0938\u093e\u0907\u092c\u0930 \u0905\u092a\u0930\u093e\u0927 \u0938\u0947 \u092c\u091a\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f</p> </li> <li> <p>a) \u092c\u094c\u0926\u094d\u0927\u093f\u0915 \u0938\u0902\u092a\u0924\u094d\u0924\u093f \u0905\u0927\u093f\u0915\u093e\u0930</p> </li> <li> <p>d) \u0915\u0949\u092a\u0940\u0930\u093e\u0907\u091f \u0909\u0932\u094d\u0932\u0902\u0918\u0928    \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0915\u0949\u092a\u0940\u0930\u093e\u0907\u091f \u0909\u0932\u094d\u0932\u0902\u0918\u0928 \u090f\u0915 IPR \u0909\u0932\u094d\u0932\u0902\u0918\u0928 \u0939\u0948, \u0928 \u0915\u093f \u0938\u093e\u0907\u092c\u0930 \u0905\u092a\u0930\u093e\u0927\u0964</p> </li> <li> <p>b) \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e</p> </li> <li> <p>\u0938\u0924\u094d\u092f</p> </li> <li> <p>c) \u0909\u0924\u094d\u092a\u0940\u0921\u093c\u0928 \u0914\u0930 \u092d\u093e\u0935\u0928\u093e\u0924\u094d\u092e\u0915 \u0924\u0928\u093e\u0935</p> </li> <li> <p>d) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u0938\u092d\u0940</p> </li> <li> <p>a) IT</p> </li> <li> <p>\u0938\u0924\u094d\u092f</p> </li> <li> <p>a) \u090f\u0915 \u0938\u093e\u0907\u092c\u0930 \u0905\u092a\u0930\u093e\u0927 \u091c\u0939\u093e\u0902 \u0939\u092e\u0932\u093e\u0935\u0930 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u094b \u0938\u0902\u0935\u0947\u0926\u0928\u0936\u0940\u0932 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0926\u0947\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0927\u094b\u0916\u093e \u0926\u0947\u0924\u0947 \u0939\u0948\u0902</p> </li> <li> <p>b) \u092e\u0928 \u0915\u0940 \u0930\u091a\u0928\u093e\u090f\u0901</p> </li> <li> <p>\u0938\u0924\u094d\u092f</p> </li> <li> <p>a) \u092e\u091c\u092c\u0942\u0924 \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e</p> </li> <li> <p>b) \u0936\u093e\u0930\u0940\u0930\u093f\u0915 \u0924\u0928\u093e\u0935 \u0914\u0930 \u0938\u094d\u0935\u093e\u0938\u094d\u0925\u094d\u092f \u092e\u0941\u0926\u094d\u0926\u0947</p> </li> <li> <p>b) 20-20-20 \u0928\u093f\u092f\u092e</p> </li> <li> <p>d) \u0909\u092a\u0930\u094b\u0915\u094d\u0924 \u0938\u092d\u0940</p> </li> <li> <p>\u0938\u0924\u094d\u092f</p> </li> <li> <p>b) \u0928\u093f\u0930\u094d\u092e\u093e\u0924\u093e\u0913\u0902 \u0914\u0930 \u0928\u0935\u092a\u094d\u0930\u0935\u0930\u094d\u0924\u0915\u094b\u0902 \u0915\u0947 \u0905\u0927\u093f\u0915\u093e\u0930\u094b\u0902 \u0915\u0940 \u0930\u0915\u094d\u0937\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f</p> </li> </ol>"},{"location":"hi/chapters/qbank_ans/#7","title":"\u092f\u0942\u0928\u093f\u091f 7: \u0935\u094d\u092f\u093e\u0935\u0939\u093e\u0930\u093f\u0915 \u092a\u094d\u0930\u0936\u094d\u0928","text":"<ol> <li> <p>a) Hello computer world!</p> </li> <li> <p>a) 12</p> </li> <li> <p>a) 5</p> </li> <li> <p>\u0938\u0924\u094d\u092f</p> </li> <li> <p>b) 10 5</p> </li> <li> <p>a) 0.621371</p> </li> <li> <p>a) (Celsius * 9/5) + 32</p> </li> <li> <p>b) 12</p> </li> <li> <p>\u0938\u0924\u094d\u092f</p> </li> <li> <p>a) [1, 2, 3, 4]</p> </li> </ol>"}]}